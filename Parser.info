-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------

state 86 contains 13 reduce/reduce conflicts.

terminal "++" is unused
terminal "--" is unused
terminal string is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	program -> "fun" "main" "(" ")" block              (1)
	block -> "{" stmt_list "}"                         (2)
	stmt_list ->                                       (3)
	stmt_list -> stmt stmt_list                        (4)
	stmt -> decl_stmt                                  (5)
	stmt -> assign_stmt                                (6)
	stmt -> if_stmt                                    (7)
	stmt -> while_stmt                                 (8)
	stmt -> expr_stmt                                  (9)
	stmt -> "print" "(" expr ")"                       (10)
	stmt -> "readln" "(" ")"                           (11)
	expr_stmt -> expr                                  (12)
	expr -> assign_expr                                (13)
	assign_expr -> id "=" assign_expr                  (14)
	assign_expr -> or_expr                             (15)
	or_expr -> or_expr "||" and_expr                   (16)
	or_expr -> and_expr                                (17)
	and_expr -> and_expr "&&" eq_expr                  (18)
	and_expr -> eq_expr                                (19)
	eq_expr -> eq_expr "==" rel_expr                   (20)
	eq_expr -> eq_expr "!=" rel_expr                   (21)
	eq_expr -> rel_expr                                (22)
	rel_expr -> rel_expr "<" add_expr                  (23)
	rel_expr -> rel_expr "<=" add_expr                 (24)
	rel_expr -> rel_expr ">" add_expr                  (25)
	rel_expr -> rel_expr ">=" add_expr                 (26)
	rel_expr -> add_expr                               (27)
	add_expr -> add_expr "+" mul_expr                  (28)
	add_expr -> add_expr "-" mul_expr                  (29)
	add_expr -> mul_expr                               (30)
	mul_expr -> mul_expr "*" unary_expr                (31)
	mul_expr -> mul_expr "/" unary_expr                (32)
	mul_expr -> mul_expr "%" unary_expr                (33)
	mul_expr -> unary_expr                             (34)
	unary_expr -> "!" unary_expr                       (35)
	unary_expr -> primary                              (36)
	primary -> num                                     (37)
	primary -> id                                      (38)
	primary -> "true"                                  (39)
	primary -> "false"                                 (40)
	primary -> "(" expr ")"                            (41)
	decl_stmt -> "var" id "=" expr                     (42)
	decl_stmt -> "val" id "=" expr                     (43)
	assign_stmt -> id "=" expr                         (44)
	if_stmt -> "if" "(" expr ")" block                 (45)
	if_stmt -> "if" "(" expr ")" block "else" block    (46)
	while_stmt -> "while" "(" expr ")" block           (47)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	num            { TNum $$ }
	"fun"          { TFun }
	"main"         { TMain }
	"+"            { TPlus }
	"-"            { TMinus }
	"*"            { TMult }
	"/"            { TDiv }
	"%"            { TMod }
	"++"           { TIncr }
	"--"           { TDecr }
	"true"         { TTrue }
	"false"        { TFalse }
	"print"        { TPrint }
	"readln"       { TReadln }
	"val"          { TVal }
	"var"          { TVar }
	"="            { TAssign }
	"while"        { TWhile }
	"if"           { TIf }
	"else"         { TElse }
	"("            { TLParen }
	")"            { TRParen }
	"{"            { TLBraces }
	"}"            { TRBraces }
	"=="           { TEqual }
	"!="           { TDifferent }
	">"            { TGreater }
	"<"            { TLess }
	">="           { TGreaterEq }
	"<="           { TLessEq }
	"!"            { TNot }
	"||"           { TOr }
	"&&"           { TAnd }
	string         { TString $$ }
	id             { TId $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	program         rule  1
	block           rule  2
	stmt_list       rules 3, 4
	stmt            rules 5, 6, 7, 8, 9, 10, 11
	expr_stmt       rule  12
	expr            rule  13
	assign_expr     rules 14, 15
	or_expr         rules 16, 17
	and_expr        rules 18, 19
	eq_expr         rules 20, 21, 22
	rel_expr        rules 23, 24, 25, 26, 27
	add_expr        rules 28, 29, 30
	mul_expr        rules 31, 32, 33, 34
	unary_expr      rules 35, 36
	primary         rules 37, 38, 39, 40, 41
	decl_stmt       rules 42, 43
	assign_stmt     rule  44
	if_stmt         rules 45, 46
	while_stmt      rule  47

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . program                          (rule 0)

	"fun"          shift, and enter state 2

	program        goto state 3

State 1

	program -> . "fun" "main" "(" ")" block             (rule 1)

	"fun"          shift, and enter state 2


State 2

	program -> "fun" . "main" "(" ")" block             (rule 1)

	"main"         shift, and enter state 4


State 3

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 4

	program -> "fun" "main" . "(" ")" block             (rule 1)

	"("            shift, and enter state 5


State 5

	program -> "fun" "main" "(" . ")" block             (rule 1)

	")"            shift, and enter state 6


State 6

	program -> "fun" "main" "(" ")" . block             (rule 1)

	"{"            shift, and enter state 8

	block          goto state 7

State 7

	program -> "fun" "main" "(" ")" block .             (rule 1)

	%eof           reduce using rule 1


State 8

	block -> "{" . stmt_list "}"                        (rule 2)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"print"        shift, and enter state 29
	"readln"       shift, and enter state 30
	"val"          shift, and enter state 31
	"var"          shift, and enter state 32
	"while"        shift, and enter state 33
	"if"           shift, and enter state 34
	"("            shift, and enter state 35
	"}"            reduce using rule 3
	"!"            shift, and enter state 36
	id             shift, and enter state 37

	stmt_list      goto state 9
	stmt           goto state 10
	expr_stmt      goto state 11
	expr           goto state 12
	assign_expr    goto state 13
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21
	decl_stmt      goto state 22
	assign_stmt    goto state 23
	if_stmt        goto state 24
	while_stmt     goto state 25

State 9

	block -> "{" stmt_list . "}"                        (rule 2)

	"}"            shift, and enter state 63


State 10

	stmt_list -> stmt . stmt_list                       (rule 4)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"print"        shift, and enter state 29
	"readln"       shift, and enter state 30
	"val"          shift, and enter state 31
	"var"          shift, and enter state 32
	"while"        shift, and enter state 33
	"if"           shift, and enter state 34
	"("            shift, and enter state 35
	"}"            reduce using rule 3
	"!"            shift, and enter state 36
	id             shift, and enter state 37

	stmt_list      goto state 62
	stmt           goto state 10
	expr_stmt      goto state 11
	expr           goto state 12
	assign_expr    goto state 13
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21
	decl_stmt      goto state 22
	assign_stmt    goto state 23
	if_stmt        goto state 24
	while_stmt     goto state 25

State 11

	stmt -> expr_stmt .                                 (rule 9)

	num            reduce using rule 9
	"true"         reduce using rule 9
	"false"        reduce using rule 9
	"print"        reduce using rule 9
	"readln"       reduce using rule 9
	"val"          reduce using rule 9
	"var"          reduce using rule 9
	"while"        reduce using rule 9
	"if"           reduce using rule 9
	"("            reduce using rule 9
	"}"            reduce using rule 9
	"!"            reduce using rule 9
	id             reduce using rule 9


State 12

	expr_stmt -> expr .                                 (rule 12)

	num            reduce using rule 12
	"true"         reduce using rule 12
	"false"        reduce using rule 12
	"print"        reduce using rule 12
	"readln"       reduce using rule 12
	"val"          reduce using rule 12
	"var"          reduce using rule 12
	"while"        reduce using rule 12
	"if"           reduce using rule 12
	"("            reduce using rule 12
	"}"            reduce using rule 12
	"!"            reduce using rule 12
	id             reduce using rule 12


State 13

	expr -> assign_expr .                               (rule 13)

	num            reduce using rule 13
	"true"         reduce using rule 13
	"false"        reduce using rule 13
	"print"        reduce using rule 13
	"readln"       reduce using rule 13
	"val"          reduce using rule 13
	"var"          reduce using rule 13
	"while"        reduce using rule 13
	"if"           reduce using rule 13
	"("            reduce using rule 13
	")"            reduce using rule 13
	"}"            reduce using rule 13
	"!"            reduce using rule 13
	id             reduce using rule 13


State 14

	assign_expr -> or_expr .                            (rule 15)
	or_expr -> or_expr . "||" and_expr                  (rule 16)

	num            reduce using rule 15
	"true"         reduce using rule 15
	"false"        reduce using rule 15
	"print"        reduce using rule 15
	"readln"       reduce using rule 15
	"val"          reduce using rule 15
	"var"          reduce using rule 15
	"while"        reduce using rule 15
	"if"           reduce using rule 15
	"("            reduce using rule 15
	")"            reduce using rule 15
	"}"            reduce using rule 15
	"!"            reduce using rule 15
	"||"           shift, and enter state 61
	id             reduce using rule 15


State 15

	or_expr -> and_expr .                               (rule 17)
	and_expr -> and_expr . "&&" eq_expr                 (rule 18)

	num            reduce using rule 17
	"true"         reduce using rule 17
	"false"        reduce using rule 17
	"print"        reduce using rule 17
	"readln"       reduce using rule 17
	"val"          reduce using rule 17
	"var"          reduce using rule 17
	"while"        reduce using rule 17
	"if"           reduce using rule 17
	"("            reduce using rule 17
	")"            reduce using rule 17
	"}"            reduce using rule 17
	"!"            reduce using rule 17
	"||"           reduce using rule 17
	"&&"           shift, and enter state 60
	id             reduce using rule 17


State 16

	and_expr -> eq_expr .                               (rule 19)
	eq_expr -> eq_expr . "==" rel_expr                  (rule 20)
	eq_expr -> eq_expr . "!=" rel_expr                  (rule 21)

	num            reduce using rule 19
	"true"         reduce using rule 19
	"false"        reduce using rule 19
	"print"        reduce using rule 19
	"readln"       reduce using rule 19
	"val"          reduce using rule 19
	"var"          reduce using rule 19
	"while"        reduce using rule 19
	"if"           reduce using rule 19
	"("            reduce using rule 19
	")"            reduce using rule 19
	"}"            reduce using rule 19
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"!"            reduce using rule 19
	"||"           reduce using rule 19
	"&&"           reduce using rule 19
	id             reduce using rule 19


State 17

	eq_expr -> rel_expr .                               (rule 22)
	rel_expr -> rel_expr . "<" add_expr                 (rule 23)
	rel_expr -> rel_expr . "<=" add_expr                (rule 24)
	rel_expr -> rel_expr . ">" add_expr                 (rule 25)
	rel_expr -> rel_expr . ">=" add_expr                (rule 26)

	num            reduce using rule 22
	"true"         reduce using rule 22
	"false"        reduce using rule 22
	"print"        reduce using rule 22
	"readln"       reduce using rule 22
	"val"          reduce using rule 22
	"var"          reduce using rule 22
	"while"        reduce using rule 22
	"if"           reduce using rule 22
	"("            reduce using rule 22
	")"            reduce using rule 22
	"}"            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	">"            shift, and enter state 54
	"<"            shift, and enter state 55
	">="           shift, and enter state 56
	"<="           shift, and enter state 57
	"!"            reduce using rule 22
	"||"           reduce using rule 22
	"&&"           reduce using rule 22
	id             reduce using rule 22


State 18

	rel_expr -> add_expr .                              (rule 27)
	add_expr -> add_expr . "+" mul_expr                 (rule 28)
	add_expr -> add_expr . "-" mul_expr                 (rule 29)

	num            reduce using rule 27
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"true"         reduce using rule 27
	"false"        reduce using rule 27
	"print"        reduce using rule 27
	"readln"       reduce using rule 27
	"val"          reduce using rule 27
	"var"          reduce using rule 27
	"while"        reduce using rule 27
	"if"           reduce using rule 27
	"("            reduce using rule 27
	")"            reduce using rule 27
	"}"            reduce using rule 27
	"=="           reduce using rule 27
	"!="           reduce using rule 27
	">"            reduce using rule 27
	"<"            reduce using rule 27
	">="           reduce using rule 27
	"<="           reduce using rule 27
	"!"            reduce using rule 27
	"||"           reduce using rule 27
	"&&"           reduce using rule 27
	id             reduce using rule 27


State 19

	add_expr -> mul_expr .                              (rule 30)
	mul_expr -> mul_expr . "*" unary_expr               (rule 31)
	mul_expr -> mul_expr . "/" unary_expr               (rule 32)
	mul_expr -> mul_expr . "%" unary_expr               (rule 33)

	num            reduce using rule 30
	"+"            reduce using rule 30
	"-"            reduce using rule 30
	"*"            shift, and enter state 49
	"/"            shift, and enter state 50
	"%"            shift, and enter state 51
	"true"         reduce using rule 30
	"false"        reduce using rule 30
	"print"        reduce using rule 30
	"readln"       reduce using rule 30
	"val"          reduce using rule 30
	"var"          reduce using rule 30
	"while"        reduce using rule 30
	"if"           reduce using rule 30
	"("            reduce using rule 30
	")"            reduce using rule 30
	"}"            reduce using rule 30
	"=="           reduce using rule 30
	"!="           reduce using rule 30
	">"            reduce using rule 30
	"<"            reduce using rule 30
	">="           reduce using rule 30
	"<="           reduce using rule 30
	"!"            reduce using rule 30
	"||"           reduce using rule 30
	"&&"           reduce using rule 30
	id             reduce using rule 30


State 20

	mul_expr -> unary_expr .                            (rule 34)

	num            reduce using rule 34
	"+"            reduce using rule 34
	"-"            reduce using rule 34
	"*"            reduce using rule 34
	"/"            reduce using rule 34
	"%"            reduce using rule 34
	"true"         reduce using rule 34
	"false"        reduce using rule 34
	"print"        reduce using rule 34
	"readln"       reduce using rule 34
	"val"          reduce using rule 34
	"var"          reduce using rule 34
	"while"        reduce using rule 34
	"if"           reduce using rule 34
	"("            reduce using rule 34
	")"            reduce using rule 34
	"}"            reduce using rule 34
	"=="           reduce using rule 34
	"!="           reduce using rule 34
	">"            reduce using rule 34
	"<"            reduce using rule 34
	">="           reduce using rule 34
	"<="           reduce using rule 34
	"!"            reduce using rule 34
	"||"           reduce using rule 34
	"&&"           reduce using rule 34
	id             reduce using rule 34


State 21

	unary_expr -> primary .                             (rule 36)

	num            reduce using rule 36
	"+"            reduce using rule 36
	"-"            reduce using rule 36
	"*"            reduce using rule 36
	"/"            reduce using rule 36
	"%"            reduce using rule 36
	"true"         reduce using rule 36
	"false"        reduce using rule 36
	"print"        reduce using rule 36
	"readln"       reduce using rule 36
	"val"          reduce using rule 36
	"var"          reduce using rule 36
	"while"        reduce using rule 36
	"if"           reduce using rule 36
	"("            reduce using rule 36
	")"            reduce using rule 36
	"}"            reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	">"            reduce using rule 36
	"<"            reduce using rule 36
	">="           reduce using rule 36
	"<="           reduce using rule 36
	"!"            reduce using rule 36
	"||"           reduce using rule 36
	"&&"           reduce using rule 36
	id             reduce using rule 36


State 22

	stmt -> decl_stmt .                                 (rule 5)

	num            reduce using rule 5
	"true"         reduce using rule 5
	"false"        reduce using rule 5
	"print"        reduce using rule 5
	"readln"       reduce using rule 5
	"val"          reduce using rule 5
	"var"          reduce using rule 5
	"while"        reduce using rule 5
	"if"           reduce using rule 5
	"("            reduce using rule 5
	"}"            reduce using rule 5
	"!"            reduce using rule 5
	id             reduce using rule 5


State 23

	stmt -> assign_stmt .                               (rule 6)

	num            reduce using rule 6
	"true"         reduce using rule 6
	"false"        reduce using rule 6
	"print"        reduce using rule 6
	"readln"       reduce using rule 6
	"val"          reduce using rule 6
	"var"          reduce using rule 6
	"while"        reduce using rule 6
	"if"           reduce using rule 6
	"("            reduce using rule 6
	"}"            reduce using rule 6
	"!"            reduce using rule 6
	id             reduce using rule 6


State 24

	stmt -> if_stmt .                                   (rule 7)

	num            reduce using rule 7
	"true"         reduce using rule 7
	"false"        reduce using rule 7
	"print"        reduce using rule 7
	"readln"       reduce using rule 7
	"val"          reduce using rule 7
	"var"          reduce using rule 7
	"while"        reduce using rule 7
	"if"           reduce using rule 7
	"("            reduce using rule 7
	"}"            reduce using rule 7
	"!"            reduce using rule 7
	id             reduce using rule 7


State 25

	stmt -> while_stmt .                                (rule 8)

	num            reduce using rule 8
	"true"         reduce using rule 8
	"false"        reduce using rule 8
	"print"        reduce using rule 8
	"readln"       reduce using rule 8
	"val"          reduce using rule 8
	"var"          reduce using rule 8
	"while"        reduce using rule 8
	"if"           reduce using rule 8
	"("            reduce using rule 8
	"}"            reduce using rule 8
	"!"            reduce using rule 8
	id             reduce using rule 8


State 26

	primary -> num .                                    (rule 37)

	num            reduce using rule 37
	"+"            reduce using rule 37
	"-"            reduce using rule 37
	"*"            reduce using rule 37
	"/"            reduce using rule 37
	"%"            reduce using rule 37
	"true"         reduce using rule 37
	"false"        reduce using rule 37
	"print"        reduce using rule 37
	"readln"       reduce using rule 37
	"val"          reduce using rule 37
	"var"          reduce using rule 37
	"while"        reduce using rule 37
	"if"           reduce using rule 37
	"("            reduce using rule 37
	")"            reduce using rule 37
	"}"            reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	">"            reduce using rule 37
	"<"            reduce using rule 37
	">="           reduce using rule 37
	"<="           reduce using rule 37
	"!"            reduce using rule 37
	"||"           reduce using rule 37
	"&&"           reduce using rule 37
	id             reduce using rule 37


State 27

	primary -> "true" .                                 (rule 39)

	num            reduce using rule 39
	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"*"            reduce using rule 39
	"/"            reduce using rule 39
	"%"            reduce using rule 39
	"true"         reduce using rule 39
	"false"        reduce using rule 39
	"print"        reduce using rule 39
	"readln"       reduce using rule 39
	"val"          reduce using rule 39
	"var"          reduce using rule 39
	"while"        reduce using rule 39
	"if"           reduce using rule 39
	"("            reduce using rule 39
	")"            reduce using rule 39
	"}"            reduce using rule 39
	"=="           reduce using rule 39
	"!="           reduce using rule 39
	">"            reduce using rule 39
	"<"            reduce using rule 39
	">="           reduce using rule 39
	"<="           reduce using rule 39
	"!"            reduce using rule 39
	"||"           reduce using rule 39
	"&&"           reduce using rule 39
	id             reduce using rule 39


State 28

	primary -> "false" .                                (rule 40)

	num            reduce using rule 40
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"*"            reduce using rule 40
	"/"            reduce using rule 40
	"%"            reduce using rule 40
	"true"         reduce using rule 40
	"false"        reduce using rule 40
	"print"        reduce using rule 40
	"readln"       reduce using rule 40
	"val"          reduce using rule 40
	"var"          reduce using rule 40
	"while"        reduce using rule 40
	"if"           reduce using rule 40
	"("            reduce using rule 40
	")"            reduce using rule 40
	"}"            reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	">"            reduce using rule 40
	"<"            reduce using rule 40
	">="           reduce using rule 40
	"<="           reduce using rule 40
	"!"            reduce using rule 40
	"||"           reduce using rule 40
	"&&"           reduce using rule 40
	id             reduce using rule 40


State 29

	stmt -> "print" . "(" expr ")"                      (rule 10)

	"("            shift, and enter state 48


State 30

	stmt -> "readln" . "(" ")"                          (rule 11)

	"("            shift, and enter state 47


State 31

	decl_stmt -> "val" . id "=" expr                    (rule 43)

	id             shift, and enter state 46


State 32

	decl_stmt -> "var" . id "=" expr                    (rule 42)

	id             shift, and enter state 45


State 33

	while_stmt -> "while" . "(" expr ")" block          (rule 47)

	"("            shift, and enter state 44


State 34

	if_stmt -> "if" . "(" expr ")" block                (rule 45)
	if_stmt -> "if" . "(" expr ")" block "else" block    (rule 46)

	"("            shift, and enter state 43


State 35

	primary -> "(" . expr ")"                           (rule 41)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 42

	expr           goto state 41
	assign_expr    goto state 13
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 36

	unary_expr -> "!" . unary_expr                      (rule 35)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	unary_expr     goto state 39
	primary        goto state 21

State 37

	assign_expr -> id . "=" assign_expr                 (rule 14)
	primary -> id .                                     (rule 38)
	assign_stmt -> id . "=" expr                        (rule 44)

	num            reduce using rule 38
	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"*"            reduce using rule 38
	"/"            reduce using rule 38
	"%"            reduce using rule 38
	"true"         reduce using rule 38
	"false"        reduce using rule 38
	"print"        reduce using rule 38
	"readln"       reduce using rule 38
	"val"          reduce using rule 38
	"var"          reduce using rule 38
	"="            shift, and enter state 38
	"while"        reduce using rule 38
	"if"           reduce using rule 38
	"("            reduce using rule 38
	"}"            reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	">"            reduce using rule 38
	"<"            reduce using rule 38
	">="           reduce using rule 38
	"<="           reduce using rule 38
	"!"            reduce using rule 38
	"||"           reduce using rule 38
	"&&"           reduce using rule 38
	id             reduce using rule 38


State 38

	assign_expr -> id "=" . assign_expr                 (rule 14)
	assign_stmt -> id "=" . expr                        (rule 44)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 42

	expr           goto state 85
	assign_expr    goto state 86
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 39

	unary_expr -> "!" unary_expr .                      (rule 35)

	num            reduce using rule 35
	"+"            reduce using rule 35
	"-"            reduce using rule 35
	"*"            reduce using rule 35
	"/"            reduce using rule 35
	"%"            reduce using rule 35
	"true"         reduce using rule 35
	"false"        reduce using rule 35
	"print"        reduce using rule 35
	"readln"       reduce using rule 35
	"val"          reduce using rule 35
	"var"          reduce using rule 35
	"while"        reduce using rule 35
	"if"           reduce using rule 35
	"("            reduce using rule 35
	")"            reduce using rule 35
	"}"            reduce using rule 35
	"=="           reduce using rule 35
	"!="           reduce using rule 35
	">"            reduce using rule 35
	"<"            reduce using rule 35
	">="           reduce using rule 35
	"<="           reduce using rule 35
	"!"            reduce using rule 35
	"||"           reduce using rule 35
	"&&"           reduce using rule 35
	id             reduce using rule 35


State 40

	primary -> id .                                     (rule 38)

	num            reduce using rule 38
	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"*"            reduce using rule 38
	"/"            reduce using rule 38
	"%"            reduce using rule 38
	"true"         reduce using rule 38
	"false"        reduce using rule 38
	"print"        reduce using rule 38
	"readln"       reduce using rule 38
	"val"          reduce using rule 38
	"var"          reduce using rule 38
	"while"        reduce using rule 38
	"if"           reduce using rule 38
	"("            reduce using rule 38
	")"            reduce using rule 38
	"}"            reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	">"            reduce using rule 38
	"<"            reduce using rule 38
	">="           reduce using rule 38
	"<="           reduce using rule 38
	"!"            reduce using rule 38
	"||"           reduce using rule 38
	"&&"           reduce using rule 38
	id             reduce using rule 38


State 41

	primary -> "(" expr . ")"                           (rule 41)

	")"            shift, and enter state 84


State 42

	assign_expr -> id . "=" assign_expr                 (rule 14)
	primary -> id .                                     (rule 38)

	num            reduce using rule 38
	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"*"            reduce using rule 38
	"/"            reduce using rule 38
	"%"            reduce using rule 38
	"true"         reduce using rule 38
	"false"        reduce using rule 38
	"print"        reduce using rule 38
	"readln"       reduce using rule 38
	"val"          reduce using rule 38
	"var"          reduce using rule 38
	"="            shift, and enter state 83
	"while"        reduce using rule 38
	"if"           reduce using rule 38
	"("            reduce using rule 38
	")"            reduce using rule 38
	"}"            reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	">"            reduce using rule 38
	"<"            reduce using rule 38
	">="           reduce using rule 38
	"<="           reduce using rule 38
	"!"            reduce using rule 38
	"||"           reduce using rule 38
	"&&"           reduce using rule 38
	id             reduce using rule 38


State 43

	if_stmt -> "if" "(" . expr ")" block                (rule 45)
	if_stmt -> "if" "(" . expr ")" block "else" block    (rule 46)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 42

	expr           goto state 82
	assign_expr    goto state 13
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 44

	while_stmt -> "while" "(" . expr ")" block          (rule 47)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 42

	expr           goto state 81
	assign_expr    goto state 13
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 45

	decl_stmt -> "var" id . "=" expr                    (rule 42)

	"="            shift, and enter state 80


State 46

	decl_stmt -> "val" id . "=" expr                    (rule 43)

	"="            shift, and enter state 79


State 47

	stmt -> "readln" "(" . ")"                          (rule 11)

	")"            shift, and enter state 78


State 48

	stmt -> "print" "(" . expr ")"                      (rule 10)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 42

	expr           goto state 77
	assign_expr    goto state 13
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 49

	mul_expr -> mul_expr "*" . unary_expr               (rule 31)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	unary_expr     goto state 76
	primary        goto state 21

State 50

	mul_expr -> mul_expr "/" . unary_expr               (rule 32)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	unary_expr     goto state 75
	primary        goto state 21

State 51

	mul_expr -> mul_expr "%" . unary_expr               (rule 33)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	unary_expr     goto state 74
	primary        goto state 21

State 52

	add_expr -> add_expr "+" . mul_expr                 (rule 28)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	mul_expr       goto state 73
	unary_expr     goto state 20
	primary        goto state 21

State 53

	add_expr -> add_expr "-" . mul_expr                 (rule 29)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	mul_expr       goto state 72
	unary_expr     goto state 20
	primary        goto state 21

State 54

	rel_expr -> rel_expr ">" . add_expr                 (rule 25)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	add_expr       goto state 71
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 55

	rel_expr -> rel_expr "<" . add_expr                 (rule 23)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	add_expr       goto state 70
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 56

	rel_expr -> rel_expr ">=" . add_expr                (rule 26)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	add_expr       goto state 69
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 57

	rel_expr -> rel_expr "<=" . add_expr                (rule 24)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	add_expr       goto state 68
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 58

	eq_expr -> eq_expr "==" . rel_expr                  (rule 20)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	rel_expr       goto state 67
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 59

	eq_expr -> eq_expr "!=" . rel_expr                  (rule 21)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	rel_expr       goto state 66
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 60

	and_expr -> and_expr "&&" . eq_expr                 (rule 18)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	eq_expr        goto state 65
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 61

	or_expr -> or_expr "||" . and_expr                  (rule 16)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 40

	and_expr       goto state 64
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 62

	stmt_list -> stmt stmt_list .                       (rule 4)

	"}"            reduce using rule 4


State 63

	block -> "{" stmt_list "}" .                        (rule 2)

	num            reduce using rule 2
	"true"         reduce using rule 2
	"false"        reduce using rule 2
	"print"        reduce using rule 2
	"readln"       reduce using rule 2
	"val"          reduce using rule 2
	"var"          reduce using rule 2
	"while"        reduce using rule 2
	"if"           reduce using rule 2
	"else"         reduce using rule 2
	"("            reduce using rule 2
	"}"            reduce using rule 2
	"!"            reduce using rule 2
	id             reduce using rule 2
	%eof           reduce using rule 2


State 64

	or_expr -> or_expr "||" and_expr .                  (rule 16)
	and_expr -> and_expr . "&&" eq_expr                 (rule 18)

	num            reduce using rule 16
	"true"         reduce using rule 16
	"false"        reduce using rule 16
	"print"        reduce using rule 16
	"readln"       reduce using rule 16
	"val"          reduce using rule 16
	"var"          reduce using rule 16
	"while"        reduce using rule 16
	"if"           reduce using rule 16
	"("            reduce using rule 16
	")"            reduce using rule 16
	"}"            reduce using rule 16
	"!"            reduce using rule 16
	"||"           reduce using rule 16
	"&&"           shift, and enter state 60
	id             reduce using rule 16


State 65

	and_expr -> and_expr "&&" eq_expr .                 (rule 18)
	eq_expr -> eq_expr . "==" rel_expr                  (rule 20)
	eq_expr -> eq_expr . "!=" rel_expr                  (rule 21)

	num            reduce using rule 18
	"true"         reduce using rule 18
	"false"        reduce using rule 18
	"print"        reduce using rule 18
	"readln"       reduce using rule 18
	"val"          reduce using rule 18
	"var"          reduce using rule 18
	"while"        reduce using rule 18
	"if"           reduce using rule 18
	"("            reduce using rule 18
	")"            reduce using rule 18
	"}"            reduce using rule 18
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"!"            reduce using rule 18
	"||"           reduce using rule 18
	"&&"           reduce using rule 18
	id             reduce using rule 18


State 66

	eq_expr -> eq_expr "!=" rel_expr .                  (rule 21)
	rel_expr -> rel_expr . "<" add_expr                 (rule 23)
	rel_expr -> rel_expr . "<=" add_expr                (rule 24)
	rel_expr -> rel_expr . ">" add_expr                 (rule 25)
	rel_expr -> rel_expr . ">=" add_expr                (rule 26)

	num            reduce using rule 21
	"true"         reduce using rule 21
	"false"        reduce using rule 21
	"print"        reduce using rule 21
	"readln"       reduce using rule 21
	"val"          reduce using rule 21
	"var"          reduce using rule 21
	"while"        reduce using rule 21
	"if"           reduce using rule 21
	"("            reduce using rule 21
	")"            reduce using rule 21
	"}"            reduce using rule 21
	"=="           reduce using rule 21
	"!="           reduce using rule 21
	">"            shift, and enter state 54
	"<"            shift, and enter state 55
	">="           shift, and enter state 56
	"<="           shift, and enter state 57
	"!"            reduce using rule 21
	"||"           reduce using rule 21
	"&&"           reduce using rule 21
	id             reduce using rule 21


State 67

	eq_expr -> eq_expr "==" rel_expr .                  (rule 20)
	rel_expr -> rel_expr . "<" add_expr                 (rule 23)
	rel_expr -> rel_expr . "<=" add_expr                (rule 24)
	rel_expr -> rel_expr . ">" add_expr                 (rule 25)
	rel_expr -> rel_expr . ">=" add_expr                (rule 26)

	num            reduce using rule 20
	"true"         reduce using rule 20
	"false"        reduce using rule 20
	"print"        reduce using rule 20
	"readln"       reduce using rule 20
	"val"          reduce using rule 20
	"var"          reduce using rule 20
	"while"        reduce using rule 20
	"if"           reduce using rule 20
	"("            reduce using rule 20
	")"            reduce using rule 20
	"}"            reduce using rule 20
	"=="           reduce using rule 20
	"!="           reduce using rule 20
	">"            shift, and enter state 54
	"<"            shift, and enter state 55
	">="           shift, and enter state 56
	"<="           shift, and enter state 57
	"!"            reduce using rule 20
	"||"           reduce using rule 20
	"&&"           reduce using rule 20
	id             reduce using rule 20


State 68

	rel_expr -> rel_expr "<=" add_expr .                (rule 24)
	add_expr -> add_expr . "+" mul_expr                 (rule 28)
	add_expr -> add_expr . "-" mul_expr                 (rule 29)

	num            reduce using rule 24
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"true"         reduce using rule 24
	"false"        reduce using rule 24
	"print"        reduce using rule 24
	"readln"       reduce using rule 24
	"val"          reduce using rule 24
	"var"          reduce using rule 24
	"while"        reduce using rule 24
	"if"           reduce using rule 24
	"("            reduce using rule 24
	")"            reduce using rule 24
	"}"            reduce using rule 24
	"=="           reduce using rule 24
	"!="           reduce using rule 24
	">"            reduce using rule 24
	"<"            reduce using rule 24
	">="           reduce using rule 24
	"<="           reduce using rule 24
	"!"            reduce using rule 24
	"||"           reduce using rule 24
	"&&"           reduce using rule 24
	id             reduce using rule 24


State 69

	rel_expr -> rel_expr ">=" add_expr .                (rule 26)
	add_expr -> add_expr . "+" mul_expr                 (rule 28)
	add_expr -> add_expr . "-" mul_expr                 (rule 29)

	num            reduce using rule 26
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"true"         reduce using rule 26
	"false"        reduce using rule 26
	"print"        reduce using rule 26
	"readln"       reduce using rule 26
	"val"          reduce using rule 26
	"var"          reduce using rule 26
	"while"        reduce using rule 26
	"if"           reduce using rule 26
	"("            reduce using rule 26
	")"            reduce using rule 26
	"}"            reduce using rule 26
	"=="           reduce using rule 26
	"!="           reduce using rule 26
	">"            reduce using rule 26
	"<"            reduce using rule 26
	">="           reduce using rule 26
	"<="           reduce using rule 26
	"!"            reduce using rule 26
	"||"           reduce using rule 26
	"&&"           reduce using rule 26
	id             reduce using rule 26


State 70

	rel_expr -> rel_expr "<" add_expr .                 (rule 23)
	add_expr -> add_expr . "+" mul_expr                 (rule 28)
	add_expr -> add_expr . "-" mul_expr                 (rule 29)

	num            reduce using rule 23
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"true"         reduce using rule 23
	"false"        reduce using rule 23
	"print"        reduce using rule 23
	"readln"       reduce using rule 23
	"val"          reduce using rule 23
	"var"          reduce using rule 23
	"while"        reduce using rule 23
	"if"           reduce using rule 23
	"("            reduce using rule 23
	")"            reduce using rule 23
	"}"            reduce using rule 23
	"=="           reduce using rule 23
	"!="           reduce using rule 23
	">"            reduce using rule 23
	"<"            reduce using rule 23
	">="           reduce using rule 23
	"<="           reduce using rule 23
	"!"            reduce using rule 23
	"||"           reduce using rule 23
	"&&"           reduce using rule 23
	id             reduce using rule 23


State 71

	rel_expr -> rel_expr ">" add_expr .                 (rule 25)
	add_expr -> add_expr . "+" mul_expr                 (rule 28)
	add_expr -> add_expr . "-" mul_expr                 (rule 29)

	num            reduce using rule 25
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"true"         reduce using rule 25
	"false"        reduce using rule 25
	"print"        reduce using rule 25
	"readln"       reduce using rule 25
	"val"          reduce using rule 25
	"var"          reduce using rule 25
	"while"        reduce using rule 25
	"if"           reduce using rule 25
	"("            reduce using rule 25
	")"            reduce using rule 25
	"}"            reduce using rule 25
	"=="           reduce using rule 25
	"!="           reduce using rule 25
	">"            reduce using rule 25
	"<"            reduce using rule 25
	">="           reduce using rule 25
	"<="           reduce using rule 25
	"!"            reduce using rule 25
	"||"           reduce using rule 25
	"&&"           reduce using rule 25
	id             reduce using rule 25


State 72

	add_expr -> add_expr "-" mul_expr .                 (rule 29)
	mul_expr -> mul_expr . "*" unary_expr               (rule 31)
	mul_expr -> mul_expr . "/" unary_expr               (rule 32)
	mul_expr -> mul_expr . "%" unary_expr               (rule 33)

	num            reduce using rule 29
	"+"            reduce using rule 29
	"-"            reduce using rule 29
	"*"            shift, and enter state 49
	"/"            shift, and enter state 50
	"%"            shift, and enter state 51
	"true"         reduce using rule 29
	"false"        reduce using rule 29
	"print"        reduce using rule 29
	"readln"       reduce using rule 29
	"val"          reduce using rule 29
	"var"          reduce using rule 29
	"while"        reduce using rule 29
	"if"           reduce using rule 29
	"("            reduce using rule 29
	")"            reduce using rule 29
	"}"            reduce using rule 29
	"=="           reduce using rule 29
	"!="           reduce using rule 29
	">"            reduce using rule 29
	"<"            reduce using rule 29
	">="           reduce using rule 29
	"<="           reduce using rule 29
	"!"            reduce using rule 29
	"||"           reduce using rule 29
	"&&"           reduce using rule 29
	id             reduce using rule 29


State 73

	add_expr -> add_expr "+" mul_expr .                 (rule 28)
	mul_expr -> mul_expr . "*" unary_expr               (rule 31)
	mul_expr -> mul_expr . "/" unary_expr               (rule 32)
	mul_expr -> mul_expr . "%" unary_expr               (rule 33)

	num            reduce using rule 28
	"+"            reduce using rule 28
	"-"            reduce using rule 28
	"*"            shift, and enter state 49
	"/"            shift, and enter state 50
	"%"            shift, and enter state 51
	"true"         reduce using rule 28
	"false"        reduce using rule 28
	"print"        reduce using rule 28
	"readln"       reduce using rule 28
	"val"          reduce using rule 28
	"var"          reduce using rule 28
	"while"        reduce using rule 28
	"if"           reduce using rule 28
	"("            reduce using rule 28
	")"            reduce using rule 28
	"}"            reduce using rule 28
	"=="           reduce using rule 28
	"!="           reduce using rule 28
	">"            reduce using rule 28
	"<"            reduce using rule 28
	">="           reduce using rule 28
	"<="           reduce using rule 28
	"!"            reduce using rule 28
	"||"           reduce using rule 28
	"&&"           reduce using rule 28
	id             reduce using rule 28


State 74

	mul_expr -> mul_expr "%" unary_expr .               (rule 33)

	num            reduce using rule 33
	"+"            reduce using rule 33
	"-"            reduce using rule 33
	"*"            reduce using rule 33
	"/"            reduce using rule 33
	"%"            reduce using rule 33
	"true"         reduce using rule 33
	"false"        reduce using rule 33
	"print"        reduce using rule 33
	"readln"       reduce using rule 33
	"val"          reduce using rule 33
	"var"          reduce using rule 33
	"while"        reduce using rule 33
	"if"           reduce using rule 33
	"("            reduce using rule 33
	")"            reduce using rule 33
	"}"            reduce using rule 33
	"=="           reduce using rule 33
	"!="           reduce using rule 33
	">"            reduce using rule 33
	"<"            reduce using rule 33
	">="           reduce using rule 33
	"<="           reduce using rule 33
	"!"            reduce using rule 33
	"||"           reduce using rule 33
	"&&"           reduce using rule 33
	id             reduce using rule 33


State 75

	mul_expr -> mul_expr "/" unary_expr .               (rule 32)

	num            reduce using rule 32
	"+"            reduce using rule 32
	"-"            reduce using rule 32
	"*"            reduce using rule 32
	"/"            reduce using rule 32
	"%"            reduce using rule 32
	"true"         reduce using rule 32
	"false"        reduce using rule 32
	"print"        reduce using rule 32
	"readln"       reduce using rule 32
	"val"          reduce using rule 32
	"var"          reduce using rule 32
	"while"        reduce using rule 32
	"if"           reduce using rule 32
	"("            reduce using rule 32
	")"            reduce using rule 32
	"}"            reduce using rule 32
	"=="           reduce using rule 32
	"!="           reduce using rule 32
	">"            reduce using rule 32
	"<"            reduce using rule 32
	">="           reduce using rule 32
	"<="           reduce using rule 32
	"!"            reduce using rule 32
	"||"           reduce using rule 32
	"&&"           reduce using rule 32
	id             reduce using rule 32


State 76

	mul_expr -> mul_expr "*" unary_expr .               (rule 31)

	num            reduce using rule 31
	"+"            reduce using rule 31
	"-"            reduce using rule 31
	"*"            reduce using rule 31
	"/"            reduce using rule 31
	"%"            reduce using rule 31
	"true"         reduce using rule 31
	"false"        reduce using rule 31
	"print"        reduce using rule 31
	"readln"       reduce using rule 31
	"val"          reduce using rule 31
	"var"          reduce using rule 31
	"while"        reduce using rule 31
	"if"           reduce using rule 31
	"("            reduce using rule 31
	")"            reduce using rule 31
	"}"            reduce using rule 31
	"=="           reduce using rule 31
	"!="           reduce using rule 31
	">"            reduce using rule 31
	"<"            reduce using rule 31
	">="           reduce using rule 31
	"<="           reduce using rule 31
	"!"            reduce using rule 31
	"||"           reduce using rule 31
	"&&"           reduce using rule 31
	id             reduce using rule 31


State 77

	stmt -> "print" "(" expr . ")"                      (rule 10)

	")"            shift, and enter state 92


State 78

	stmt -> "readln" "(" ")" .                          (rule 11)

	num            reduce using rule 11
	"true"         reduce using rule 11
	"false"        reduce using rule 11
	"print"        reduce using rule 11
	"readln"       reduce using rule 11
	"val"          reduce using rule 11
	"var"          reduce using rule 11
	"while"        reduce using rule 11
	"if"           reduce using rule 11
	"("            reduce using rule 11
	"}"            reduce using rule 11
	"!"            reduce using rule 11
	id             reduce using rule 11


State 79

	decl_stmt -> "val" id "=" . expr                    (rule 43)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 42

	expr           goto state 91
	assign_expr    goto state 13
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 80

	decl_stmt -> "var" id "=" . expr                    (rule 42)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 42

	expr           goto state 90
	assign_expr    goto state 13
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 81

	while_stmt -> "while" "(" expr . ")" block          (rule 47)

	")"            shift, and enter state 89


State 82

	if_stmt -> "if" "(" expr . ")" block                (rule 45)
	if_stmt -> "if" "(" expr . ")" block "else" block    (rule 46)

	")"            shift, and enter state 88


State 83

	assign_expr -> id "=" . assign_expr                 (rule 14)

	num            shift, and enter state 26
	"true"         shift, and enter state 27
	"false"        shift, and enter state 28
	"("            shift, and enter state 35
	"!"            shift, and enter state 36
	id             shift, and enter state 42

	assign_expr    goto state 87
	or_expr        goto state 14
	and_expr       goto state 15
	eq_expr        goto state 16
	rel_expr       goto state 17
	add_expr       goto state 18
	mul_expr       goto state 19
	unary_expr     goto state 20
	primary        goto state 21

State 84

	primary -> "(" expr ")" .                           (rule 41)

	num            reduce using rule 41
	"+"            reduce using rule 41
	"-"            reduce using rule 41
	"*"            reduce using rule 41
	"/"            reduce using rule 41
	"%"            reduce using rule 41
	"true"         reduce using rule 41
	"false"        reduce using rule 41
	"print"        reduce using rule 41
	"readln"       reduce using rule 41
	"val"          reduce using rule 41
	"var"          reduce using rule 41
	"while"        reduce using rule 41
	"if"           reduce using rule 41
	"("            reduce using rule 41
	")"            reduce using rule 41
	"}"            reduce using rule 41
	"=="           reduce using rule 41
	"!="           reduce using rule 41
	">"            reduce using rule 41
	"<"            reduce using rule 41
	">="           reduce using rule 41
	"<="           reduce using rule 41
	"!"            reduce using rule 41
	"||"           reduce using rule 41
	"&&"           reduce using rule 41
	id             reduce using rule 41


State 85

	assign_stmt -> id "=" expr .                        (rule 44)

	num            reduce using rule 44
	"true"         reduce using rule 44
	"false"        reduce using rule 44
	"print"        reduce using rule 44
	"readln"       reduce using rule 44
	"val"          reduce using rule 44
	"var"          reduce using rule 44
	"while"        reduce using rule 44
	"if"           reduce using rule 44
	"("            reduce using rule 44
	"}"            reduce using rule 44
	"!"            reduce using rule 44
	id             reduce using rule 44


State 86

	expr -> assign_expr .                               (rule 13)
	assign_expr -> id "=" assign_expr .                 (rule 14)

	num            reduce using rule 14
			(reduce using rule 13)

	"true"         reduce using rule 14
			(reduce using rule 13)

	"false"        reduce using rule 14
			(reduce using rule 13)

	"print"        reduce using rule 14
			(reduce using rule 13)

	"readln"       reduce using rule 14
			(reduce using rule 13)

	"val"          reduce using rule 14
			(reduce using rule 13)

	"var"          reduce using rule 14
			(reduce using rule 13)

	"while"        reduce using rule 14
			(reduce using rule 13)

	"if"           reduce using rule 14
			(reduce using rule 13)

	"("            reduce using rule 14
			(reduce using rule 13)

	"}"            reduce using rule 14
			(reduce using rule 13)

	"!"            reduce using rule 14
			(reduce using rule 13)

	id             reduce using rule 14
			(reduce using rule 13)



State 87

	assign_expr -> id "=" assign_expr .                 (rule 14)

	num            reduce using rule 14
	"true"         reduce using rule 14
	"false"        reduce using rule 14
	"print"        reduce using rule 14
	"readln"       reduce using rule 14
	"val"          reduce using rule 14
	"var"          reduce using rule 14
	"while"        reduce using rule 14
	"if"           reduce using rule 14
	"("            reduce using rule 14
	")"            reduce using rule 14
	"}"            reduce using rule 14
	"!"            reduce using rule 14
	id             reduce using rule 14


State 88

	if_stmt -> "if" "(" expr ")" . block                (rule 45)
	if_stmt -> "if" "(" expr ")" . block "else" block    (rule 46)

	"{"            shift, and enter state 8

	block          goto state 94

State 89

	while_stmt -> "while" "(" expr ")" . block          (rule 47)

	"{"            shift, and enter state 8

	block          goto state 93

State 90

	decl_stmt -> "var" id "=" expr .                    (rule 42)

	num            reduce using rule 42
	"true"         reduce using rule 42
	"false"        reduce using rule 42
	"print"        reduce using rule 42
	"readln"       reduce using rule 42
	"val"          reduce using rule 42
	"var"          reduce using rule 42
	"while"        reduce using rule 42
	"if"           reduce using rule 42
	"("            reduce using rule 42
	"}"            reduce using rule 42
	"!"            reduce using rule 42
	id             reduce using rule 42


State 91

	decl_stmt -> "val" id "=" expr .                    (rule 43)

	num            reduce using rule 43
	"true"         reduce using rule 43
	"false"        reduce using rule 43
	"print"        reduce using rule 43
	"readln"       reduce using rule 43
	"val"          reduce using rule 43
	"var"          reduce using rule 43
	"while"        reduce using rule 43
	"if"           reduce using rule 43
	"("            reduce using rule 43
	"}"            reduce using rule 43
	"!"            reduce using rule 43
	id             reduce using rule 43


State 92

	stmt -> "print" "(" expr ")" .                      (rule 10)

	num            reduce using rule 10
	"true"         reduce using rule 10
	"false"        reduce using rule 10
	"print"        reduce using rule 10
	"readln"       reduce using rule 10
	"val"          reduce using rule 10
	"var"          reduce using rule 10
	"while"        reduce using rule 10
	"if"           reduce using rule 10
	"("            reduce using rule 10
	"}"            reduce using rule 10
	"!"            reduce using rule 10
	id             reduce using rule 10


State 93

	while_stmt -> "while" "(" expr ")" block .          (rule 47)

	num            reduce using rule 47
	"true"         reduce using rule 47
	"false"        reduce using rule 47
	"print"        reduce using rule 47
	"readln"       reduce using rule 47
	"val"          reduce using rule 47
	"var"          reduce using rule 47
	"while"        reduce using rule 47
	"if"           reduce using rule 47
	"("            reduce using rule 47
	"}"            reduce using rule 47
	"!"            reduce using rule 47
	id             reduce using rule 47


State 94

	if_stmt -> "if" "(" expr ")" block .                (rule 45)
	if_stmt -> "if" "(" expr ")" block . "else" block    (rule 46)

	num            reduce using rule 45
	"true"         reduce using rule 45
	"false"        reduce using rule 45
	"print"        reduce using rule 45
	"readln"       reduce using rule 45
	"val"          reduce using rule 45
	"var"          reduce using rule 45
	"while"        reduce using rule 45
	"if"           reduce using rule 45
	"else"         shift, and enter state 95
	"("            reduce using rule 45
	"}"            reduce using rule 45
	"!"            reduce using rule 45
	id             reduce using rule 45


State 95

	if_stmt -> "if" "(" expr ")" block "else" . block    (rule 46)

	"{"            shift, and enter state 8

	block          goto state 96

State 96

	if_stmt -> "if" "(" expr ")" block "else" block .    (rule 46)

	num            reduce using rule 46
	"true"         reduce using rule 46
	"false"        reduce using rule 46
	"print"        reduce using rule 46
	"readln"       reduce using rule 46
	"val"          reduce using rule 46
	"var"          reduce using rule 46
	"while"        reduce using rule 46
	"if"           reduce using rule 46
	"("            reduce using rule 46
	"}"            reduce using rule 46
	"!"            reduce using rule 46
	id             reduce using rule 46


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 48
Number of terminals: 35
Number of non-terminals: 20
Number of states: 97
