-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	program -> "fun" "main" "(" ")" block              (1)
	program -> "fun" "main" "(" ")" stmt               (2)
	block -> "{" stmt_list "}"                         (3)
	stmt_list -> stmt stmt_list                        (4)
	stmt_list ->                                       (5)
	stmt -> decl_stmt                                  (6)
	stmt -> assign_stmt                                (7)
	stmt -> if_stmt                                    (8)
	stmt -> while_stmt                                 (9)
	stmt -> "print" "(" expr ")"                       (10)
	stmt -> "readln" "(" ")"                           (11)
	stmt -> expr_stmt                                  (12)
	expr_stmt -> expr                                  (13)
	expr -> or_expr                                    (14)
	assign_stmt -> id "=" expr                         (15)
	assign_stmt -> expr "++"                           (16)
	assign_stmt -> expr "--"                           (17)
	or_expr -> or_expr "||" and_expr                   (18)
	or_expr -> and_expr                                (19)
	and_expr -> and_expr "&&" eq_expr                  (20)
	and_expr -> eq_expr                                (21)
	eq_expr -> eq_expr "==" rel_expr                   (22)
	eq_expr -> eq_expr "!=" rel_expr                   (23)
	eq_expr -> rel_expr                                (24)
	rel_expr -> rel_expr "<" add_expr                  (25)
	rel_expr -> rel_expr "<=" add_expr                 (26)
	rel_expr -> rel_expr ">" add_expr                  (27)
	rel_expr -> rel_expr ">=" add_expr                 (28)
	rel_expr -> add_expr                               (29)
	add_expr -> add_expr "+" mul_expr                  (30)
	add_expr -> add_expr "-" mul_expr                  (31)
	add_expr -> mul_expr                               (32)
	mul_expr -> mul_expr "*" unary_expr                (33)
	mul_expr -> mul_expr "/" unary_expr                (34)
	mul_expr -> mul_expr "%" unary_expr                (35)
	mul_expr -> unary_expr                             (36)
	unary_expr -> "!" unary_expr                       (37)
	unary_expr -> primary                              (38)
	primary -> num                                     (39)
	primary -> id                                      (40)
	primary -> "true"                                  (41)
	primary -> "false"                                 (42)
	primary -> "(" expr ")"                            (43)
	primary -> string                                  (44)
	decl_stmt -> "var" id "=" expr                     (45)
	decl_stmt -> "val" id "=" expr                     (46)
	if_stmt -> "if" "(" expr ")" block                 (47)
	if_stmt -> "if" "(" expr ")" block "else" block    (48)
	while_stmt -> "while" "(" expr ")" block           (49)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	num            { TNum $$ }
	"fun"          { TFun }
	"main"         { TMain }
	"+"            { TPlus }
	"-"            { TMinus }
	"*"            { TMult }
	"/"            { TDiv }
	"%"            { TMod }
	"++"           { TIncr }
	"--"           { TDecr }
	"true"         { TTrue }
	"false"        { TFalse }
	"print"        { TPrint }
	"readln"       { TReadln }
	"val"          { TVal }
	"var"          { TVar }
	"="            { TAssign }
	"while"        { TWhile }
	"if"           { TIf }
	"else"         { TElse }
	"("            { TLParen }
	")"            { TRParen }
	"{"            { TLBraces }
	"}"            { TRBraces }
	"=="           { TEqual }
	"!="           { TDifferent }
	">"            { TGreater }
	"<"            { TLess }
	">="           { TGreaterEq }
	"<="           { TLessEq }
	"!"            { TNot }
	"||"           { TOr }
	"&&"           { TAnd }
	string         { TString $$ }
	id             { TId $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	program         rules 1, 2
	block           rule  3
	stmt_list       rules 4, 5
	stmt            rules 6, 7, 8, 9, 10, 11, 12
	expr_stmt       rule  13
	expr            rule  14
	assign_stmt     rules 15, 16, 17
	or_expr         rules 18, 19
	and_expr        rules 20, 21
	eq_expr         rules 22, 23, 24
	rel_expr        rules 25, 26, 27, 28, 29
	add_expr        rules 30, 31, 32
	mul_expr        rules 33, 34, 35, 36
	unary_expr      rules 37, 38
	primary         rules 39, 40, 41, 42, 43, 44
	decl_stmt       rules 45, 46
	if_stmt         rules 47, 48
	while_stmt      rule  49

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . program                          (rule 0)

	"fun"          shift, and enter state 4

	program        goto state 3

State 1

	program -> . "fun" "main" "(" ")" block             (rule 1)

	"fun"          shift, and enter state 2


State 2

	program -> "fun" . "main" "(" ")" block             (rule 1)

	"main"         shift, and enter state 6


State 3

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 4

	program -> "fun" . "main" "(" ")" block             (rule 1)
	program -> "fun" . "main" "(" ")" stmt              (rule 2)

	"main"         shift, and enter state 5


State 5

	program -> "fun" "main" . "(" ")" block             (rule 1)
	program -> "fun" "main" . "(" ")" stmt              (rule 2)

	"("            shift, and enter state 8


State 6

	program -> "fun" "main" . "(" ")" block             (rule 1)

	"("            shift, and enter state 7


State 7

	program -> "fun" "main" "(" . ")" block             (rule 1)

	")"            shift, and enter state 10


State 8

	program -> "fun" "main" "(" . ")" block             (rule 1)
	program -> "fun" "main" "(" . ")" stmt              (rule 2)

	")"            shift, and enter state 9


State 9

	program -> "fun" "main" "(" ")" . block             (rule 1)
	program -> "fun" "main" "(" ")" . stmt              (rule 2)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"print"        shift, and enter state 31
	"readln"       shift, and enter state 32
	"val"          shift, and enter state 33
	"var"          shift, and enter state 34
	"while"        shift, and enter state 35
	"if"           shift, and enter state 36
	"("            shift, and enter state 37
	"{"            shift, and enter state 12
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 40

	block          goto state 11
	stmt           goto state 13
	expr_stmt      goto state 14
	expr           goto state 15
	assign_stmt    goto state 16
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24
	decl_stmt      goto state 25
	if_stmt        goto state 26
	while_stmt     goto state 27

State 10

	program -> "fun" "main" "(" ")" . block             (rule 1)

	"{"            shift, and enter state 12

	block          goto state 11

State 11

	program -> "fun" "main" "(" ")" block .             (rule 1)

	%eof           reduce using rule 1


State 12

	block -> "{" . stmt_list "}"                        (rule 3)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"print"        shift, and enter state 31
	"readln"       shift, and enter state 32
	"val"          shift, and enter state 33
	"var"          shift, and enter state 34
	"while"        shift, and enter state 35
	"if"           shift, and enter state 36
	"("            shift, and enter state 37
	"}"            reduce using rule 5
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 40

	stmt_list      goto state 66
	stmt           goto state 67
	expr_stmt      goto state 14
	expr           goto state 15
	assign_stmt    goto state 16
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24
	decl_stmt      goto state 25
	if_stmt        goto state 26
	while_stmt     goto state 27

State 13

	program -> "fun" "main" "(" ")" stmt .              (rule 2)

	%eof           reduce using rule 2


State 14

	stmt -> expr_stmt .                                 (rule 12)

	num            reduce using rule 12
	"true"         reduce using rule 12
	"false"        reduce using rule 12
	"print"        reduce using rule 12
	"readln"       reduce using rule 12
	"val"          reduce using rule 12
	"var"          reduce using rule 12
	"while"        reduce using rule 12
	"if"           reduce using rule 12
	"("            reduce using rule 12
	"}"            reduce using rule 12
	"!"            reduce using rule 12
	string         reduce using rule 12
	id             reduce using rule 12
	%eof           reduce using rule 12


State 15

	expr_stmt -> expr .                                 (rule 13)
	assign_stmt -> expr . "++"                          (rule 16)
	assign_stmt -> expr . "--"                          (rule 17)

	num            reduce using rule 13
	"++"           shift, and enter state 64
	"--"           shift, and enter state 65
	"true"         reduce using rule 13
	"false"        reduce using rule 13
	"print"        reduce using rule 13
	"readln"       reduce using rule 13
	"val"          reduce using rule 13
	"var"          reduce using rule 13
	"while"        reduce using rule 13
	"if"           reduce using rule 13
	"("            reduce using rule 13
	"}"            reduce using rule 13
	"!"            reduce using rule 13
	string         reduce using rule 13
	id             reduce using rule 13
	%eof           reduce using rule 13


State 16

	stmt -> assign_stmt .                               (rule 7)

	num            reduce using rule 7
	"true"         reduce using rule 7
	"false"        reduce using rule 7
	"print"        reduce using rule 7
	"readln"       reduce using rule 7
	"val"          reduce using rule 7
	"var"          reduce using rule 7
	"while"        reduce using rule 7
	"if"           reduce using rule 7
	"("            reduce using rule 7
	"}"            reduce using rule 7
	"!"            reduce using rule 7
	string         reduce using rule 7
	id             reduce using rule 7
	%eof           reduce using rule 7


State 17

	expr -> or_expr .                                   (rule 14)
	or_expr -> or_expr . "||" and_expr                  (rule 18)

	num            reduce using rule 14
	"++"           reduce using rule 14
	"--"           reduce using rule 14
	"true"         reduce using rule 14
	"false"        reduce using rule 14
	"print"        reduce using rule 14
	"readln"       reduce using rule 14
	"val"          reduce using rule 14
	"var"          reduce using rule 14
	"while"        reduce using rule 14
	"if"           reduce using rule 14
	"("            reduce using rule 14
	")"            reduce using rule 14
	"}"            reduce using rule 14
	"!"            reduce using rule 14
	"||"           shift, and enter state 63
	string         reduce using rule 14
	id             reduce using rule 14
	%eof           reduce using rule 14


State 18

	or_expr -> and_expr .                               (rule 19)
	and_expr -> and_expr . "&&" eq_expr                 (rule 20)

	num            reduce using rule 19
	"++"           reduce using rule 19
	"--"           reduce using rule 19
	"true"         reduce using rule 19
	"false"        reduce using rule 19
	"print"        reduce using rule 19
	"readln"       reduce using rule 19
	"val"          reduce using rule 19
	"var"          reduce using rule 19
	"while"        reduce using rule 19
	"if"           reduce using rule 19
	"("            reduce using rule 19
	")"            reduce using rule 19
	"}"            reduce using rule 19
	"!"            reduce using rule 19
	"||"           reduce using rule 19
	"&&"           shift, and enter state 62
	string         reduce using rule 19
	id             reduce using rule 19
	%eof           reduce using rule 19


State 19

	and_expr -> eq_expr .                               (rule 21)
	eq_expr -> eq_expr . "==" rel_expr                  (rule 22)
	eq_expr -> eq_expr . "!=" rel_expr                  (rule 23)

	num            reduce using rule 21
	"++"           reduce using rule 21
	"--"           reduce using rule 21
	"true"         reduce using rule 21
	"false"        reduce using rule 21
	"print"        reduce using rule 21
	"readln"       reduce using rule 21
	"val"          reduce using rule 21
	"var"          reduce using rule 21
	"while"        reduce using rule 21
	"if"           reduce using rule 21
	"("            reduce using rule 21
	")"            reduce using rule 21
	"}"            reduce using rule 21
	"=="           shift, and enter state 60
	"!="           shift, and enter state 61
	"!"            reduce using rule 21
	"||"           reduce using rule 21
	"&&"           reduce using rule 21
	string         reduce using rule 21
	id             reduce using rule 21
	%eof           reduce using rule 21


State 20

	eq_expr -> rel_expr .                               (rule 24)
	rel_expr -> rel_expr . "<" add_expr                 (rule 25)
	rel_expr -> rel_expr . "<=" add_expr                (rule 26)
	rel_expr -> rel_expr . ">" add_expr                 (rule 27)
	rel_expr -> rel_expr . ">=" add_expr                (rule 28)

	num            reduce using rule 24
	"++"           reduce using rule 24
	"--"           reduce using rule 24
	"true"         reduce using rule 24
	"false"        reduce using rule 24
	"print"        reduce using rule 24
	"readln"       reduce using rule 24
	"val"          reduce using rule 24
	"var"          reduce using rule 24
	"while"        reduce using rule 24
	"if"           reduce using rule 24
	"("            reduce using rule 24
	")"            reduce using rule 24
	"}"            reduce using rule 24
	"=="           reduce using rule 24
	"!="           reduce using rule 24
	">"            shift, and enter state 56
	"<"            shift, and enter state 57
	">="           shift, and enter state 58
	"<="           shift, and enter state 59
	"!"            reduce using rule 24
	"||"           reduce using rule 24
	"&&"           reduce using rule 24
	string         reduce using rule 24
	id             reduce using rule 24
	%eof           reduce using rule 24


State 21

	rel_expr -> add_expr .                              (rule 29)
	add_expr -> add_expr . "+" mul_expr                 (rule 30)
	add_expr -> add_expr . "-" mul_expr                 (rule 31)

	num            reduce using rule 29
	"+"            shift, and enter state 54
	"-"            shift, and enter state 55
	"++"           reduce using rule 29
	"--"           reduce using rule 29
	"true"         reduce using rule 29
	"false"        reduce using rule 29
	"print"        reduce using rule 29
	"readln"       reduce using rule 29
	"val"          reduce using rule 29
	"var"          reduce using rule 29
	"while"        reduce using rule 29
	"if"           reduce using rule 29
	"("            reduce using rule 29
	")"            reduce using rule 29
	"}"            reduce using rule 29
	"=="           reduce using rule 29
	"!="           reduce using rule 29
	">"            reduce using rule 29
	"<"            reduce using rule 29
	">="           reduce using rule 29
	"<="           reduce using rule 29
	"!"            reduce using rule 29
	"||"           reduce using rule 29
	"&&"           reduce using rule 29
	string         reduce using rule 29
	id             reduce using rule 29
	%eof           reduce using rule 29


State 22

	add_expr -> mul_expr .                              (rule 32)
	mul_expr -> mul_expr . "*" unary_expr               (rule 33)
	mul_expr -> mul_expr . "/" unary_expr               (rule 34)
	mul_expr -> mul_expr . "%" unary_expr               (rule 35)

	num            reduce using rule 32
	"+"            reduce using rule 32
	"-"            reduce using rule 32
	"*"            shift, and enter state 51
	"/"            shift, and enter state 52
	"%"            shift, and enter state 53
	"++"           reduce using rule 32
	"--"           reduce using rule 32
	"true"         reduce using rule 32
	"false"        reduce using rule 32
	"print"        reduce using rule 32
	"readln"       reduce using rule 32
	"val"          reduce using rule 32
	"var"          reduce using rule 32
	"while"        reduce using rule 32
	"if"           reduce using rule 32
	"("            reduce using rule 32
	")"            reduce using rule 32
	"}"            reduce using rule 32
	"=="           reduce using rule 32
	"!="           reduce using rule 32
	">"            reduce using rule 32
	"<"            reduce using rule 32
	">="           reduce using rule 32
	"<="           reduce using rule 32
	"!"            reduce using rule 32
	"||"           reduce using rule 32
	"&&"           reduce using rule 32
	string         reduce using rule 32
	id             reduce using rule 32
	%eof           reduce using rule 32


State 23

	mul_expr -> unary_expr .                            (rule 36)

	num            reduce using rule 36
	"+"            reduce using rule 36
	"-"            reduce using rule 36
	"*"            reduce using rule 36
	"/"            reduce using rule 36
	"%"            reduce using rule 36
	"++"           reduce using rule 36
	"--"           reduce using rule 36
	"true"         reduce using rule 36
	"false"        reduce using rule 36
	"print"        reduce using rule 36
	"readln"       reduce using rule 36
	"val"          reduce using rule 36
	"var"          reduce using rule 36
	"while"        reduce using rule 36
	"if"           reduce using rule 36
	"("            reduce using rule 36
	")"            reduce using rule 36
	"}"            reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	">"            reduce using rule 36
	"<"            reduce using rule 36
	">="           reduce using rule 36
	"<="           reduce using rule 36
	"!"            reduce using rule 36
	"||"           reduce using rule 36
	"&&"           reduce using rule 36
	string         reduce using rule 36
	id             reduce using rule 36
	%eof           reduce using rule 36


State 24

	unary_expr -> primary .                             (rule 38)

	num            reduce using rule 38
	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"*"            reduce using rule 38
	"/"            reduce using rule 38
	"%"            reduce using rule 38
	"++"           reduce using rule 38
	"--"           reduce using rule 38
	"true"         reduce using rule 38
	"false"        reduce using rule 38
	"print"        reduce using rule 38
	"readln"       reduce using rule 38
	"val"          reduce using rule 38
	"var"          reduce using rule 38
	"while"        reduce using rule 38
	"if"           reduce using rule 38
	"("            reduce using rule 38
	")"            reduce using rule 38
	"}"            reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	">"            reduce using rule 38
	"<"            reduce using rule 38
	">="           reduce using rule 38
	"<="           reduce using rule 38
	"!"            reduce using rule 38
	"||"           reduce using rule 38
	"&&"           reduce using rule 38
	string         reduce using rule 38
	id             reduce using rule 38
	%eof           reduce using rule 38


State 25

	stmt -> decl_stmt .                                 (rule 6)

	num            reduce using rule 6
	"true"         reduce using rule 6
	"false"        reduce using rule 6
	"print"        reduce using rule 6
	"readln"       reduce using rule 6
	"val"          reduce using rule 6
	"var"          reduce using rule 6
	"while"        reduce using rule 6
	"if"           reduce using rule 6
	"("            reduce using rule 6
	"}"            reduce using rule 6
	"!"            reduce using rule 6
	string         reduce using rule 6
	id             reduce using rule 6
	%eof           reduce using rule 6


State 26

	stmt -> if_stmt .                                   (rule 8)

	num            reduce using rule 8
	"true"         reduce using rule 8
	"false"        reduce using rule 8
	"print"        reduce using rule 8
	"readln"       reduce using rule 8
	"val"          reduce using rule 8
	"var"          reduce using rule 8
	"while"        reduce using rule 8
	"if"           reduce using rule 8
	"("            reduce using rule 8
	"}"            reduce using rule 8
	"!"            reduce using rule 8
	string         reduce using rule 8
	id             reduce using rule 8
	%eof           reduce using rule 8


State 27

	stmt -> while_stmt .                                (rule 9)

	num            reduce using rule 9
	"true"         reduce using rule 9
	"false"        reduce using rule 9
	"print"        reduce using rule 9
	"readln"       reduce using rule 9
	"val"          reduce using rule 9
	"var"          reduce using rule 9
	"while"        reduce using rule 9
	"if"           reduce using rule 9
	"("            reduce using rule 9
	"}"            reduce using rule 9
	"!"            reduce using rule 9
	string         reduce using rule 9
	id             reduce using rule 9
	%eof           reduce using rule 9


State 28

	primary -> num .                                    (rule 39)

	num            reduce using rule 39
	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"*"            reduce using rule 39
	"/"            reduce using rule 39
	"%"            reduce using rule 39
	"++"           reduce using rule 39
	"--"           reduce using rule 39
	"true"         reduce using rule 39
	"false"        reduce using rule 39
	"print"        reduce using rule 39
	"readln"       reduce using rule 39
	"val"          reduce using rule 39
	"var"          reduce using rule 39
	"while"        reduce using rule 39
	"if"           reduce using rule 39
	"("            reduce using rule 39
	")"            reduce using rule 39
	"}"            reduce using rule 39
	"=="           reduce using rule 39
	"!="           reduce using rule 39
	">"            reduce using rule 39
	"<"            reduce using rule 39
	">="           reduce using rule 39
	"<="           reduce using rule 39
	"!"            reduce using rule 39
	"||"           reduce using rule 39
	"&&"           reduce using rule 39
	string         reduce using rule 39
	id             reduce using rule 39
	%eof           reduce using rule 39


State 29

	primary -> "true" .                                 (rule 41)

	num            reduce using rule 41
	"+"            reduce using rule 41
	"-"            reduce using rule 41
	"*"            reduce using rule 41
	"/"            reduce using rule 41
	"%"            reduce using rule 41
	"++"           reduce using rule 41
	"--"           reduce using rule 41
	"true"         reduce using rule 41
	"false"        reduce using rule 41
	"print"        reduce using rule 41
	"readln"       reduce using rule 41
	"val"          reduce using rule 41
	"var"          reduce using rule 41
	"while"        reduce using rule 41
	"if"           reduce using rule 41
	"("            reduce using rule 41
	")"            reduce using rule 41
	"}"            reduce using rule 41
	"=="           reduce using rule 41
	"!="           reduce using rule 41
	">"            reduce using rule 41
	"<"            reduce using rule 41
	">="           reduce using rule 41
	"<="           reduce using rule 41
	"!"            reduce using rule 41
	"||"           reduce using rule 41
	"&&"           reduce using rule 41
	string         reduce using rule 41
	id             reduce using rule 41
	%eof           reduce using rule 41


State 30

	primary -> "false" .                                (rule 42)

	num            reduce using rule 42
	"+"            reduce using rule 42
	"-"            reduce using rule 42
	"*"            reduce using rule 42
	"/"            reduce using rule 42
	"%"            reduce using rule 42
	"++"           reduce using rule 42
	"--"           reduce using rule 42
	"true"         reduce using rule 42
	"false"        reduce using rule 42
	"print"        reduce using rule 42
	"readln"       reduce using rule 42
	"val"          reduce using rule 42
	"var"          reduce using rule 42
	"while"        reduce using rule 42
	"if"           reduce using rule 42
	"("            reduce using rule 42
	")"            reduce using rule 42
	"}"            reduce using rule 42
	"=="           reduce using rule 42
	"!="           reduce using rule 42
	">"            reduce using rule 42
	"<"            reduce using rule 42
	">="           reduce using rule 42
	"<="           reduce using rule 42
	"!"            reduce using rule 42
	"||"           reduce using rule 42
	"&&"           reduce using rule 42
	string         reduce using rule 42
	id             reduce using rule 42
	%eof           reduce using rule 42


State 31

	stmt -> "print" . "(" expr ")"                      (rule 10)

	"("            shift, and enter state 50


State 32

	stmt -> "readln" . "(" ")"                          (rule 11)

	"("            shift, and enter state 49


State 33

	decl_stmt -> "val" . id "=" expr                    (rule 46)

	id             shift, and enter state 48


State 34

	decl_stmt -> "var" . id "=" expr                    (rule 45)

	id             shift, and enter state 47


State 35

	while_stmt -> "while" . "(" expr ")" block          (rule 49)

	"("            shift, and enter state 46


State 36

	if_stmt -> "if" . "(" expr ")" block                (rule 47)
	if_stmt -> "if" . "(" expr ")" block "else" block    (rule 48)

	"("            shift, and enter state 45


State 37

	primary -> "(" . expr ")"                           (rule 43)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	expr           goto state 44
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 38

	unary_expr -> "!" . unary_expr                      (rule 37)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	unary_expr     goto state 42
	primary        goto state 24

State 39

	primary -> string .                                 (rule 44)

	num            reduce using rule 44
	"+"            reduce using rule 44
	"-"            reduce using rule 44
	"*"            reduce using rule 44
	"/"            reduce using rule 44
	"%"            reduce using rule 44
	"++"           reduce using rule 44
	"--"           reduce using rule 44
	"true"         reduce using rule 44
	"false"        reduce using rule 44
	"print"        reduce using rule 44
	"readln"       reduce using rule 44
	"val"          reduce using rule 44
	"var"          reduce using rule 44
	"while"        reduce using rule 44
	"if"           reduce using rule 44
	"("            reduce using rule 44
	")"            reduce using rule 44
	"}"            reduce using rule 44
	"=="           reduce using rule 44
	"!="           reduce using rule 44
	">"            reduce using rule 44
	"<"            reduce using rule 44
	">="           reduce using rule 44
	"<="           reduce using rule 44
	"!"            reduce using rule 44
	"||"           reduce using rule 44
	"&&"           reduce using rule 44
	string         reduce using rule 44
	id             reduce using rule 44
	%eof           reduce using rule 44


State 40

	assign_stmt -> id . "=" expr                        (rule 15)
	primary -> id .                                     (rule 40)

	num            reduce using rule 40
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"*"            reduce using rule 40
	"/"            reduce using rule 40
	"%"            reduce using rule 40
	"++"           reduce using rule 40
	"--"           reduce using rule 40
	"true"         reduce using rule 40
	"false"        reduce using rule 40
	"print"        reduce using rule 40
	"readln"       reduce using rule 40
	"val"          reduce using rule 40
	"var"          reduce using rule 40
	"="            shift, and enter state 41
	"while"        reduce using rule 40
	"if"           reduce using rule 40
	"("            reduce using rule 40
	"}"            reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	">"            reduce using rule 40
	"<"            reduce using rule 40
	">="           reduce using rule 40
	"<="           reduce using rule 40
	"!"            reduce using rule 40
	"||"           reduce using rule 40
	"&&"           reduce using rule 40
	string         reduce using rule 40
	id             reduce using rule 40
	%eof           reduce using rule 40


State 41

	assign_stmt -> id "=" . expr                        (rule 15)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	expr           goto state 90
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 42

	unary_expr -> "!" unary_expr .                      (rule 37)

	num            reduce using rule 37
	"+"            reduce using rule 37
	"-"            reduce using rule 37
	"*"            reduce using rule 37
	"/"            reduce using rule 37
	"%"            reduce using rule 37
	"++"           reduce using rule 37
	"--"           reduce using rule 37
	"true"         reduce using rule 37
	"false"        reduce using rule 37
	"print"        reduce using rule 37
	"readln"       reduce using rule 37
	"val"          reduce using rule 37
	"var"          reduce using rule 37
	"while"        reduce using rule 37
	"if"           reduce using rule 37
	"("            reduce using rule 37
	")"            reduce using rule 37
	"}"            reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	">"            reduce using rule 37
	"<"            reduce using rule 37
	">="           reduce using rule 37
	"<="           reduce using rule 37
	"!"            reduce using rule 37
	"||"           reduce using rule 37
	"&&"           reduce using rule 37
	string         reduce using rule 37
	id             reduce using rule 37
	%eof           reduce using rule 37


State 43

	primary -> id .                                     (rule 40)

	num            reduce using rule 40
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"*"            reduce using rule 40
	"/"            reduce using rule 40
	"%"            reduce using rule 40
	"++"           reduce using rule 40
	"--"           reduce using rule 40
	"true"         reduce using rule 40
	"false"        reduce using rule 40
	"print"        reduce using rule 40
	"readln"       reduce using rule 40
	"val"          reduce using rule 40
	"var"          reduce using rule 40
	"while"        reduce using rule 40
	"if"           reduce using rule 40
	"("            reduce using rule 40
	")"            reduce using rule 40
	"}"            reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	">"            reduce using rule 40
	"<"            reduce using rule 40
	">="           reduce using rule 40
	"<="           reduce using rule 40
	"!"            reduce using rule 40
	"||"           reduce using rule 40
	"&&"           reduce using rule 40
	string         reduce using rule 40
	id             reduce using rule 40
	%eof           reduce using rule 40


State 44

	primary -> "(" expr . ")"                           (rule 43)

	")"            shift, and enter state 89


State 45

	if_stmt -> "if" "(" . expr ")" block                (rule 47)
	if_stmt -> "if" "(" . expr ")" block "else" block    (rule 48)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	expr           goto state 88
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 46

	while_stmt -> "while" "(" . expr ")" block          (rule 49)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	expr           goto state 87
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 47

	decl_stmt -> "var" id . "=" expr                    (rule 45)

	"="            shift, and enter state 86


State 48

	decl_stmt -> "val" id . "=" expr                    (rule 46)

	"="            shift, and enter state 85


State 49

	stmt -> "readln" "(" . ")"                          (rule 11)

	")"            shift, and enter state 84


State 50

	stmt -> "print" "(" . expr ")"                      (rule 10)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	expr           goto state 83
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 51

	mul_expr -> mul_expr "*" . unary_expr               (rule 33)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	unary_expr     goto state 82
	primary        goto state 24

State 52

	mul_expr -> mul_expr "/" . unary_expr               (rule 34)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	unary_expr     goto state 81
	primary        goto state 24

State 53

	mul_expr -> mul_expr "%" . unary_expr               (rule 35)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	unary_expr     goto state 80
	primary        goto state 24

State 54

	add_expr -> add_expr "+" . mul_expr                 (rule 30)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	mul_expr       goto state 79
	unary_expr     goto state 23
	primary        goto state 24

State 55

	add_expr -> add_expr "-" . mul_expr                 (rule 31)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	mul_expr       goto state 78
	unary_expr     goto state 23
	primary        goto state 24

State 56

	rel_expr -> rel_expr ">" . add_expr                 (rule 27)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	add_expr       goto state 77
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 57

	rel_expr -> rel_expr "<" . add_expr                 (rule 25)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	add_expr       goto state 76
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 58

	rel_expr -> rel_expr ">=" . add_expr                (rule 28)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	add_expr       goto state 75
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 59

	rel_expr -> rel_expr "<=" . add_expr                (rule 26)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	add_expr       goto state 74
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 60

	eq_expr -> eq_expr "==" . rel_expr                  (rule 22)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	rel_expr       goto state 73
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 61

	eq_expr -> eq_expr "!=" . rel_expr                  (rule 23)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	rel_expr       goto state 72
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 62

	and_expr -> and_expr "&&" . eq_expr                 (rule 20)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	eq_expr        goto state 71
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 63

	or_expr -> or_expr "||" . and_expr                  (rule 18)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	and_expr       goto state 70
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 64

	assign_stmt -> expr "++" .                          (rule 16)

	num            reduce using rule 16
	"true"         reduce using rule 16
	"false"        reduce using rule 16
	"print"        reduce using rule 16
	"readln"       reduce using rule 16
	"val"          reduce using rule 16
	"var"          reduce using rule 16
	"while"        reduce using rule 16
	"if"           reduce using rule 16
	"("            reduce using rule 16
	"}"            reduce using rule 16
	"!"            reduce using rule 16
	string         reduce using rule 16
	id             reduce using rule 16
	%eof           reduce using rule 16


State 65

	assign_stmt -> expr "--" .                          (rule 17)

	num            reduce using rule 17
	"true"         reduce using rule 17
	"false"        reduce using rule 17
	"print"        reduce using rule 17
	"readln"       reduce using rule 17
	"val"          reduce using rule 17
	"var"          reduce using rule 17
	"while"        reduce using rule 17
	"if"           reduce using rule 17
	"("            reduce using rule 17
	"}"            reduce using rule 17
	"!"            reduce using rule 17
	string         reduce using rule 17
	id             reduce using rule 17
	%eof           reduce using rule 17


State 66

	block -> "{" stmt_list . "}"                        (rule 3)

	"}"            shift, and enter state 69


State 67

	stmt_list -> stmt . stmt_list                       (rule 4)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"print"        shift, and enter state 31
	"readln"       shift, and enter state 32
	"val"          shift, and enter state 33
	"var"          shift, and enter state 34
	"while"        shift, and enter state 35
	"if"           shift, and enter state 36
	"("            shift, and enter state 37
	"}"            reduce using rule 5
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 40

	stmt_list      goto state 68
	stmt           goto state 67
	expr_stmt      goto state 14
	expr           goto state 15
	assign_stmt    goto state 16
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24
	decl_stmt      goto state 25
	if_stmt        goto state 26
	while_stmt     goto state 27

State 68

	stmt_list -> stmt stmt_list .                       (rule 4)

	"}"            reduce using rule 4


State 69

	block -> "{" stmt_list "}" .                        (rule 3)

	num            reduce using rule 3
	"true"         reduce using rule 3
	"false"        reduce using rule 3
	"print"        reduce using rule 3
	"readln"       reduce using rule 3
	"val"          reduce using rule 3
	"var"          reduce using rule 3
	"while"        reduce using rule 3
	"if"           reduce using rule 3
	"else"         reduce using rule 3
	"("            reduce using rule 3
	"}"            reduce using rule 3
	"!"            reduce using rule 3
	string         reduce using rule 3
	id             reduce using rule 3
	%eof           reduce using rule 3


State 70

	or_expr -> or_expr "||" and_expr .                  (rule 18)
	and_expr -> and_expr . "&&" eq_expr                 (rule 20)

	num            reduce using rule 18
	"++"           reduce using rule 18
	"--"           reduce using rule 18
	"true"         reduce using rule 18
	"false"        reduce using rule 18
	"print"        reduce using rule 18
	"readln"       reduce using rule 18
	"val"          reduce using rule 18
	"var"          reduce using rule 18
	"while"        reduce using rule 18
	"if"           reduce using rule 18
	"("            reduce using rule 18
	")"            reduce using rule 18
	"}"            reduce using rule 18
	"!"            reduce using rule 18
	"||"           reduce using rule 18
	"&&"           shift, and enter state 62
	string         reduce using rule 18
	id             reduce using rule 18
	%eof           reduce using rule 18


State 71

	and_expr -> and_expr "&&" eq_expr .                 (rule 20)
	eq_expr -> eq_expr . "==" rel_expr                  (rule 22)
	eq_expr -> eq_expr . "!=" rel_expr                  (rule 23)

	num            reduce using rule 20
	"++"           reduce using rule 20
	"--"           reduce using rule 20
	"true"         reduce using rule 20
	"false"        reduce using rule 20
	"print"        reduce using rule 20
	"readln"       reduce using rule 20
	"val"          reduce using rule 20
	"var"          reduce using rule 20
	"while"        reduce using rule 20
	"if"           reduce using rule 20
	"("            reduce using rule 20
	")"            reduce using rule 20
	"}"            reduce using rule 20
	"=="           shift, and enter state 60
	"!="           shift, and enter state 61
	"!"            reduce using rule 20
	"||"           reduce using rule 20
	"&&"           reduce using rule 20
	string         reduce using rule 20
	id             reduce using rule 20
	%eof           reduce using rule 20


State 72

	eq_expr -> eq_expr "!=" rel_expr .                  (rule 23)
	rel_expr -> rel_expr . "<" add_expr                 (rule 25)
	rel_expr -> rel_expr . "<=" add_expr                (rule 26)
	rel_expr -> rel_expr . ">" add_expr                 (rule 27)
	rel_expr -> rel_expr . ">=" add_expr                (rule 28)

	num            reduce using rule 23
	"++"           reduce using rule 23
	"--"           reduce using rule 23
	"true"         reduce using rule 23
	"false"        reduce using rule 23
	"print"        reduce using rule 23
	"readln"       reduce using rule 23
	"val"          reduce using rule 23
	"var"          reduce using rule 23
	"while"        reduce using rule 23
	"if"           reduce using rule 23
	"("            reduce using rule 23
	")"            reduce using rule 23
	"}"            reduce using rule 23
	"=="           reduce using rule 23
	"!="           reduce using rule 23
	">"            shift, and enter state 56
	"<"            shift, and enter state 57
	">="           shift, and enter state 58
	"<="           shift, and enter state 59
	"!"            reduce using rule 23
	"||"           reduce using rule 23
	"&&"           reduce using rule 23
	string         reduce using rule 23
	id             reduce using rule 23
	%eof           reduce using rule 23


State 73

	eq_expr -> eq_expr "==" rel_expr .                  (rule 22)
	rel_expr -> rel_expr . "<" add_expr                 (rule 25)
	rel_expr -> rel_expr . "<=" add_expr                (rule 26)
	rel_expr -> rel_expr . ">" add_expr                 (rule 27)
	rel_expr -> rel_expr . ">=" add_expr                (rule 28)

	num            reduce using rule 22
	"++"           reduce using rule 22
	"--"           reduce using rule 22
	"true"         reduce using rule 22
	"false"        reduce using rule 22
	"print"        reduce using rule 22
	"readln"       reduce using rule 22
	"val"          reduce using rule 22
	"var"          reduce using rule 22
	"while"        reduce using rule 22
	"if"           reduce using rule 22
	"("            reduce using rule 22
	")"            reduce using rule 22
	"}"            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	">"            shift, and enter state 56
	"<"            shift, and enter state 57
	">="           shift, and enter state 58
	"<="           shift, and enter state 59
	"!"            reduce using rule 22
	"||"           reduce using rule 22
	"&&"           reduce using rule 22
	string         reduce using rule 22
	id             reduce using rule 22
	%eof           reduce using rule 22


State 74

	rel_expr -> rel_expr "<=" add_expr .                (rule 26)
	add_expr -> add_expr . "+" mul_expr                 (rule 30)
	add_expr -> add_expr . "-" mul_expr                 (rule 31)

	num            reduce using rule 26
	"+"            shift, and enter state 54
	"-"            shift, and enter state 55
	"++"           reduce using rule 26
	"--"           reduce using rule 26
	"true"         reduce using rule 26
	"false"        reduce using rule 26
	"print"        reduce using rule 26
	"readln"       reduce using rule 26
	"val"          reduce using rule 26
	"var"          reduce using rule 26
	"while"        reduce using rule 26
	"if"           reduce using rule 26
	"("            reduce using rule 26
	")"            reduce using rule 26
	"}"            reduce using rule 26
	"=="           reduce using rule 26
	"!="           reduce using rule 26
	">"            reduce using rule 26
	"<"            reduce using rule 26
	">="           reduce using rule 26
	"<="           reduce using rule 26
	"!"            reduce using rule 26
	"||"           reduce using rule 26
	"&&"           reduce using rule 26
	string         reduce using rule 26
	id             reduce using rule 26
	%eof           reduce using rule 26


State 75

	rel_expr -> rel_expr ">=" add_expr .                (rule 28)
	add_expr -> add_expr . "+" mul_expr                 (rule 30)
	add_expr -> add_expr . "-" mul_expr                 (rule 31)

	num            reduce using rule 28
	"+"            shift, and enter state 54
	"-"            shift, and enter state 55
	"++"           reduce using rule 28
	"--"           reduce using rule 28
	"true"         reduce using rule 28
	"false"        reduce using rule 28
	"print"        reduce using rule 28
	"readln"       reduce using rule 28
	"val"          reduce using rule 28
	"var"          reduce using rule 28
	"while"        reduce using rule 28
	"if"           reduce using rule 28
	"("            reduce using rule 28
	")"            reduce using rule 28
	"}"            reduce using rule 28
	"=="           reduce using rule 28
	"!="           reduce using rule 28
	">"            reduce using rule 28
	"<"            reduce using rule 28
	">="           reduce using rule 28
	"<="           reduce using rule 28
	"!"            reduce using rule 28
	"||"           reduce using rule 28
	"&&"           reduce using rule 28
	string         reduce using rule 28
	id             reduce using rule 28
	%eof           reduce using rule 28


State 76

	rel_expr -> rel_expr "<" add_expr .                 (rule 25)
	add_expr -> add_expr . "+" mul_expr                 (rule 30)
	add_expr -> add_expr . "-" mul_expr                 (rule 31)

	num            reduce using rule 25
	"+"            shift, and enter state 54
	"-"            shift, and enter state 55
	"++"           reduce using rule 25
	"--"           reduce using rule 25
	"true"         reduce using rule 25
	"false"        reduce using rule 25
	"print"        reduce using rule 25
	"readln"       reduce using rule 25
	"val"          reduce using rule 25
	"var"          reduce using rule 25
	"while"        reduce using rule 25
	"if"           reduce using rule 25
	"("            reduce using rule 25
	")"            reduce using rule 25
	"}"            reduce using rule 25
	"=="           reduce using rule 25
	"!="           reduce using rule 25
	">"            reduce using rule 25
	"<"            reduce using rule 25
	">="           reduce using rule 25
	"<="           reduce using rule 25
	"!"            reduce using rule 25
	"||"           reduce using rule 25
	"&&"           reduce using rule 25
	string         reduce using rule 25
	id             reduce using rule 25
	%eof           reduce using rule 25


State 77

	rel_expr -> rel_expr ">" add_expr .                 (rule 27)
	add_expr -> add_expr . "+" mul_expr                 (rule 30)
	add_expr -> add_expr . "-" mul_expr                 (rule 31)

	num            reduce using rule 27
	"+"            shift, and enter state 54
	"-"            shift, and enter state 55
	"++"           reduce using rule 27
	"--"           reduce using rule 27
	"true"         reduce using rule 27
	"false"        reduce using rule 27
	"print"        reduce using rule 27
	"readln"       reduce using rule 27
	"val"          reduce using rule 27
	"var"          reduce using rule 27
	"while"        reduce using rule 27
	"if"           reduce using rule 27
	"("            reduce using rule 27
	")"            reduce using rule 27
	"}"            reduce using rule 27
	"=="           reduce using rule 27
	"!="           reduce using rule 27
	">"            reduce using rule 27
	"<"            reduce using rule 27
	">="           reduce using rule 27
	"<="           reduce using rule 27
	"!"            reduce using rule 27
	"||"           reduce using rule 27
	"&&"           reduce using rule 27
	string         reduce using rule 27
	id             reduce using rule 27
	%eof           reduce using rule 27


State 78

	add_expr -> add_expr "-" mul_expr .                 (rule 31)
	mul_expr -> mul_expr . "*" unary_expr               (rule 33)
	mul_expr -> mul_expr . "/" unary_expr               (rule 34)
	mul_expr -> mul_expr . "%" unary_expr               (rule 35)

	num            reduce using rule 31
	"+"            reduce using rule 31
	"-"            reduce using rule 31
	"*"            shift, and enter state 51
	"/"            shift, and enter state 52
	"%"            shift, and enter state 53
	"++"           reduce using rule 31
	"--"           reduce using rule 31
	"true"         reduce using rule 31
	"false"        reduce using rule 31
	"print"        reduce using rule 31
	"readln"       reduce using rule 31
	"val"          reduce using rule 31
	"var"          reduce using rule 31
	"while"        reduce using rule 31
	"if"           reduce using rule 31
	"("            reduce using rule 31
	")"            reduce using rule 31
	"}"            reduce using rule 31
	"=="           reduce using rule 31
	"!="           reduce using rule 31
	">"            reduce using rule 31
	"<"            reduce using rule 31
	">="           reduce using rule 31
	"<="           reduce using rule 31
	"!"            reduce using rule 31
	"||"           reduce using rule 31
	"&&"           reduce using rule 31
	string         reduce using rule 31
	id             reduce using rule 31
	%eof           reduce using rule 31


State 79

	add_expr -> add_expr "+" mul_expr .                 (rule 30)
	mul_expr -> mul_expr . "*" unary_expr               (rule 33)
	mul_expr -> mul_expr . "/" unary_expr               (rule 34)
	mul_expr -> mul_expr . "%" unary_expr               (rule 35)

	num            reduce using rule 30
	"+"            reduce using rule 30
	"-"            reduce using rule 30
	"*"            shift, and enter state 51
	"/"            shift, and enter state 52
	"%"            shift, and enter state 53
	"++"           reduce using rule 30
	"--"           reduce using rule 30
	"true"         reduce using rule 30
	"false"        reduce using rule 30
	"print"        reduce using rule 30
	"readln"       reduce using rule 30
	"val"          reduce using rule 30
	"var"          reduce using rule 30
	"while"        reduce using rule 30
	"if"           reduce using rule 30
	"("            reduce using rule 30
	")"            reduce using rule 30
	"}"            reduce using rule 30
	"=="           reduce using rule 30
	"!="           reduce using rule 30
	">"            reduce using rule 30
	"<"            reduce using rule 30
	">="           reduce using rule 30
	"<="           reduce using rule 30
	"!"            reduce using rule 30
	"||"           reduce using rule 30
	"&&"           reduce using rule 30
	string         reduce using rule 30
	id             reduce using rule 30
	%eof           reduce using rule 30


State 80

	mul_expr -> mul_expr "%" unary_expr .               (rule 35)

	num            reduce using rule 35
	"+"            reduce using rule 35
	"-"            reduce using rule 35
	"*"            reduce using rule 35
	"/"            reduce using rule 35
	"%"            reduce using rule 35
	"++"           reduce using rule 35
	"--"           reduce using rule 35
	"true"         reduce using rule 35
	"false"        reduce using rule 35
	"print"        reduce using rule 35
	"readln"       reduce using rule 35
	"val"          reduce using rule 35
	"var"          reduce using rule 35
	"while"        reduce using rule 35
	"if"           reduce using rule 35
	"("            reduce using rule 35
	")"            reduce using rule 35
	"}"            reduce using rule 35
	"=="           reduce using rule 35
	"!="           reduce using rule 35
	">"            reduce using rule 35
	"<"            reduce using rule 35
	">="           reduce using rule 35
	"<="           reduce using rule 35
	"!"            reduce using rule 35
	"||"           reduce using rule 35
	"&&"           reduce using rule 35
	string         reduce using rule 35
	id             reduce using rule 35
	%eof           reduce using rule 35


State 81

	mul_expr -> mul_expr "/" unary_expr .               (rule 34)

	num            reduce using rule 34
	"+"            reduce using rule 34
	"-"            reduce using rule 34
	"*"            reduce using rule 34
	"/"            reduce using rule 34
	"%"            reduce using rule 34
	"++"           reduce using rule 34
	"--"           reduce using rule 34
	"true"         reduce using rule 34
	"false"        reduce using rule 34
	"print"        reduce using rule 34
	"readln"       reduce using rule 34
	"val"          reduce using rule 34
	"var"          reduce using rule 34
	"while"        reduce using rule 34
	"if"           reduce using rule 34
	"("            reduce using rule 34
	")"            reduce using rule 34
	"}"            reduce using rule 34
	"=="           reduce using rule 34
	"!="           reduce using rule 34
	">"            reduce using rule 34
	"<"            reduce using rule 34
	">="           reduce using rule 34
	"<="           reduce using rule 34
	"!"            reduce using rule 34
	"||"           reduce using rule 34
	"&&"           reduce using rule 34
	string         reduce using rule 34
	id             reduce using rule 34
	%eof           reduce using rule 34


State 82

	mul_expr -> mul_expr "*" unary_expr .               (rule 33)

	num            reduce using rule 33
	"+"            reduce using rule 33
	"-"            reduce using rule 33
	"*"            reduce using rule 33
	"/"            reduce using rule 33
	"%"            reduce using rule 33
	"++"           reduce using rule 33
	"--"           reduce using rule 33
	"true"         reduce using rule 33
	"false"        reduce using rule 33
	"print"        reduce using rule 33
	"readln"       reduce using rule 33
	"val"          reduce using rule 33
	"var"          reduce using rule 33
	"while"        reduce using rule 33
	"if"           reduce using rule 33
	"("            reduce using rule 33
	")"            reduce using rule 33
	"}"            reduce using rule 33
	"=="           reduce using rule 33
	"!="           reduce using rule 33
	">"            reduce using rule 33
	"<"            reduce using rule 33
	">="           reduce using rule 33
	"<="           reduce using rule 33
	"!"            reduce using rule 33
	"||"           reduce using rule 33
	"&&"           reduce using rule 33
	string         reduce using rule 33
	id             reduce using rule 33
	%eof           reduce using rule 33


State 83

	stmt -> "print" "(" expr . ")"                      (rule 10)

	")"            shift, and enter state 95


State 84

	stmt -> "readln" "(" ")" .                          (rule 11)

	num            reduce using rule 11
	"true"         reduce using rule 11
	"false"        reduce using rule 11
	"print"        reduce using rule 11
	"readln"       reduce using rule 11
	"val"          reduce using rule 11
	"var"          reduce using rule 11
	"while"        reduce using rule 11
	"if"           reduce using rule 11
	"("            reduce using rule 11
	"}"            reduce using rule 11
	"!"            reduce using rule 11
	string         reduce using rule 11
	id             reduce using rule 11
	%eof           reduce using rule 11


State 85

	decl_stmt -> "val" id "=" . expr                    (rule 46)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	expr           goto state 94
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 86

	decl_stmt -> "var" id "=" . expr                    (rule 45)

	num            shift, and enter state 28
	"true"         shift, and enter state 29
	"false"        shift, and enter state 30
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 43

	expr           goto state 93
	or_expr        goto state 17
	and_expr       goto state 18
	eq_expr        goto state 19
	rel_expr       goto state 20
	add_expr       goto state 21
	mul_expr       goto state 22
	unary_expr     goto state 23
	primary        goto state 24

State 87

	while_stmt -> "while" "(" expr . ")" block          (rule 49)

	")"            shift, and enter state 92


State 88

	if_stmt -> "if" "(" expr . ")" block                (rule 47)
	if_stmt -> "if" "(" expr . ")" block "else" block    (rule 48)

	")"            shift, and enter state 91


State 89

	primary -> "(" expr ")" .                           (rule 43)

	num            reduce using rule 43
	"+"            reduce using rule 43
	"-"            reduce using rule 43
	"*"            reduce using rule 43
	"/"            reduce using rule 43
	"%"            reduce using rule 43
	"++"           reduce using rule 43
	"--"           reduce using rule 43
	"true"         reduce using rule 43
	"false"        reduce using rule 43
	"print"        reduce using rule 43
	"readln"       reduce using rule 43
	"val"          reduce using rule 43
	"var"          reduce using rule 43
	"while"        reduce using rule 43
	"if"           reduce using rule 43
	"("            reduce using rule 43
	")"            reduce using rule 43
	"}"            reduce using rule 43
	"=="           reduce using rule 43
	"!="           reduce using rule 43
	">"            reduce using rule 43
	"<"            reduce using rule 43
	">="           reduce using rule 43
	"<="           reduce using rule 43
	"!"            reduce using rule 43
	"||"           reduce using rule 43
	"&&"           reduce using rule 43
	string         reduce using rule 43
	id             reduce using rule 43
	%eof           reduce using rule 43


State 90

	assign_stmt -> id "=" expr .                        (rule 15)

	num            reduce using rule 15
	"true"         reduce using rule 15
	"false"        reduce using rule 15
	"print"        reduce using rule 15
	"readln"       reduce using rule 15
	"val"          reduce using rule 15
	"var"          reduce using rule 15
	"while"        reduce using rule 15
	"if"           reduce using rule 15
	"("            reduce using rule 15
	"}"            reduce using rule 15
	"!"            reduce using rule 15
	string         reduce using rule 15
	id             reduce using rule 15
	%eof           reduce using rule 15


State 91

	if_stmt -> "if" "(" expr ")" . block                (rule 47)
	if_stmt -> "if" "(" expr ")" . block "else" block    (rule 48)

	"{"            shift, and enter state 12

	block          goto state 97

State 92

	while_stmt -> "while" "(" expr ")" . block          (rule 49)

	"{"            shift, and enter state 12

	block          goto state 96

State 93

	decl_stmt -> "var" id "=" expr .                    (rule 45)

	num            reduce using rule 45
	"true"         reduce using rule 45
	"false"        reduce using rule 45
	"print"        reduce using rule 45
	"readln"       reduce using rule 45
	"val"          reduce using rule 45
	"var"          reduce using rule 45
	"while"        reduce using rule 45
	"if"           reduce using rule 45
	"("            reduce using rule 45
	"}"            reduce using rule 45
	"!"            reduce using rule 45
	string         reduce using rule 45
	id             reduce using rule 45
	%eof           reduce using rule 45


State 94

	decl_stmt -> "val" id "=" expr .                    (rule 46)

	num            reduce using rule 46
	"true"         reduce using rule 46
	"false"        reduce using rule 46
	"print"        reduce using rule 46
	"readln"       reduce using rule 46
	"val"          reduce using rule 46
	"var"          reduce using rule 46
	"while"        reduce using rule 46
	"if"           reduce using rule 46
	"("            reduce using rule 46
	"}"            reduce using rule 46
	"!"            reduce using rule 46
	string         reduce using rule 46
	id             reduce using rule 46
	%eof           reduce using rule 46


State 95

	stmt -> "print" "(" expr ")" .                      (rule 10)

	num            reduce using rule 10
	"true"         reduce using rule 10
	"false"        reduce using rule 10
	"print"        reduce using rule 10
	"readln"       reduce using rule 10
	"val"          reduce using rule 10
	"var"          reduce using rule 10
	"while"        reduce using rule 10
	"if"           reduce using rule 10
	"("            reduce using rule 10
	"}"            reduce using rule 10
	"!"            reduce using rule 10
	string         reduce using rule 10
	id             reduce using rule 10
	%eof           reduce using rule 10


State 96

	while_stmt -> "while" "(" expr ")" block .          (rule 49)

	num            reduce using rule 49
	"true"         reduce using rule 49
	"false"        reduce using rule 49
	"print"        reduce using rule 49
	"readln"       reduce using rule 49
	"val"          reduce using rule 49
	"var"          reduce using rule 49
	"while"        reduce using rule 49
	"if"           reduce using rule 49
	"("            reduce using rule 49
	"}"            reduce using rule 49
	"!"            reduce using rule 49
	string         reduce using rule 49
	id             reduce using rule 49
	%eof           reduce using rule 49


State 97

	if_stmt -> "if" "(" expr ")" block .                (rule 47)
	if_stmt -> "if" "(" expr ")" block . "else" block    (rule 48)

	num            reduce using rule 47
	"true"         reduce using rule 47
	"false"        reduce using rule 47
	"print"        reduce using rule 47
	"readln"       reduce using rule 47
	"val"          reduce using rule 47
	"var"          reduce using rule 47
	"while"        reduce using rule 47
	"if"           reduce using rule 47
	"else"         shift, and enter state 98
	"("            reduce using rule 47
	"}"            reduce using rule 47
	"!"            reduce using rule 47
	string         reduce using rule 47
	id             reduce using rule 47
	%eof           reduce using rule 47


State 98

	if_stmt -> "if" "(" expr ")" block "else" . block    (rule 48)

	"{"            shift, and enter state 12

	block          goto state 99

State 99

	if_stmt -> "if" "(" expr ")" block "else" block .    (rule 48)

	num            reduce using rule 48
	"true"         reduce using rule 48
	"false"        reduce using rule 48
	"print"        reduce using rule 48
	"readln"       reduce using rule 48
	"val"          reduce using rule 48
	"var"          reduce using rule 48
	"while"        reduce using rule 48
	"if"           reduce using rule 48
	"("            reduce using rule 48
	"}"            reduce using rule 48
	"!"            reduce using rule 48
	string         reduce using rule 48
	id             reduce using rule 48
	%eof           reduce using rule 48


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 50
Number of terminals: 35
Number of non-terminals: 19
Number of states: 100
