-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------


rule 11 is unused

terminal "++" is unused
terminal "--" is unused
terminal string is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	program -> "fun" "main" "(" ")" block              (1)
	block -> "{" stmt_list "}"                         (2)
	stmt_list ->                                       (3)
	stmt_list -> stmt stmt_list                        (4)
	stmt -> decl_stmt                                  (5)
	stmt -> assign_stmt                                (6)
	stmt -> if_stmt                                    (7)
	stmt -> while_stmt                                 (8)
	stmt -> "print" "(" expr ")"                       (9)
	stmt -> "readln" "(" ")"                           (10)
	expr_stmt -> expr                                  (11)
	expr -> or_expr                                    (12)
	assign_stmt -> id "=" expr                         (13)
	or_expr -> or_expr "||" and_expr                   (14)
	or_expr -> and_expr                                (15)
	and_expr -> and_expr "&&" eq_expr                  (16)
	and_expr -> eq_expr                                (17)
	eq_expr -> eq_expr "==" rel_expr                   (18)
	eq_expr -> eq_expr "!=" rel_expr                   (19)
	eq_expr -> rel_expr                                (20)
	rel_expr -> rel_expr "<" add_expr                  (21)
	rel_expr -> rel_expr "<=" add_expr                 (22)
	rel_expr -> rel_expr ">" add_expr                  (23)
	rel_expr -> rel_expr ">=" add_expr                 (24)
	rel_expr -> add_expr                               (25)
	add_expr -> add_expr "+" mul_expr                  (26)
	add_expr -> add_expr "-" mul_expr                  (27)
	add_expr -> mul_expr                               (28)
	mul_expr -> mul_expr "*" unary_expr                (29)
	mul_expr -> mul_expr "/" unary_expr                (30)
	mul_expr -> mul_expr "%" unary_expr                (31)
	mul_expr -> unary_expr                             (32)
	unary_expr -> "!" unary_expr                       (33)
	unary_expr -> primary                              (34)
	primary -> num                                     (35)
	primary -> id                                      (36)
	primary -> "true"                                  (37)
	primary -> "false"                                 (38)
	primary -> "(" expr ")"                            (39)
	decl_stmt -> "var" id "=" expr                     (40)
	decl_stmt -> "val" id "=" expr                     (41)
	if_stmt -> "if" "(" expr ")" block                 (42)
	if_stmt -> "if" "(" expr ")" block "else" block    (43)
	while_stmt -> "while" "(" expr ")" block           (44)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	num            { TNum $$ }
	"fun"          { TFun }
	"main"         { TMain }
	"+"            { TPlus }
	"-"            { TMinus }
	"*"            { TMult }
	"/"            { TDiv }
	"%"            { TMod }
	"++"           { TIncr }
	"--"           { TDecr }
	"true"         { TTrue }
	"false"        { TFalse }
	"print"        { TPrint }
	"readln"       { TReadln }
	"val"          { TVal }
	"var"          { TVar }
	"="            { TAssign }
	"while"        { TWhile }
	"if"           { TIf }
	"else"         { TElse }
	"("            { TLParen }
	")"            { TRParen }
	"{"            { TLBraces }
	"}"            { TRBraces }
	"=="           { TEqual }
	"!="           { TDifferent }
	">"            { TGreater }
	"<"            { TLess }
	">="           { TGreaterEq }
	"<="           { TLessEq }
	"!"            { TNot }
	"||"           { TOr }
	"&&"           { TAnd }
	string         { TString $$ }
	id             { TId $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	program         rule  1
	block           rule  2
	stmt_list       rules 3, 4
	stmt            rules 5, 6, 7, 8, 9, 10
	expr_stmt       rule  11
	expr            rule  12
	assign_stmt     rule  13
	or_expr         rules 14, 15
	and_expr        rules 16, 17
	eq_expr         rules 18, 19, 20
	rel_expr        rules 21, 22, 23, 24, 25
	add_expr        rules 26, 27, 28
	mul_expr        rules 29, 30, 31, 32
	unary_expr      rules 33, 34
	primary         rules 35, 36, 37, 38, 39
	decl_stmt       rules 40, 41
	if_stmt         rules 42, 43
	while_stmt      rule  44

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . program                          (rule 0)

	"fun"          shift, and enter state 2

	program        goto state 3

State 1

	program -> . "fun" "main" "(" ")" block             (rule 1)

	"fun"          shift, and enter state 2


State 2

	program -> "fun" . "main" "(" ")" block             (rule 1)

	"main"         shift, and enter state 4


State 3

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 4

	program -> "fun" "main" . "(" ")" block             (rule 1)

	"("            shift, and enter state 5


State 5

	program -> "fun" "main" "(" . ")" block             (rule 1)

	")"            shift, and enter state 6


State 6

	program -> "fun" "main" "(" ")" . block             (rule 1)

	"{"            shift, and enter state 8

	block          goto state 7

State 7

	program -> "fun" "main" "(" ")" block .             (rule 1)

	%eof           reduce using rule 1


State 8

	block -> "{" . stmt_list "}"                        (rule 2)

	"print"        shift, and enter state 15
	"readln"       shift, and enter state 16
	"val"          shift, and enter state 17
	"var"          shift, and enter state 18
	"while"        shift, and enter state 19
	"if"           shift, and enter state 20
	"}"            reduce using rule 3
	id             shift, and enter state 21

	stmt_list      goto state 9
	stmt           goto state 10
	assign_stmt    goto state 11
	decl_stmt      goto state 12
	if_stmt        goto state 13
	while_stmt     goto state 14

State 9

	block -> "{" stmt_list . "}"                        (rule 2)

	"}"            shift, and enter state 30


State 10

	stmt_list -> stmt . stmt_list                       (rule 4)

	"print"        shift, and enter state 15
	"readln"       shift, and enter state 16
	"val"          shift, and enter state 17
	"var"          shift, and enter state 18
	"while"        shift, and enter state 19
	"if"           shift, and enter state 20
	"}"            reduce using rule 3
	id             shift, and enter state 21

	stmt_list      goto state 29
	stmt           goto state 10
	assign_stmt    goto state 11
	decl_stmt      goto state 12
	if_stmt        goto state 13
	while_stmt     goto state 14

State 11

	stmt -> assign_stmt .                               (rule 6)

	"print"        reduce using rule 6
	"readln"       reduce using rule 6
	"val"          reduce using rule 6
	"var"          reduce using rule 6
	"while"        reduce using rule 6
	"if"           reduce using rule 6
	"}"            reduce using rule 6
	id             reduce using rule 6


State 12

	stmt -> decl_stmt .                                 (rule 5)

	"print"        reduce using rule 5
	"readln"       reduce using rule 5
	"val"          reduce using rule 5
	"var"          reduce using rule 5
	"while"        reduce using rule 5
	"if"           reduce using rule 5
	"}"            reduce using rule 5
	id             reduce using rule 5


State 13

	stmt -> if_stmt .                                   (rule 7)

	"print"        reduce using rule 7
	"readln"       reduce using rule 7
	"val"          reduce using rule 7
	"var"          reduce using rule 7
	"while"        reduce using rule 7
	"if"           reduce using rule 7
	"}"            reduce using rule 7
	id             reduce using rule 7


State 14

	stmt -> while_stmt .                                (rule 8)

	"print"        reduce using rule 8
	"readln"       reduce using rule 8
	"val"          reduce using rule 8
	"var"          reduce using rule 8
	"while"        reduce using rule 8
	"if"           reduce using rule 8
	"}"            reduce using rule 8
	id             reduce using rule 8


State 15

	stmt -> "print" . "(" expr ")"                      (rule 9)

	"("            shift, and enter state 28


State 16

	stmt -> "readln" . "(" ")"                          (rule 10)

	"("            shift, and enter state 27


State 17

	decl_stmt -> "val" . id "=" expr                    (rule 41)

	id             shift, and enter state 26


State 18

	decl_stmt -> "var" . id "=" expr                    (rule 40)

	id             shift, and enter state 25


State 19

	while_stmt -> "while" . "(" expr ")" block          (rule 44)

	"("            shift, and enter state 24


State 20

	if_stmt -> "if" . "(" expr ")" block                (rule 42)
	if_stmt -> "if" . "(" expr ")" block "else" block    (rule 43)

	"("            shift, and enter state 23


State 21

	assign_stmt -> id . "=" expr                        (rule 13)

	"="            shift, and enter state 22


State 22

	assign_stmt -> id "=" . expr                        (rule 13)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	expr           goto state 51
	or_expr        goto state 32
	and_expr       goto state 33
	eq_expr        goto state 34
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 23

	if_stmt -> "if" "(" . expr ")" block                (rule 42)
	if_stmt -> "if" "(" . expr ")" block "else" block    (rule 43)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	expr           goto state 50
	or_expr        goto state 32
	and_expr       goto state 33
	eq_expr        goto state 34
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 24

	while_stmt -> "while" "(" . expr ")" block          (rule 44)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	expr           goto state 49
	or_expr        goto state 32
	and_expr       goto state 33
	eq_expr        goto state 34
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 25

	decl_stmt -> "var" id . "=" expr                    (rule 40)

	"="            shift, and enter state 48


State 26

	decl_stmt -> "val" id . "=" expr                    (rule 41)

	"="            shift, and enter state 47


State 27

	stmt -> "readln" "(" . ")"                          (rule 10)

	")"            shift, and enter state 46


State 28

	stmt -> "print" "(" . expr ")"                      (rule 9)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	expr           goto state 31
	or_expr        goto state 32
	and_expr       goto state 33
	eq_expr        goto state 34
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 29

	stmt_list -> stmt stmt_list .                       (rule 4)

	"}"            reduce using rule 4


State 30

	block -> "{" stmt_list "}" .                        (rule 2)

	"print"        reduce using rule 2
	"readln"       reduce using rule 2
	"val"          reduce using rule 2
	"var"          reduce using rule 2
	"while"        reduce using rule 2
	"if"           reduce using rule 2
	"else"         reduce using rule 2
	"}"            reduce using rule 2
	id             reduce using rule 2
	%eof           reduce using rule 2


State 31

	stmt -> "print" "(" expr . ")"                      (rule 9)

	")"            shift, and enter state 71


State 32

	expr -> or_expr .                                   (rule 12)
	or_expr -> or_expr . "||" and_expr                  (rule 14)

	"print"        reduce using rule 12
	"readln"       reduce using rule 12
	"val"          reduce using rule 12
	"var"          reduce using rule 12
	"while"        reduce using rule 12
	"if"           reduce using rule 12
	")"            reduce using rule 12
	"}"            reduce using rule 12
	"||"           shift, and enter state 70
	id             reduce using rule 12


State 33

	or_expr -> and_expr .                               (rule 15)
	and_expr -> and_expr . "&&" eq_expr                 (rule 16)

	"print"        reduce using rule 15
	"readln"       reduce using rule 15
	"val"          reduce using rule 15
	"var"          reduce using rule 15
	"while"        reduce using rule 15
	"if"           reduce using rule 15
	")"            reduce using rule 15
	"}"            reduce using rule 15
	"||"           reduce using rule 15
	"&&"           shift, and enter state 69
	id             reduce using rule 15


State 34

	and_expr -> eq_expr .                               (rule 17)
	eq_expr -> eq_expr . "==" rel_expr                  (rule 18)
	eq_expr -> eq_expr . "!=" rel_expr                  (rule 19)

	"print"        reduce using rule 17
	"readln"       reduce using rule 17
	"val"          reduce using rule 17
	"var"          reduce using rule 17
	"while"        reduce using rule 17
	"if"           reduce using rule 17
	")"            reduce using rule 17
	"}"            reduce using rule 17
	"=="           shift, and enter state 67
	"!="           shift, and enter state 68
	"||"           reduce using rule 17
	"&&"           reduce using rule 17
	id             reduce using rule 17


State 35

	eq_expr -> rel_expr .                               (rule 20)
	rel_expr -> rel_expr . "<" add_expr                 (rule 21)
	rel_expr -> rel_expr . "<=" add_expr                (rule 22)
	rel_expr -> rel_expr . ">" add_expr                 (rule 23)
	rel_expr -> rel_expr . ">=" add_expr                (rule 24)

	"print"        reduce using rule 20
	"readln"       reduce using rule 20
	"val"          reduce using rule 20
	"var"          reduce using rule 20
	"while"        reduce using rule 20
	"if"           reduce using rule 20
	")"            reduce using rule 20
	"}"            reduce using rule 20
	"=="           reduce using rule 20
	"!="           reduce using rule 20
	">"            shift, and enter state 63
	"<"            shift, and enter state 64
	">="           shift, and enter state 65
	"<="           shift, and enter state 66
	"||"           reduce using rule 20
	"&&"           reduce using rule 20
	id             reduce using rule 20


State 36

	rel_expr -> add_expr .                              (rule 25)
	add_expr -> add_expr . "+" mul_expr                 (rule 26)
	add_expr -> add_expr . "-" mul_expr                 (rule 27)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"print"        reduce using rule 25
	"readln"       reduce using rule 25
	"val"          reduce using rule 25
	"var"          reduce using rule 25
	"while"        reduce using rule 25
	"if"           reduce using rule 25
	")"            reduce using rule 25
	"}"            reduce using rule 25
	"=="           reduce using rule 25
	"!="           reduce using rule 25
	">"            reduce using rule 25
	"<"            reduce using rule 25
	">="           reduce using rule 25
	"<="           reduce using rule 25
	"||"           reduce using rule 25
	"&&"           reduce using rule 25
	id             reduce using rule 25


State 37

	add_expr -> mul_expr .                              (rule 28)
	mul_expr -> mul_expr . "*" unary_expr               (rule 29)
	mul_expr -> mul_expr . "/" unary_expr               (rule 30)
	mul_expr -> mul_expr . "%" unary_expr               (rule 31)

	"+"            reduce using rule 28
	"-"            reduce using rule 28
	"*"            shift, and enter state 58
	"/"            shift, and enter state 59
	"%"            shift, and enter state 60
	"print"        reduce using rule 28
	"readln"       reduce using rule 28
	"val"          reduce using rule 28
	"var"          reduce using rule 28
	"while"        reduce using rule 28
	"if"           reduce using rule 28
	")"            reduce using rule 28
	"}"            reduce using rule 28
	"=="           reduce using rule 28
	"!="           reduce using rule 28
	">"            reduce using rule 28
	"<"            reduce using rule 28
	">="           reduce using rule 28
	"<="           reduce using rule 28
	"||"           reduce using rule 28
	"&&"           reduce using rule 28
	id             reduce using rule 28


State 38

	mul_expr -> unary_expr .                            (rule 32)

	"+"            reduce using rule 32
	"-"            reduce using rule 32
	"*"            reduce using rule 32
	"/"            reduce using rule 32
	"%"            reduce using rule 32
	"print"        reduce using rule 32
	"readln"       reduce using rule 32
	"val"          reduce using rule 32
	"var"          reduce using rule 32
	"while"        reduce using rule 32
	"if"           reduce using rule 32
	")"            reduce using rule 32
	"}"            reduce using rule 32
	"=="           reduce using rule 32
	"!="           reduce using rule 32
	">"            reduce using rule 32
	"<"            reduce using rule 32
	">="           reduce using rule 32
	"<="           reduce using rule 32
	"||"           reduce using rule 32
	"&&"           reduce using rule 32
	id             reduce using rule 32


State 39

	unary_expr -> primary .                             (rule 34)

	"+"            reduce using rule 34
	"-"            reduce using rule 34
	"*"            reduce using rule 34
	"/"            reduce using rule 34
	"%"            reduce using rule 34
	"print"        reduce using rule 34
	"readln"       reduce using rule 34
	"val"          reduce using rule 34
	"var"          reduce using rule 34
	"while"        reduce using rule 34
	"if"           reduce using rule 34
	")"            reduce using rule 34
	"}"            reduce using rule 34
	"=="           reduce using rule 34
	"!="           reduce using rule 34
	">"            reduce using rule 34
	"<"            reduce using rule 34
	">="           reduce using rule 34
	"<="           reduce using rule 34
	"||"           reduce using rule 34
	"&&"           reduce using rule 34
	id             reduce using rule 34


State 40

	primary -> num .                                    (rule 35)

	"+"            reduce using rule 35
	"-"            reduce using rule 35
	"*"            reduce using rule 35
	"/"            reduce using rule 35
	"%"            reduce using rule 35
	"print"        reduce using rule 35
	"readln"       reduce using rule 35
	"val"          reduce using rule 35
	"var"          reduce using rule 35
	"while"        reduce using rule 35
	"if"           reduce using rule 35
	")"            reduce using rule 35
	"}"            reduce using rule 35
	"=="           reduce using rule 35
	"!="           reduce using rule 35
	">"            reduce using rule 35
	"<"            reduce using rule 35
	">="           reduce using rule 35
	"<="           reduce using rule 35
	"||"           reduce using rule 35
	"&&"           reduce using rule 35
	id             reduce using rule 35


State 41

	primary -> "true" .                                 (rule 37)

	"+"            reduce using rule 37
	"-"            reduce using rule 37
	"*"            reduce using rule 37
	"/"            reduce using rule 37
	"%"            reduce using rule 37
	"print"        reduce using rule 37
	"readln"       reduce using rule 37
	"val"          reduce using rule 37
	"var"          reduce using rule 37
	"while"        reduce using rule 37
	"if"           reduce using rule 37
	")"            reduce using rule 37
	"}"            reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	">"            reduce using rule 37
	"<"            reduce using rule 37
	">="           reduce using rule 37
	"<="           reduce using rule 37
	"||"           reduce using rule 37
	"&&"           reduce using rule 37
	id             reduce using rule 37


State 42

	primary -> "false" .                                (rule 38)

	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"*"            reduce using rule 38
	"/"            reduce using rule 38
	"%"            reduce using rule 38
	"print"        reduce using rule 38
	"readln"       reduce using rule 38
	"val"          reduce using rule 38
	"var"          reduce using rule 38
	"while"        reduce using rule 38
	"if"           reduce using rule 38
	")"            reduce using rule 38
	"}"            reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	">"            reduce using rule 38
	"<"            reduce using rule 38
	">="           reduce using rule 38
	"<="           reduce using rule 38
	"||"           reduce using rule 38
	"&&"           reduce using rule 38
	id             reduce using rule 38


State 43

	primary -> "(" . expr ")"                           (rule 39)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	expr           goto state 57
	or_expr        goto state 32
	and_expr       goto state 33
	eq_expr        goto state 34
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 44

	unary_expr -> "!" . unary_expr                      (rule 33)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	unary_expr     goto state 56
	primary        goto state 39

State 45

	primary -> id .                                     (rule 36)

	"+"            reduce using rule 36
	"-"            reduce using rule 36
	"*"            reduce using rule 36
	"/"            reduce using rule 36
	"%"            reduce using rule 36
	"print"        reduce using rule 36
	"readln"       reduce using rule 36
	"val"          reduce using rule 36
	"var"          reduce using rule 36
	"while"        reduce using rule 36
	"if"           reduce using rule 36
	")"            reduce using rule 36
	"}"            reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	">"            reduce using rule 36
	"<"            reduce using rule 36
	">="           reduce using rule 36
	"<="           reduce using rule 36
	"||"           reduce using rule 36
	"&&"           reduce using rule 36
	id             reduce using rule 36


State 46

	stmt -> "readln" "(" ")" .                          (rule 10)

	"print"        reduce using rule 10
	"readln"       reduce using rule 10
	"val"          reduce using rule 10
	"var"          reduce using rule 10
	"while"        reduce using rule 10
	"if"           reduce using rule 10
	"}"            reduce using rule 10
	id             reduce using rule 10


State 47

	decl_stmt -> "val" id "=" . expr                    (rule 41)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	expr           goto state 55
	or_expr        goto state 32
	and_expr       goto state 33
	eq_expr        goto state 34
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 48

	decl_stmt -> "var" id "=" . expr                    (rule 40)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	expr           goto state 54
	or_expr        goto state 32
	and_expr       goto state 33
	eq_expr        goto state 34
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 49

	while_stmt -> "while" "(" expr . ")" block          (rule 44)

	")"            shift, and enter state 53


State 50

	if_stmt -> "if" "(" expr . ")" block                (rule 42)
	if_stmt -> "if" "(" expr . ")" block "else" block    (rule 43)

	")"            shift, and enter state 52


State 51

	assign_stmt -> id "=" expr .                        (rule 13)

	"print"        reduce using rule 13
	"readln"       reduce using rule 13
	"val"          reduce using rule 13
	"var"          reduce using rule 13
	"while"        reduce using rule 13
	"if"           reduce using rule 13
	"}"            reduce using rule 13
	id             reduce using rule 13


State 52

	if_stmt -> "if" "(" expr ")" . block                (rule 42)
	if_stmt -> "if" "(" expr ")" . block "else" block    (rule 43)

	"{"            shift, and enter state 8

	block          goto state 87

State 53

	while_stmt -> "while" "(" expr ")" . block          (rule 44)

	"{"            shift, and enter state 8

	block          goto state 86

State 54

	decl_stmt -> "var" id "=" expr .                    (rule 40)

	"print"        reduce using rule 40
	"readln"       reduce using rule 40
	"val"          reduce using rule 40
	"var"          reduce using rule 40
	"while"        reduce using rule 40
	"if"           reduce using rule 40
	"}"            reduce using rule 40
	id             reduce using rule 40


State 55

	decl_stmt -> "val" id "=" expr .                    (rule 41)

	"print"        reduce using rule 41
	"readln"       reduce using rule 41
	"val"          reduce using rule 41
	"var"          reduce using rule 41
	"while"        reduce using rule 41
	"if"           reduce using rule 41
	"}"            reduce using rule 41
	id             reduce using rule 41


State 56

	unary_expr -> "!" unary_expr .                      (rule 33)

	"+"            reduce using rule 33
	"-"            reduce using rule 33
	"*"            reduce using rule 33
	"/"            reduce using rule 33
	"%"            reduce using rule 33
	"print"        reduce using rule 33
	"readln"       reduce using rule 33
	"val"          reduce using rule 33
	"var"          reduce using rule 33
	"while"        reduce using rule 33
	"if"           reduce using rule 33
	")"            reduce using rule 33
	"}"            reduce using rule 33
	"=="           reduce using rule 33
	"!="           reduce using rule 33
	">"            reduce using rule 33
	"<"            reduce using rule 33
	">="           reduce using rule 33
	"<="           reduce using rule 33
	"||"           reduce using rule 33
	"&&"           reduce using rule 33
	id             reduce using rule 33


State 57

	primary -> "(" expr . ")"                           (rule 39)

	")"            shift, and enter state 85


State 58

	mul_expr -> mul_expr "*" . unary_expr               (rule 29)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	unary_expr     goto state 84
	primary        goto state 39

State 59

	mul_expr -> mul_expr "/" . unary_expr               (rule 30)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	unary_expr     goto state 83
	primary        goto state 39

State 60

	mul_expr -> mul_expr "%" . unary_expr               (rule 31)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	unary_expr     goto state 82
	primary        goto state 39

State 61

	add_expr -> add_expr "+" . mul_expr                 (rule 26)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	mul_expr       goto state 81
	unary_expr     goto state 38
	primary        goto state 39

State 62

	add_expr -> add_expr "-" . mul_expr                 (rule 27)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	mul_expr       goto state 80
	unary_expr     goto state 38
	primary        goto state 39

State 63

	rel_expr -> rel_expr ">" . add_expr                 (rule 23)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	add_expr       goto state 79
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 64

	rel_expr -> rel_expr "<" . add_expr                 (rule 21)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	add_expr       goto state 78
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 65

	rel_expr -> rel_expr ">=" . add_expr                (rule 24)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	add_expr       goto state 77
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 66

	rel_expr -> rel_expr "<=" . add_expr                (rule 22)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	add_expr       goto state 76
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 67

	eq_expr -> eq_expr "==" . rel_expr                  (rule 18)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	rel_expr       goto state 75
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 68

	eq_expr -> eq_expr "!=" . rel_expr                  (rule 19)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	rel_expr       goto state 74
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 69

	and_expr -> and_expr "&&" . eq_expr                 (rule 16)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	eq_expr        goto state 73
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 70

	or_expr -> or_expr "||" . and_expr                  (rule 14)

	num            shift, and enter state 40
	"true"         shift, and enter state 41
	"false"        shift, and enter state 42
	"("            shift, and enter state 43
	"!"            shift, and enter state 44
	id             shift, and enter state 45

	and_expr       goto state 72
	eq_expr        goto state 34
	rel_expr       goto state 35
	add_expr       goto state 36
	mul_expr       goto state 37
	unary_expr     goto state 38
	primary        goto state 39

State 71

	stmt -> "print" "(" expr ")" .                      (rule 9)

	"print"        reduce using rule 9
	"readln"       reduce using rule 9
	"val"          reduce using rule 9
	"var"          reduce using rule 9
	"while"        reduce using rule 9
	"if"           reduce using rule 9
	"}"            reduce using rule 9
	id             reduce using rule 9


State 72

	or_expr -> or_expr "||" and_expr .                  (rule 14)
	and_expr -> and_expr . "&&" eq_expr                 (rule 16)

	"print"        reduce using rule 14
	"readln"       reduce using rule 14
	"val"          reduce using rule 14
	"var"          reduce using rule 14
	"while"        reduce using rule 14
	"if"           reduce using rule 14
	")"            reduce using rule 14
	"}"            reduce using rule 14
	"||"           reduce using rule 14
	"&&"           shift, and enter state 69
	id             reduce using rule 14


State 73

	and_expr -> and_expr "&&" eq_expr .                 (rule 16)
	eq_expr -> eq_expr . "==" rel_expr                  (rule 18)
	eq_expr -> eq_expr . "!=" rel_expr                  (rule 19)

	"print"        reduce using rule 16
	"readln"       reduce using rule 16
	"val"          reduce using rule 16
	"var"          reduce using rule 16
	"while"        reduce using rule 16
	"if"           reduce using rule 16
	")"            reduce using rule 16
	"}"            reduce using rule 16
	"=="           shift, and enter state 67
	"!="           shift, and enter state 68
	"||"           reduce using rule 16
	"&&"           reduce using rule 16
	id             reduce using rule 16


State 74

	eq_expr -> eq_expr "!=" rel_expr .                  (rule 19)
	rel_expr -> rel_expr . "<" add_expr                 (rule 21)
	rel_expr -> rel_expr . "<=" add_expr                (rule 22)
	rel_expr -> rel_expr . ">" add_expr                 (rule 23)
	rel_expr -> rel_expr . ">=" add_expr                (rule 24)

	"print"        reduce using rule 19
	"readln"       reduce using rule 19
	"val"          reduce using rule 19
	"var"          reduce using rule 19
	"while"        reduce using rule 19
	"if"           reduce using rule 19
	")"            reduce using rule 19
	"}"            reduce using rule 19
	"=="           reduce using rule 19
	"!="           reduce using rule 19
	">"            shift, and enter state 63
	"<"            shift, and enter state 64
	">="           shift, and enter state 65
	"<="           shift, and enter state 66
	"||"           reduce using rule 19
	"&&"           reduce using rule 19
	id             reduce using rule 19


State 75

	eq_expr -> eq_expr "==" rel_expr .                  (rule 18)
	rel_expr -> rel_expr . "<" add_expr                 (rule 21)
	rel_expr -> rel_expr . "<=" add_expr                (rule 22)
	rel_expr -> rel_expr . ">" add_expr                 (rule 23)
	rel_expr -> rel_expr . ">=" add_expr                (rule 24)

	"print"        reduce using rule 18
	"readln"       reduce using rule 18
	"val"          reduce using rule 18
	"var"          reduce using rule 18
	"while"        reduce using rule 18
	"if"           reduce using rule 18
	")"            reduce using rule 18
	"}"            reduce using rule 18
	"=="           reduce using rule 18
	"!="           reduce using rule 18
	">"            shift, and enter state 63
	"<"            shift, and enter state 64
	">="           shift, and enter state 65
	"<="           shift, and enter state 66
	"||"           reduce using rule 18
	"&&"           reduce using rule 18
	id             reduce using rule 18


State 76

	rel_expr -> rel_expr "<=" add_expr .                (rule 22)
	add_expr -> add_expr . "+" mul_expr                 (rule 26)
	add_expr -> add_expr . "-" mul_expr                 (rule 27)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"print"        reduce using rule 22
	"readln"       reduce using rule 22
	"val"          reduce using rule 22
	"var"          reduce using rule 22
	"while"        reduce using rule 22
	"if"           reduce using rule 22
	")"            reduce using rule 22
	"}"            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	">"            reduce using rule 22
	"<"            reduce using rule 22
	">="           reduce using rule 22
	"<="           reduce using rule 22
	"||"           reduce using rule 22
	"&&"           reduce using rule 22
	id             reduce using rule 22


State 77

	rel_expr -> rel_expr ">=" add_expr .                (rule 24)
	add_expr -> add_expr . "+" mul_expr                 (rule 26)
	add_expr -> add_expr . "-" mul_expr                 (rule 27)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"print"        reduce using rule 24
	"readln"       reduce using rule 24
	"val"          reduce using rule 24
	"var"          reduce using rule 24
	"while"        reduce using rule 24
	"if"           reduce using rule 24
	")"            reduce using rule 24
	"}"            reduce using rule 24
	"=="           reduce using rule 24
	"!="           reduce using rule 24
	">"            reduce using rule 24
	"<"            reduce using rule 24
	">="           reduce using rule 24
	"<="           reduce using rule 24
	"||"           reduce using rule 24
	"&&"           reduce using rule 24
	id             reduce using rule 24


State 78

	rel_expr -> rel_expr "<" add_expr .                 (rule 21)
	add_expr -> add_expr . "+" mul_expr                 (rule 26)
	add_expr -> add_expr . "-" mul_expr                 (rule 27)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"print"        reduce using rule 21
	"readln"       reduce using rule 21
	"val"          reduce using rule 21
	"var"          reduce using rule 21
	"while"        reduce using rule 21
	"if"           reduce using rule 21
	")"            reduce using rule 21
	"}"            reduce using rule 21
	"=="           reduce using rule 21
	"!="           reduce using rule 21
	">"            reduce using rule 21
	"<"            reduce using rule 21
	">="           reduce using rule 21
	"<="           reduce using rule 21
	"||"           reduce using rule 21
	"&&"           reduce using rule 21
	id             reduce using rule 21


State 79

	rel_expr -> rel_expr ">" add_expr .                 (rule 23)
	add_expr -> add_expr . "+" mul_expr                 (rule 26)
	add_expr -> add_expr . "-" mul_expr                 (rule 27)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"print"        reduce using rule 23
	"readln"       reduce using rule 23
	"val"          reduce using rule 23
	"var"          reduce using rule 23
	"while"        reduce using rule 23
	"if"           reduce using rule 23
	")"            reduce using rule 23
	"}"            reduce using rule 23
	"=="           reduce using rule 23
	"!="           reduce using rule 23
	">"            reduce using rule 23
	"<"            reduce using rule 23
	">="           reduce using rule 23
	"<="           reduce using rule 23
	"||"           reduce using rule 23
	"&&"           reduce using rule 23
	id             reduce using rule 23


State 80

	add_expr -> add_expr "-" mul_expr .                 (rule 27)
	mul_expr -> mul_expr . "*" unary_expr               (rule 29)
	mul_expr -> mul_expr . "/" unary_expr               (rule 30)
	mul_expr -> mul_expr . "%" unary_expr               (rule 31)

	"+"            reduce using rule 27
	"-"            reduce using rule 27
	"*"            shift, and enter state 58
	"/"            shift, and enter state 59
	"%"            shift, and enter state 60
	"print"        reduce using rule 27
	"readln"       reduce using rule 27
	"val"          reduce using rule 27
	"var"          reduce using rule 27
	"while"        reduce using rule 27
	"if"           reduce using rule 27
	")"            reduce using rule 27
	"}"            reduce using rule 27
	"=="           reduce using rule 27
	"!="           reduce using rule 27
	">"            reduce using rule 27
	"<"            reduce using rule 27
	">="           reduce using rule 27
	"<="           reduce using rule 27
	"||"           reduce using rule 27
	"&&"           reduce using rule 27
	id             reduce using rule 27


State 81

	add_expr -> add_expr "+" mul_expr .                 (rule 26)
	mul_expr -> mul_expr . "*" unary_expr               (rule 29)
	mul_expr -> mul_expr . "/" unary_expr               (rule 30)
	mul_expr -> mul_expr . "%" unary_expr               (rule 31)

	"+"            reduce using rule 26
	"-"            reduce using rule 26
	"*"            shift, and enter state 58
	"/"            shift, and enter state 59
	"%"            shift, and enter state 60
	"print"        reduce using rule 26
	"readln"       reduce using rule 26
	"val"          reduce using rule 26
	"var"          reduce using rule 26
	"while"        reduce using rule 26
	"if"           reduce using rule 26
	")"            reduce using rule 26
	"}"            reduce using rule 26
	"=="           reduce using rule 26
	"!="           reduce using rule 26
	">"            reduce using rule 26
	"<"            reduce using rule 26
	">="           reduce using rule 26
	"<="           reduce using rule 26
	"||"           reduce using rule 26
	"&&"           reduce using rule 26
	id             reduce using rule 26


State 82

	mul_expr -> mul_expr "%" unary_expr .               (rule 31)

	"+"            reduce using rule 31
	"-"            reduce using rule 31
	"*"            reduce using rule 31
	"/"            reduce using rule 31
	"%"            reduce using rule 31
	"print"        reduce using rule 31
	"readln"       reduce using rule 31
	"val"          reduce using rule 31
	"var"          reduce using rule 31
	"while"        reduce using rule 31
	"if"           reduce using rule 31
	")"            reduce using rule 31
	"}"            reduce using rule 31
	"=="           reduce using rule 31
	"!="           reduce using rule 31
	">"            reduce using rule 31
	"<"            reduce using rule 31
	">="           reduce using rule 31
	"<="           reduce using rule 31
	"||"           reduce using rule 31
	"&&"           reduce using rule 31
	id             reduce using rule 31


State 83

	mul_expr -> mul_expr "/" unary_expr .               (rule 30)

	"+"            reduce using rule 30
	"-"            reduce using rule 30
	"*"            reduce using rule 30
	"/"            reduce using rule 30
	"%"            reduce using rule 30
	"print"        reduce using rule 30
	"readln"       reduce using rule 30
	"val"          reduce using rule 30
	"var"          reduce using rule 30
	"while"        reduce using rule 30
	"if"           reduce using rule 30
	")"            reduce using rule 30
	"}"            reduce using rule 30
	"=="           reduce using rule 30
	"!="           reduce using rule 30
	">"            reduce using rule 30
	"<"            reduce using rule 30
	">="           reduce using rule 30
	"<="           reduce using rule 30
	"||"           reduce using rule 30
	"&&"           reduce using rule 30
	id             reduce using rule 30


State 84

	mul_expr -> mul_expr "*" unary_expr .               (rule 29)

	"+"            reduce using rule 29
	"-"            reduce using rule 29
	"*"            reduce using rule 29
	"/"            reduce using rule 29
	"%"            reduce using rule 29
	"print"        reduce using rule 29
	"readln"       reduce using rule 29
	"val"          reduce using rule 29
	"var"          reduce using rule 29
	"while"        reduce using rule 29
	"if"           reduce using rule 29
	")"            reduce using rule 29
	"}"            reduce using rule 29
	"=="           reduce using rule 29
	"!="           reduce using rule 29
	">"            reduce using rule 29
	"<"            reduce using rule 29
	">="           reduce using rule 29
	"<="           reduce using rule 29
	"||"           reduce using rule 29
	"&&"           reduce using rule 29
	id             reduce using rule 29


State 85

	primary -> "(" expr ")" .                           (rule 39)

	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"*"            reduce using rule 39
	"/"            reduce using rule 39
	"%"            reduce using rule 39
	"print"        reduce using rule 39
	"readln"       reduce using rule 39
	"val"          reduce using rule 39
	"var"          reduce using rule 39
	"while"        reduce using rule 39
	"if"           reduce using rule 39
	")"            reduce using rule 39
	"}"            reduce using rule 39
	"=="           reduce using rule 39
	"!="           reduce using rule 39
	">"            reduce using rule 39
	"<"            reduce using rule 39
	">="           reduce using rule 39
	"<="           reduce using rule 39
	"||"           reduce using rule 39
	"&&"           reduce using rule 39
	id             reduce using rule 39


State 86

	while_stmt -> "while" "(" expr ")" block .          (rule 44)

	"print"        reduce using rule 44
	"readln"       reduce using rule 44
	"val"          reduce using rule 44
	"var"          reduce using rule 44
	"while"        reduce using rule 44
	"if"           reduce using rule 44
	"}"            reduce using rule 44
	id             reduce using rule 44


State 87

	if_stmt -> "if" "(" expr ")" block .                (rule 42)
	if_stmt -> "if" "(" expr ")" block . "else" block    (rule 43)

	"print"        reduce using rule 42
	"readln"       reduce using rule 42
	"val"          reduce using rule 42
	"var"          reduce using rule 42
	"while"        reduce using rule 42
	"if"           reduce using rule 42
	"else"         shift, and enter state 88
	"}"            reduce using rule 42
	id             reduce using rule 42


State 88

	if_stmt -> "if" "(" expr ")" block "else" . block    (rule 43)

	"{"            shift, and enter state 8

	block          goto state 89

State 89

	if_stmt -> "if" "(" expr ")" block "else" block .    (rule 43)

	"print"        reduce using rule 43
	"readln"       reduce using rule 43
	"val"          reduce using rule 43
	"var"          reduce using rule 43
	"while"        reduce using rule 43
	"if"           reduce using rule 43
	"}"            reduce using rule 43
	id             reduce using rule 43


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 45
Number of terminals: 35
Number of non-terminals: 19
Number of states: 90
