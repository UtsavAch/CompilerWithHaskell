-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------

state 108 contains 1 shift/reduce conflicts.
state 109 contains 1 shift/reduce conflicts.
state 110 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	program -> "fun" "main" "(" ")" block              (1)
	block -> "{" stmt_list "}"                         (2)
	stmt_list -> stmt stmt_list                        (3)
	stmt_list ->                                       (4)
	stmt -> decl_stmt                                  (5)
	stmt -> assign_stmt                                (6)
	stmt -> if_stmt                                    (7)
	stmt -> if_expr_stmt                               (8)
	stmt -> while_stmt                                 (9)
	stmt -> "print" "(" expr ")"                       (10)
	stmt -> "println" "(" expr ")"                     (11)
	stmt -> expr_stmt                                  (12)
	expr_stmt -> expr                                  (13)
	if_expr_stmt -> if_expr                            (14)
	expr -> or_expr                                    (15)
	expr -> "readln" "(" ")"                           (16)
	if_expr -> "if" "(" expr ")" expr "else" expr      (17)
	assign_stmt -> id "=" expr                         (18)
	assign_stmt -> id "+=" expr                        (19)
	assign_stmt -> id "-=" expr                        (20)
	assign_stmt -> id "*=" expr                        (21)
	assign_stmt -> id "/=" expr                        (22)
	assign_stmt -> id "%=" expr                        (23)
	assign_stmt -> expr "++"                           (24)
	assign_stmt -> expr "--"                           (25)
	or_expr -> or_expr "||" and_expr                   (26)
	or_expr -> and_expr                                (27)
	and_expr -> and_expr "&&" eq_expr                  (28)
	and_expr -> eq_expr                                (29)
	eq_expr -> eq_expr "==" rel_expr                   (30)
	eq_expr -> eq_expr "!=" rel_expr                   (31)
	eq_expr -> rel_expr                                (32)
	rel_expr -> rel_expr "<" add_expr                  (33)
	rel_expr -> rel_expr "<=" add_expr                 (34)
	rel_expr -> rel_expr ">" add_expr                  (35)
	rel_expr -> rel_expr ">=" add_expr                 (36)
	rel_expr -> add_expr                               (37)
	add_expr -> add_expr "+" mul_expr                  (38)
	add_expr -> add_expr "-" mul_expr                  (39)
	add_expr -> mul_expr                               (40)
	mul_expr -> mul_expr "*" unary_expr                (41)
	mul_expr -> mul_expr "/" unary_expr                (42)
	mul_expr -> mul_expr "%" unary_expr                (43)
	mul_expr -> unary_expr                             (44)
	unary_expr -> "!" unary_expr                       (45)
	unary_expr -> primary                              (46)
	primary -> num                                     (47)
	primary -> id                                      (48)
	primary -> "true"                                  (49)
	primary -> "false"                                 (50)
	primary -> "(" expr ")"                            (51)
	primary -> string                                  (52)
	decl_stmt -> "var" id "=" expr                     (53)
	decl_stmt -> "val" id "=" expr                     (54)
	if_stmt -> "if" "(" expr ")" stmt "else" stmt      (55)
	if_stmt -> "if" "(" expr ")" stmt                  (56)
	if_stmt -> "if" "(" expr ")" block "else" block    (57)
	if_stmt -> "if" "(" expr ")" block                 (58)
	while_stmt -> "while" "(" expr ")" block           (59)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	num            { TNum $$ }
	"fun"          { TFun }
	"main"         { TMain }
	"+"            { TPlus }
	"-"            { TMinus }
	"*"            { TMult }
	"/"            { TDiv }
	"%"            { TMod }
	"++"           { TIncr }
	"--"           { TDecr }
	"true"         { TTrue }
	"false"        { TFalse }
	"print"        { TPrint }
	"println"      { TPrintln }
	"readln"       { TReadln }
	"val"          { TVal }
	"var"          { TVar }
	"="            { TAssign }
	"+="           { TPlusAssign }
	"-="           { TMinusAssign }
	"*="           { TMultAssign }
	"/="           { TDivAssign }
	"%="           { TModAssign }
	"while"        { TWhile }
	"if"           { TIf }
	"else"         { TElse }
	"("            { TLParen }
	")"            { TRParen }
	"{"            { TLBraces }
	"}"            { TRBraces }
	"=="           { TEqual }
	"!="           { TDifferent }
	">"            { TGreater }
	"<"            { TLess }
	">="           { TGreaterEq }
	"<="           { TLessEq }
	"!"            { TNot }
	"||"           { TOr }
	"&&"           { TAnd }
	string         { TString $$ }
	id             { TId $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	program         rule  1
	block           rule  2
	stmt_list       rules 3, 4
	stmt            rules 5, 6, 7, 8, 9, 10, 11, 12
	expr_stmt       rule  13
	if_expr_stmt    rule  14
	expr            rules 15, 16
	if_expr         rule  17
	assign_stmt     rules 18, 19, 20, 21, 22, 23, 24, 25
	or_expr         rules 26, 27
	and_expr        rules 28, 29
	eq_expr         rules 30, 31, 32
	rel_expr        rules 33, 34, 35, 36, 37
	add_expr        rules 38, 39, 40
	mul_expr        rules 41, 42, 43, 44
	unary_expr      rules 45, 46
	primary         rules 47, 48, 49, 50, 51, 52
	decl_stmt       rules 53, 54
	if_stmt         rules 55, 56, 57, 58
	while_stmt      rule  59

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . program                          (rule 0)

	"fun"          shift, and enter state 2

	program        goto state 3

State 1

	program -> . "fun" "main" "(" ")" block             (rule 1)

	"fun"          shift, and enter state 2


State 2

	program -> "fun" . "main" "(" ")" block             (rule 1)

	"main"         shift, and enter state 4


State 3

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 4

	program -> "fun" "main" . "(" ")" block             (rule 1)

	"("            shift, and enter state 5


State 5

	program -> "fun" "main" "(" . ")" block             (rule 1)

	")"            shift, and enter state 6


State 6

	program -> "fun" "main" "(" ")" . block             (rule 1)

	"{"            shift, and enter state 8

	block          goto state 7

State 7

	program -> "fun" "main" "(" ")" block .             (rule 1)

	%eof           reduce using rule 1


State 8

	block -> "{" . stmt_list "}"                        (rule 2)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"print"        shift, and enter state 30
	"println"      shift, and enter state 31
	"readln"       shift, and enter state 32
	"val"          shift, and enter state 33
	"var"          shift, and enter state 34
	"while"        shift, and enter state 35
	"if"           shift, and enter state 36
	"("            shift, and enter state 37
	"}"            reduce using rule 4
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 40

	stmt_list      goto state 9
	stmt           goto state 10
	expr_stmt      goto state 11
	if_expr_stmt   goto state 12
	expr           goto state 13
	if_expr        goto state 14
	assign_stmt    goto state 15
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23
	decl_stmt      goto state 24
	if_stmt        goto state 25
	while_stmt     goto state 26

State 9

	block -> "{" stmt_list . "}"                        (rule 2)

	"}"            shift, and enter state 73


State 10

	stmt_list -> stmt . stmt_list                       (rule 3)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"print"        shift, and enter state 30
	"println"      shift, and enter state 31
	"readln"       shift, and enter state 32
	"val"          shift, and enter state 33
	"var"          shift, and enter state 34
	"while"        shift, and enter state 35
	"if"           shift, and enter state 36
	"("            shift, and enter state 37
	"}"            reduce using rule 4
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 40

	stmt_list      goto state 72
	stmt           goto state 10
	expr_stmt      goto state 11
	if_expr_stmt   goto state 12
	expr           goto state 13
	if_expr        goto state 14
	assign_stmt    goto state 15
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23
	decl_stmt      goto state 24
	if_stmt        goto state 25
	while_stmt     goto state 26

State 11

	stmt -> expr_stmt .                                 (rule 12)

	num            reduce using rule 12
	"true"         reduce using rule 12
	"false"        reduce using rule 12
	"print"        reduce using rule 12
	"println"      reduce using rule 12
	"readln"       reduce using rule 12
	"val"          reduce using rule 12
	"var"          reduce using rule 12
	"while"        reduce using rule 12
	"if"           reduce using rule 12
	"else"         reduce using rule 12
	"("            reduce using rule 12
	"}"            reduce using rule 12
	"!"            reduce using rule 12
	string         reduce using rule 12
	id             reduce using rule 12


State 12

	stmt -> if_expr_stmt .                              (rule 8)

	num            reduce using rule 8
	"true"         reduce using rule 8
	"false"        reduce using rule 8
	"print"        reduce using rule 8
	"println"      reduce using rule 8
	"readln"       reduce using rule 8
	"val"          reduce using rule 8
	"var"          reduce using rule 8
	"while"        reduce using rule 8
	"if"           reduce using rule 8
	"else"         reduce using rule 8
	"("            reduce using rule 8
	"}"            reduce using rule 8
	"!"            reduce using rule 8
	string         reduce using rule 8
	id             reduce using rule 8


State 13

	expr_stmt -> expr .                                 (rule 13)
	assign_stmt -> expr . "++"                          (rule 24)
	assign_stmt -> expr . "--"                          (rule 25)

	num            reduce using rule 13
	"++"           shift, and enter state 70
	"--"           shift, and enter state 71
	"true"         reduce using rule 13
	"false"        reduce using rule 13
	"print"        reduce using rule 13
	"println"      reduce using rule 13
	"readln"       reduce using rule 13
	"val"          reduce using rule 13
	"var"          reduce using rule 13
	"while"        reduce using rule 13
	"if"           reduce using rule 13
	"else"         reduce using rule 13
	"("            reduce using rule 13
	"}"            reduce using rule 13
	"!"            reduce using rule 13
	string         reduce using rule 13
	id             reduce using rule 13


State 14

	if_expr_stmt -> if_expr .                           (rule 14)

	num            reduce using rule 14
	"true"         reduce using rule 14
	"false"        reduce using rule 14
	"print"        reduce using rule 14
	"println"      reduce using rule 14
	"readln"       reduce using rule 14
	"val"          reduce using rule 14
	"var"          reduce using rule 14
	"while"        reduce using rule 14
	"if"           reduce using rule 14
	"else"         reduce using rule 14
	"("            reduce using rule 14
	"}"            reduce using rule 14
	"!"            reduce using rule 14
	string         reduce using rule 14
	id             reduce using rule 14


State 15

	stmt -> assign_stmt .                               (rule 6)

	num            reduce using rule 6
	"true"         reduce using rule 6
	"false"        reduce using rule 6
	"print"        reduce using rule 6
	"println"      reduce using rule 6
	"readln"       reduce using rule 6
	"val"          reduce using rule 6
	"var"          reduce using rule 6
	"while"        reduce using rule 6
	"if"           reduce using rule 6
	"else"         reduce using rule 6
	"("            reduce using rule 6
	"}"            reduce using rule 6
	"!"            reduce using rule 6
	string         reduce using rule 6
	id             reduce using rule 6


State 16

	expr -> or_expr .                                   (rule 15)
	or_expr -> or_expr . "||" and_expr                  (rule 26)

	num            reduce using rule 15
	"++"           reduce using rule 15
	"--"           reduce using rule 15
	"true"         reduce using rule 15
	"false"        reduce using rule 15
	"print"        reduce using rule 15
	"println"      reduce using rule 15
	"readln"       reduce using rule 15
	"val"          reduce using rule 15
	"var"          reduce using rule 15
	"while"        reduce using rule 15
	"if"           reduce using rule 15
	"else"         reduce using rule 15
	"("            reduce using rule 15
	")"            reduce using rule 15
	"}"            reduce using rule 15
	"!"            reduce using rule 15
	"||"           shift, and enter state 69
	string         reduce using rule 15
	id             reduce using rule 15


State 17

	or_expr -> and_expr .                               (rule 27)
	and_expr -> and_expr . "&&" eq_expr                 (rule 28)

	num            reduce using rule 27
	"++"           reduce using rule 27
	"--"           reduce using rule 27
	"true"         reduce using rule 27
	"false"        reduce using rule 27
	"print"        reduce using rule 27
	"println"      reduce using rule 27
	"readln"       reduce using rule 27
	"val"          reduce using rule 27
	"var"          reduce using rule 27
	"while"        reduce using rule 27
	"if"           reduce using rule 27
	"else"         reduce using rule 27
	"("            reduce using rule 27
	")"            reduce using rule 27
	"}"            reduce using rule 27
	"!"            reduce using rule 27
	"||"           reduce using rule 27
	"&&"           shift, and enter state 68
	string         reduce using rule 27
	id             reduce using rule 27


State 18

	and_expr -> eq_expr .                               (rule 29)
	eq_expr -> eq_expr . "==" rel_expr                  (rule 30)
	eq_expr -> eq_expr . "!=" rel_expr                  (rule 31)

	num            reduce using rule 29
	"++"           reduce using rule 29
	"--"           reduce using rule 29
	"true"         reduce using rule 29
	"false"        reduce using rule 29
	"print"        reduce using rule 29
	"println"      reduce using rule 29
	"readln"       reduce using rule 29
	"val"          reduce using rule 29
	"var"          reduce using rule 29
	"while"        reduce using rule 29
	"if"           reduce using rule 29
	"else"         reduce using rule 29
	"("            reduce using rule 29
	")"            reduce using rule 29
	"}"            reduce using rule 29
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	"!"            reduce using rule 29
	"||"           reduce using rule 29
	"&&"           reduce using rule 29
	string         reduce using rule 29
	id             reduce using rule 29


State 19

	eq_expr -> rel_expr .                               (rule 32)
	rel_expr -> rel_expr . "<" add_expr                 (rule 33)
	rel_expr -> rel_expr . "<=" add_expr                (rule 34)
	rel_expr -> rel_expr . ">" add_expr                 (rule 35)
	rel_expr -> rel_expr . ">=" add_expr                (rule 36)

	num            reduce using rule 32
	"++"           reduce using rule 32
	"--"           reduce using rule 32
	"true"         reduce using rule 32
	"false"        reduce using rule 32
	"print"        reduce using rule 32
	"println"      reduce using rule 32
	"readln"       reduce using rule 32
	"val"          reduce using rule 32
	"var"          reduce using rule 32
	"while"        reduce using rule 32
	"if"           reduce using rule 32
	"else"         reduce using rule 32
	"("            reduce using rule 32
	")"            reduce using rule 32
	"}"            reduce using rule 32
	"=="           reduce using rule 32
	"!="           reduce using rule 32
	">"            shift, and enter state 62
	"<"            shift, and enter state 63
	">="           shift, and enter state 64
	"<="           shift, and enter state 65
	"!"            reduce using rule 32
	"||"           reduce using rule 32
	"&&"           reduce using rule 32
	string         reduce using rule 32
	id             reduce using rule 32


State 20

	rel_expr -> add_expr .                              (rule 37)
	add_expr -> add_expr . "+" mul_expr                 (rule 38)
	add_expr -> add_expr . "-" mul_expr                 (rule 39)

	num            reduce using rule 37
	"+"            shift, and enter state 60
	"-"            shift, and enter state 61
	"++"           reduce using rule 37
	"--"           reduce using rule 37
	"true"         reduce using rule 37
	"false"        reduce using rule 37
	"print"        reduce using rule 37
	"println"      reduce using rule 37
	"readln"       reduce using rule 37
	"val"          reduce using rule 37
	"var"          reduce using rule 37
	"while"        reduce using rule 37
	"if"           reduce using rule 37
	"else"         reduce using rule 37
	"("            reduce using rule 37
	")"            reduce using rule 37
	"}"            reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	">"            reduce using rule 37
	"<"            reduce using rule 37
	">="           reduce using rule 37
	"<="           reduce using rule 37
	"!"            reduce using rule 37
	"||"           reduce using rule 37
	"&&"           reduce using rule 37
	string         reduce using rule 37
	id             reduce using rule 37


State 21

	add_expr -> mul_expr .                              (rule 40)
	mul_expr -> mul_expr . "*" unary_expr               (rule 41)
	mul_expr -> mul_expr . "/" unary_expr               (rule 42)
	mul_expr -> mul_expr . "%" unary_expr               (rule 43)

	num            reduce using rule 40
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"*"            shift, and enter state 57
	"/"            shift, and enter state 58
	"%"            shift, and enter state 59
	"++"           reduce using rule 40
	"--"           reduce using rule 40
	"true"         reduce using rule 40
	"false"        reduce using rule 40
	"print"        reduce using rule 40
	"println"      reduce using rule 40
	"readln"       reduce using rule 40
	"val"          reduce using rule 40
	"var"          reduce using rule 40
	"while"        reduce using rule 40
	"if"           reduce using rule 40
	"else"         reduce using rule 40
	"("            reduce using rule 40
	")"            reduce using rule 40
	"}"            reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	">"            reduce using rule 40
	"<"            reduce using rule 40
	">="           reduce using rule 40
	"<="           reduce using rule 40
	"!"            reduce using rule 40
	"||"           reduce using rule 40
	"&&"           reduce using rule 40
	string         reduce using rule 40
	id             reduce using rule 40


State 22

	mul_expr -> unary_expr .                            (rule 44)

	num            reduce using rule 44
	"+"            reduce using rule 44
	"-"            reduce using rule 44
	"*"            reduce using rule 44
	"/"            reduce using rule 44
	"%"            reduce using rule 44
	"++"           reduce using rule 44
	"--"           reduce using rule 44
	"true"         reduce using rule 44
	"false"        reduce using rule 44
	"print"        reduce using rule 44
	"println"      reduce using rule 44
	"readln"       reduce using rule 44
	"val"          reduce using rule 44
	"var"          reduce using rule 44
	"while"        reduce using rule 44
	"if"           reduce using rule 44
	"else"         reduce using rule 44
	"("            reduce using rule 44
	")"            reduce using rule 44
	"}"            reduce using rule 44
	"=="           reduce using rule 44
	"!="           reduce using rule 44
	">"            reduce using rule 44
	"<"            reduce using rule 44
	">="           reduce using rule 44
	"<="           reduce using rule 44
	"!"            reduce using rule 44
	"||"           reduce using rule 44
	"&&"           reduce using rule 44
	string         reduce using rule 44
	id             reduce using rule 44


State 23

	unary_expr -> primary .                             (rule 46)

	num            reduce using rule 46
	"+"            reduce using rule 46
	"-"            reduce using rule 46
	"*"            reduce using rule 46
	"/"            reduce using rule 46
	"%"            reduce using rule 46
	"++"           reduce using rule 46
	"--"           reduce using rule 46
	"true"         reduce using rule 46
	"false"        reduce using rule 46
	"print"        reduce using rule 46
	"println"      reduce using rule 46
	"readln"       reduce using rule 46
	"val"          reduce using rule 46
	"var"          reduce using rule 46
	"while"        reduce using rule 46
	"if"           reduce using rule 46
	"else"         reduce using rule 46
	"("            reduce using rule 46
	")"            reduce using rule 46
	"}"            reduce using rule 46
	"=="           reduce using rule 46
	"!="           reduce using rule 46
	">"            reduce using rule 46
	"<"            reduce using rule 46
	">="           reduce using rule 46
	"<="           reduce using rule 46
	"!"            reduce using rule 46
	"||"           reduce using rule 46
	"&&"           reduce using rule 46
	string         reduce using rule 46
	id             reduce using rule 46


State 24

	stmt -> decl_stmt .                                 (rule 5)

	num            reduce using rule 5
	"true"         reduce using rule 5
	"false"        reduce using rule 5
	"print"        reduce using rule 5
	"println"      reduce using rule 5
	"readln"       reduce using rule 5
	"val"          reduce using rule 5
	"var"          reduce using rule 5
	"while"        reduce using rule 5
	"if"           reduce using rule 5
	"else"         reduce using rule 5
	"("            reduce using rule 5
	"}"            reduce using rule 5
	"!"            reduce using rule 5
	string         reduce using rule 5
	id             reduce using rule 5


State 25

	stmt -> if_stmt .                                   (rule 7)

	num            reduce using rule 7
	"true"         reduce using rule 7
	"false"        reduce using rule 7
	"print"        reduce using rule 7
	"println"      reduce using rule 7
	"readln"       reduce using rule 7
	"val"          reduce using rule 7
	"var"          reduce using rule 7
	"while"        reduce using rule 7
	"if"           reduce using rule 7
	"else"         reduce using rule 7
	"("            reduce using rule 7
	"}"            reduce using rule 7
	"!"            reduce using rule 7
	string         reduce using rule 7
	id             reduce using rule 7


State 26

	stmt -> while_stmt .                                (rule 9)

	num            reduce using rule 9
	"true"         reduce using rule 9
	"false"        reduce using rule 9
	"print"        reduce using rule 9
	"println"      reduce using rule 9
	"readln"       reduce using rule 9
	"val"          reduce using rule 9
	"var"          reduce using rule 9
	"while"        reduce using rule 9
	"if"           reduce using rule 9
	"else"         reduce using rule 9
	"("            reduce using rule 9
	"}"            reduce using rule 9
	"!"            reduce using rule 9
	string         reduce using rule 9
	id             reduce using rule 9


State 27

	primary -> num .                                    (rule 47)

	num            reduce using rule 47
	"+"            reduce using rule 47
	"-"            reduce using rule 47
	"*"            reduce using rule 47
	"/"            reduce using rule 47
	"%"            reduce using rule 47
	"++"           reduce using rule 47
	"--"           reduce using rule 47
	"true"         reduce using rule 47
	"false"        reduce using rule 47
	"print"        reduce using rule 47
	"println"      reduce using rule 47
	"readln"       reduce using rule 47
	"val"          reduce using rule 47
	"var"          reduce using rule 47
	"while"        reduce using rule 47
	"if"           reduce using rule 47
	"else"         reduce using rule 47
	"("            reduce using rule 47
	")"            reduce using rule 47
	"}"            reduce using rule 47
	"=="           reduce using rule 47
	"!="           reduce using rule 47
	">"            reduce using rule 47
	"<"            reduce using rule 47
	">="           reduce using rule 47
	"<="           reduce using rule 47
	"!"            reduce using rule 47
	"||"           reduce using rule 47
	"&&"           reduce using rule 47
	string         reduce using rule 47
	id             reduce using rule 47


State 28

	primary -> "true" .                                 (rule 49)

	num            reduce using rule 49
	"+"            reduce using rule 49
	"-"            reduce using rule 49
	"*"            reduce using rule 49
	"/"            reduce using rule 49
	"%"            reduce using rule 49
	"++"           reduce using rule 49
	"--"           reduce using rule 49
	"true"         reduce using rule 49
	"false"        reduce using rule 49
	"print"        reduce using rule 49
	"println"      reduce using rule 49
	"readln"       reduce using rule 49
	"val"          reduce using rule 49
	"var"          reduce using rule 49
	"while"        reduce using rule 49
	"if"           reduce using rule 49
	"else"         reduce using rule 49
	"("            reduce using rule 49
	")"            reduce using rule 49
	"}"            reduce using rule 49
	"=="           reduce using rule 49
	"!="           reduce using rule 49
	">"            reduce using rule 49
	"<"            reduce using rule 49
	">="           reduce using rule 49
	"<="           reduce using rule 49
	"!"            reduce using rule 49
	"||"           reduce using rule 49
	"&&"           reduce using rule 49
	string         reduce using rule 49
	id             reduce using rule 49


State 29

	primary -> "false" .                                (rule 50)

	num            reduce using rule 50
	"+"            reduce using rule 50
	"-"            reduce using rule 50
	"*"            reduce using rule 50
	"/"            reduce using rule 50
	"%"            reduce using rule 50
	"++"           reduce using rule 50
	"--"           reduce using rule 50
	"true"         reduce using rule 50
	"false"        reduce using rule 50
	"print"        reduce using rule 50
	"println"      reduce using rule 50
	"readln"       reduce using rule 50
	"val"          reduce using rule 50
	"var"          reduce using rule 50
	"while"        reduce using rule 50
	"if"           reduce using rule 50
	"else"         reduce using rule 50
	"("            reduce using rule 50
	")"            reduce using rule 50
	"}"            reduce using rule 50
	"=="           reduce using rule 50
	"!="           reduce using rule 50
	">"            reduce using rule 50
	"<"            reduce using rule 50
	">="           reduce using rule 50
	"<="           reduce using rule 50
	"!"            reduce using rule 50
	"||"           reduce using rule 50
	"&&"           reduce using rule 50
	string         reduce using rule 50
	id             reduce using rule 50


State 30

	stmt -> "print" . "(" expr ")"                      (rule 10)

	"("            shift, and enter state 56


State 31

	stmt -> "println" . "(" expr ")"                    (rule 11)

	"("            shift, and enter state 55


State 32

	expr -> "readln" . "(" ")"                          (rule 16)

	"("            shift, and enter state 54


State 33

	decl_stmt -> "val" . id "=" expr                    (rule 54)

	id             shift, and enter state 53


State 34

	decl_stmt -> "var" . id "=" expr                    (rule 53)

	id             shift, and enter state 52


State 35

	while_stmt -> "while" . "(" expr ")" block          (rule 59)

	"("            shift, and enter state 51


State 36

	if_expr -> "if" . "(" expr ")" expr "else" expr     (rule 17)
	if_stmt -> "if" . "(" expr ")" stmt "else" stmt     (rule 55)
	if_stmt -> "if" . "(" expr ")" stmt                 (rule 56)
	if_stmt -> "if" . "(" expr ")" block "else" block    (rule 57)
	if_stmt -> "if" . "(" expr ")" block                (rule 58)

	"("            shift, and enter state 50


State 37

	primary -> "(" . expr ")"                           (rule 51)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 49
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 38

	unary_expr -> "!" . unary_expr                      (rule 45)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	unary_expr     goto state 47
	primary        goto state 23

State 39

	primary -> string .                                 (rule 52)

	num            reduce using rule 52
	"+"            reduce using rule 52
	"-"            reduce using rule 52
	"*"            reduce using rule 52
	"/"            reduce using rule 52
	"%"            reduce using rule 52
	"++"           reduce using rule 52
	"--"           reduce using rule 52
	"true"         reduce using rule 52
	"false"        reduce using rule 52
	"print"        reduce using rule 52
	"println"      reduce using rule 52
	"readln"       reduce using rule 52
	"val"          reduce using rule 52
	"var"          reduce using rule 52
	"while"        reduce using rule 52
	"if"           reduce using rule 52
	"else"         reduce using rule 52
	"("            reduce using rule 52
	")"            reduce using rule 52
	"}"            reduce using rule 52
	"=="           reduce using rule 52
	"!="           reduce using rule 52
	">"            reduce using rule 52
	"<"            reduce using rule 52
	">="           reduce using rule 52
	"<="           reduce using rule 52
	"!"            reduce using rule 52
	"||"           reduce using rule 52
	"&&"           reduce using rule 52
	string         reduce using rule 52
	id             reduce using rule 52


State 40

	assign_stmt -> id . "=" expr                        (rule 18)
	assign_stmt -> id . "+=" expr                       (rule 19)
	assign_stmt -> id . "-=" expr                       (rule 20)
	assign_stmt -> id . "*=" expr                       (rule 21)
	assign_stmt -> id . "/=" expr                       (rule 22)
	assign_stmt -> id . "%=" expr                       (rule 23)
	primary -> id .                                     (rule 48)

	num            reduce using rule 48
	"+"            reduce using rule 48
	"-"            reduce using rule 48
	"*"            reduce using rule 48
	"/"            reduce using rule 48
	"%"            reduce using rule 48
	"++"           reduce using rule 48
	"--"           reduce using rule 48
	"true"         reduce using rule 48
	"false"        reduce using rule 48
	"print"        reduce using rule 48
	"println"      reduce using rule 48
	"readln"       reduce using rule 48
	"val"          reduce using rule 48
	"var"          reduce using rule 48
	"="            shift, and enter state 41
	"+="           shift, and enter state 42
	"-="           shift, and enter state 43
	"*="           shift, and enter state 44
	"/="           shift, and enter state 45
	"%="           shift, and enter state 46
	"while"        reduce using rule 48
	"if"           reduce using rule 48
	"else"         reduce using rule 48
	"("            reduce using rule 48
	"}"            reduce using rule 48
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	">"            reduce using rule 48
	"<"            reduce using rule 48
	">="           reduce using rule 48
	"<="           reduce using rule 48
	"!"            reduce using rule 48
	"||"           reduce using rule 48
	"&&"           reduce using rule 48
	string         reduce using rule 48
	id             reduce using rule 48


State 41

	assign_stmt -> id "=" . expr                        (rule 18)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 100
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 42

	assign_stmt -> id "+=" . expr                       (rule 19)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 99
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 43

	assign_stmt -> id "-=" . expr                       (rule 20)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 98
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 44

	assign_stmt -> id "*=" . expr                       (rule 21)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 97
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 45

	assign_stmt -> id "/=" . expr                       (rule 22)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 96
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 46

	assign_stmt -> id "%=" . expr                       (rule 23)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 95
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 47

	unary_expr -> "!" unary_expr .                      (rule 45)

	num            reduce using rule 45
	"+"            reduce using rule 45
	"-"            reduce using rule 45
	"*"            reduce using rule 45
	"/"            reduce using rule 45
	"%"            reduce using rule 45
	"++"           reduce using rule 45
	"--"           reduce using rule 45
	"true"         reduce using rule 45
	"false"        reduce using rule 45
	"print"        reduce using rule 45
	"println"      reduce using rule 45
	"readln"       reduce using rule 45
	"val"          reduce using rule 45
	"var"          reduce using rule 45
	"while"        reduce using rule 45
	"if"           reduce using rule 45
	"else"         reduce using rule 45
	"("            reduce using rule 45
	")"            reduce using rule 45
	"}"            reduce using rule 45
	"=="           reduce using rule 45
	"!="           reduce using rule 45
	">"            reduce using rule 45
	"<"            reduce using rule 45
	">="           reduce using rule 45
	"<="           reduce using rule 45
	"!"            reduce using rule 45
	"||"           reduce using rule 45
	"&&"           reduce using rule 45
	string         reduce using rule 45
	id             reduce using rule 45


State 48

	primary -> id .                                     (rule 48)

	num            reduce using rule 48
	"+"            reduce using rule 48
	"-"            reduce using rule 48
	"*"            reduce using rule 48
	"/"            reduce using rule 48
	"%"            reduce using rule 48
	"++"           reduce using rule 48
	"--"           reduce using rule 48
	"true"         reduce using rule 48
	"false"        reduce using rule 48
	"print"        reduce using rule 48
	"println"      reduce using rule 48
	"readln"       reduce using rule 48
	"val"          reduce using rule 48
	"var"          reduce using rule 48
	"while"        reduce using rule 48
	"if"           reduce using rule 48
	"else"         reduce using rule 48
	"("            reduce using rule 48
	")"            reduce using rule 48
	"}"            reduce using rule 48
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	">"            reduce using rule 48
	"<"            reduce using rule 48
	">="           reduce using rule 48
	"<="           reduce using rule 48
	"!"            reduce using rule 48
	"||"           reduce using rule 48
	"&&"           reduce using rule 48
	string         reduce using rule 48
	id             reduce using rule 48


State 49

	primary -> "(" expr . ")"                           (rule 51)

	")"            shift, and enter state 94


State 50

	if_expr -> "if" "(" . expr ")" expr "else" expr     (rule 17)
	if_stmt -> "if" "(" . expr ")" stmt "else" stmt     (rule 55)
	if_stmt -> "if" "(" . expr ")" stmt                 (rule 56)
	if_stmt -> "if" "(" . expr ")" block "else" block    (rule 57)
	if_stmt -> "if" "(" . expr ")" block                (rule 58)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 93
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 51

	while_stmt -> "while" "(" . expr ")" block          (rule 59)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 92
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 52

	decl_stmt -> "var" id . "=" expr                    (rule 53)

	"="            shift, and enter state 91


State 53

	decl_stmt -> "val" id . "=" expr                    (rule 54)

	"="            shift, and enter state 90


State 54

	expr -> "readln" "(" . ")"                          (rule 16)

	")"            shift, and enter state 89


State 55

	stmt -> "println" "(" . expr ")"                    (rule 11)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 88
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 56

	stmt -> "print" "(" . expr ")"                      (rule 10)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 87
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 57

	mul_expr -> mul_expr "*" . unary_expr               (rule 41)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	unary_expr     goto state 86
	primary        goto state 23

State 58

	mul_expr -> mul_expr "/" . unary_expr               (rule 42)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	unary_expr     goto state 85
	primary        goto state 23

State 59

	mul_expr -> mul_expr "%" . unary_expr               (rule 43)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	unary_expr     goto state 84
	primary        goto state 23

State 60

	add_expr -> add_expr "+" . mul_expr                 (rule 38)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	mul_expr       goto state 83
	unary_expr     goto state 22
	primary        goto state 23

State 61

	add_expr -> add_expr "-" . mul_expr                 (rule 39)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	mul_expr       goto state 82
	unary_expr     goto state 22
	primary        goto state 23

State 62

	rel_expr -> rel_expr ">" . add_expr                 (rule 35)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	add_expr       goto state 81
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 63

	rel_expr -> rel_expr "<" . add_expr                 (rule 33)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	add_expr       goto state 80
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 64

	rel_expr -> rel_expr ">=" . add_expr                (rule 36)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	add_expr       goto state 79
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 65

	rel_expr -> rel_expr "<=" . add_expr                (rule 34)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	add_expr       goto state 78
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 66

	eq_expr -> eq_expr "==" . rel_expr                  (rule 30)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	rel_expr       goto state 77
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 67

	eq_expr -> eq_expr "!=" . rel_expr                  (rule 31)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	rel_expr       goto state 76
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 68

	and_expr -> and_expr "&&" . eq_expr                 (rule 28)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	eq_expr        goto state 75
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 69

	or_expr -> or_expr "||" . and_expr                  (rule 26)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	and_expr       goto state 74
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 70

	assign_stmt -> expr "++" .                          (rule 24)

	num            reduce using rule 24
	"true"         reduce using rule 24
	"false"        reduce using rule 24
	"print"        reduce using rule 24
	"println"      reduce using rule 24
	"readln"       reduce using rule 24
	"val"          reduce using rule 24
	"var"          reduce using rule 24
	"while"        reduce using rule 24
	"if"           reduce using rule 24
	"else"         reduce using rule 24
	"("            reduce using rule 24
	"}"            reduce using rule 24
	"!"            reduce using rule 24
	string         reduce using rule 24
	id             reduce using rule 24


State 71

	assign_stmt -> expr "--" .                          (rule 25)

	num            reduce using rule 25
	"true"         reduce using rule 25
	"false"        reduce using rule 25
	"print"        reduce using rule 25
	"println"      reduce using rule 25
	"readln"       reduce using rule 25
	"val"          reduce using rule 25
	"var"          reduce using rule 25
	"while"        reduce using rule 25
	"if"           reduce using rule 25
	"else"         reduce using rule 25
	"("            reduce using rule 25
	"}"            reduce using rule 25
	"!"            reduce using rule 25
	string         reduce using rule 25
	id             reduce using rule 25


State 72

	stmt_list -> stmt stmt_list .                       (rule 3)

	"}"            reduce using rule 3


State 73

	block -> "{" stmt_list "}" .                        (rule 2)

	num            reduce using rule 2
	"true"         reduce using rule 2
	"false"        reduce using rule 2
	"print"        reduce using rule 2
	"println"      reduce using rule 2
	"readln"       reduce using rule 2
	"val"          reduce using rule 2
	"var"          reduce using rule 2
	"while"        reduce using rule 2
	"if"           reduce using rule 2
	"else"         reduce using rule 2
	"("            reduce using rule 2
	"}"            reduce using rule 2
	"!"            reduce using rule 2
	string         reduce using rule 2
	id             reduce using rule 2
	%eof           reduce using rule 2


State 74

	or_expr -> or_expr "||" and_expr .                  (rule 26)
	and_expr -> and_expr . "&&" eq_expr                 (rule 28)

	num            reduce using rule 26
	"++"           reduce using rule 26
	"--"           reduce using rule 26
	"true"         reduce using rule 26
	"false"        reduce using rule 26
	"print"        reduce using rule 26
	"println"      reduce using rule 26
	"readln"       reduce using rule 26
	"val"          reduce using rule 26
	"var"          reduce using rule 26
	"while"        reduce using rule 26
	"if"           reduce using rule 26
	"else"         reduce using rule 26
	"("            reduce using rule 26
	")"            reduce using rule 26
	"}"            reduce using rule 26
	"!"            reduce using rule 26
	"||"           reduce using rule 26
	"&&"           shift, and enter state 68
	string         reduce using rule 26
	id             reduce using rule 26


State 75

	and_expr -> and_expr "&&" eq_expr .                 (rule 28)
	eq_expr -> eq_expr . "==" rel_expr                  (rule 30)
	eq_expr -> eq_expr . "!=" rel_expr                  (rule 31)

	num            reduce using rule 28
	"++"           reduce using rule 28
	"--"           reduce using rule 28
	"true"         reduce using rule 28
	"false"        reduce using rule 28
	"print"        reduce using rule 28
	"println"      reduce using rule 28
	"readln"       reduce using rule 28
	"val"          reduce using rule 28
	"var"          reduce using rule 28
	"while"        reduce using rule 28
	"if"           reduce using rule 28
	"else"         reduce using rule 28
	"("            reduce using rule 28
	")"            reduce using rule 28
	"}"            reduce using rule 28
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	"!"            reduce using rule 28
	"||"           reduce using rule 28
	"&&"           reduce using rule 28
	string         reduce using rule 28
	id             reduce using rule 28


State 76

	eq_expr -> eq_expr "!=" rel_expr .                  (rule 31)
	rel_expr -> rel_expr . "<" add_expr                 (rule 33)
	rel_expr -> rel_expr . "<=" add_expr                (rule 34)
	rel_expr -> rel_expr . ">" add_expr                 (rule 35)
	rel_expr -> rel_expr . ">=" add_expr                (rule 36)

	num            reduce using rule 31
	"++"           reduce using rule 31
	"--"           reduce using rule 31
	"true"         reduce using rule 31
	"false"        reduce using rule 31
	"print"        reduce using rule 31
	"println"      reduce using rule 31
	"readln"       reduce using rule 31
	"val"          reduce using rule 31
	"var"          reduce using rule 31
	"while"        reduce using rule 31
	"if"           reduce using rule 31
	"else"         reduce using rule 31
	"("            reduce using rule 31
	")"            reduce using rule 31
	"}"            reduce using rule 31
	"=="           reduce using rule 31
	"!="           reduce using rule 31
	">"            shift, and enter state 62
	"<"            shift, and enter state 63
	">="           shift, and enter state 64
	"<="           shift, and enter state 65
	"!"            reduce using rule 31
	"||"           reduce using rule 31
	"&&"           reduce using rule 31
	string         reduce using rule 31
	id             reduce using rule 31


State 77

	eq_expr -> eq_expr "==" rel_expr .                  (rule 30)
	rel_expr -> rel_expr . "<" add_expr                 (rule 33)
	rel_expr -> rel_expr . "<=" add_expr                (rule 34)
	rel_expr -> rel_expr . ">" add_expr                 (rule 35)
	rel_expr -> rel_expr . ">=" add_expr                (rule 36)

	num            reduce using rule 30
	"++"           reduce using rule 30
	"--"           reduce using rule 30
	"true"         reduce using rule 30
	"false"        reduce using rule 30
	"print"        reduce using rule 30
	"println"      reduce using rule 30
	"readln"       reduce using rule 30
	"val"          reduce using rule 30
	"var"          reduce using rule 30
	"while"        reduce using rule 30
	"if"           reduce using rule 30
	"else"         reduce using rule 30
	"("            reduce using rule 30
	")"            reduce using rule 30
	"}"            reduce using rule 30
	"=="           reduce using rule 30
	"!="           reduce using rule 30
	">"            shift, and enter state 62
	"<"            shift, and enter state 63
	">="           shift, and enter state 64
	"<="           shift, and enter state 65
	"!"            reduce using rule 30
	"||"           reduce using rule 30
	"&&"           reduce using rule 30
	string         reduce using rule 30
	id             reduce using rule 30


State 78

	rel_expr -> rel_expr "<=" add_expr .                (rule 34)
	add_expr -> add_expr . "+" mul_expr                 (rule 38)
	add_expr -> add_expr . "-" mul_expr                 (rule 39)

	num            reduce using rule 34
	"+"            shift, and enter state 60
	"-"            shift, and enter state 61
	"++"           reduce using rule 34
	"--"           reduce using rule 34
	"true"         reduce using rule 34
	"false"        reduce using rule 34
	"print"        reduce using rule 34
	"println"      reduce using rule 34
	"readln"       reduce using rule 34
	"val"          reduce using rule 34
	"var"          reduce using rule 34
	"while"        reduce using rule 34
	"if"           reduce using rule 34
	"else"         reduce using rule 34
	"("            reduce using rule 34
	")"            reduce using rule 34
	"}"            reduce using rule 34
	"=="           reduce using rule 34
	"!="           reduce using rule 34
	">"            reduce using rule 34
	"<"            reduce using rule 34
	">="           reduce using rule 34
	"<="           reduce using rule 34
	"!"            reduce using rule 34
	"||"           reduce using rule 34
	"&&"           reduce using rule 34
	string         reduce using rule 34
	id             reduce using rule 34


State 79

	rel_expr -> rel_expr ">=" add_expr .                (rule 36)
	add_expr -> add_expr . "+" mul_expr                 (rule 38)
	add_expr -> add_expr . "-" mul_expr                 (rule 39)

	num            reduce using rule 36
	"+"            shift, and enter state 60
	"-"            shift, and enter state 61
	"++"           reduce using rule 36
	"--"           reduce using rule 36
	"true"         reduce using rule 36
	"false"        reduce using rule 36
	"print"        reduce using rule 36
	"println"      reduce using rule 36
	"readln"       reduce using rule 36
	"val"          reduce using rule 36
	"var"          reduce using rule 36
	"while"        reduce using rule 36
	"if"           reduce using rule 36
	"else"         reduce using rule 36
	"("            reduce using rule 36
	")"            reduce using rule 36
	"}"            reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	">"            reduce using rule 36
	"<"            reduce using rule 36
	">="           reduce using rule 36
	"<="           reduce using rule 36
	"!"            reduce using rule 36
	"||"           reduce using rule 36
	"&&"           reduce using rule 36
	string         reduce using rule 36
	id             reduce using rule 36


State 80

	rel_expr -> rel_expr "<" add_expr .                 (rule 33)
	add_expr -> add_expr . "+" mul_expr                 (rule 38)
	add_expr -> add_expr . "-" mul_expr                 (rule 39)

	num            reduce using rule 33
	"+"            shift, and enter state 60
	"-"            shift, and enter state 61
	"++"           reduce using rule 33
	"--"           reduce using rule 33
	"true"         reduce using rule 33
	"false"        reduce using rule 33
	"print"        reduce using rule 33
	"println"      reduce using rule 33
	"readln"       reduce using rule 33
	"val"          reduce using rule 33
	"var"          reduce using rule 33
	"while"        reduce using rule 33
	"if"           reduce using rule 33
	"else"         reduce using rule 33
	"("            reduce using rule 33
	")"            reduce using rule 33
	"}"            reduce using rule 33
	"=="           reduce using rule 33
	"!="           reduce using rule 33
	">"            reduce using rule 33
	"<"            reduce using rule 33
	">="           reduce using rule 33
	"<="           reduce using rule 33
	"!"            reduce using rule 33
	"||"           reduce using rule 33
	"&&"           reduce using rule 33
	string         reduce using rule 33
	id             reduce using rule 33


State 81

	rel_expr -> rel_expr ">" add_expr .                 (rule 35)
	add_expr -> add_expr . "+" mul_expr                 (rule 38)
	add_expr -> add_expr . "-" mul_expr                 (rule 39)

	num            reduce using rule 35
	"+"            shift, and enter state 60
	"-"            shift, and enter state 61
	"++"           reduce using rule 35
	"--"           reduce using rule 35
	"true"         reduce using rule 35
	"false"        reduce using rule 35
	"print"        reduce using rule 35
	"println"      reduce using rule 35
	"readln"       reduce using rule 35
	"val"          reduce using rule 35
	"var"          reduce using rule 35
	"while"        reduce using rule 35
	"if"           reduce using rule 35
	"else"         reduce using rule 35
	"("            reduce using rule 35
	")"            reduce using rule 35
	"}"            reduce using rule 35
	"=="           reduce using rule 35
	"!="           reduce using rule 35
	">"            reduce using rule 35
	"<"            reduce using rule 35
	">="           reduce using rule 35
	"<="           reduce using rule 35
	"!"            reduce using rule 35
	"||"           reduce using rule 35
	"&&"           reduce using rule 35
	string         reduce using rule 35
	id             reduce using rule 35


State 82

	add_expr -> add_expr "-" mul_expr .                 (rule 39)
	mul_expr -> mul_expr . "*" unary_expr               (rule 41)
	mul_expr -> mul_expr . "/" unary_expr               (rule 42)
	mul_expr -> mul_expr . "%" unary_expr               (rule 43)

	num            reduce using rule 39
	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"*"            shift, and enter state 57
	"/"            shift, and enter state 58
	"%"            shift, and enter state 59
	"++"           reduce using rule 39
	"--"           reduce using rule 39
	"true"         reduce using rule 39
	"false"        reduce using rule 39
	"print"        reduce using rule 39
	"println"      reduce using rule 39
	"readln"       reduce using rule 39
	"val"          reduce using rule 39
	"var"          reduce using rule 39
	"while"        reduce using rule 39
	"if"           reduce using rule 39
	"else"         reduce using rule 39
	"("            reduce using rule 39
	")"            reduce using rule 39
	"}"            reduce using rule 39
	"=="           reduce using rule 39
	"!="           reduce using rule 39
	">"            reduce using rule 39
	"<"            reduce using rule 39
	">="           reduce using rule 39
	"<="           reduce using rule 39
	"!"            reduce using rule 39
	"||"           reduce using rule 39
	"&&"           reduce using rule 39
	string         reduce using rule 39
	id             reduce using rule 39


State 83

	add_expr -> add_expr "+" mul_expr .                 (rule 38)
	mul_expr -> mul_expr . "*" unary_expr               (rule 41)
	mul_expr -> mul_expr . "/" unary_expr               (rule 42)
	mul_expr -> mul_expr . "%" unary_expr               (rule 43)

	num            reduce using rule 38
	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"*"            shift, and enter state 57
	"/"            shift, and enter state 58
	"%"            shift, and enter state 59
	"++"           reduce using rule 38
	"--"           reduce using rule 38
	"true"         reduce using rule 38
	"false"        reduce using rule 38
	"print"        reduce using rule 38
	"println"      reduce using rule 38
	"readln"       reduce using rule 38
	"val"          reduce using rule 38
	"var"          reduce using rule 38
	"while"        reduce using rule 38
	"if"           reduce using rule 38
	"else"         reduce using rule 38
	"("            reduce using rule 38
	")"            reduce using rule 38
	"}"            reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	">"            reduce using rule 38
	"<"            reduce using rule 38
	">="           reduce using rule 38
	"<="           reduce using rule 38
	"!"            reduce using rule 38
	"||"           reduce using rule 38
	"&&"           reduce using rule 38
	string         reduce using rule 38
	id             reduce using rule 38


State 84

	mul_expr -> mul_expr "%" unary_expr .               (rule 43)

	num            reduce using rule 43
	"+"            reduce using rule 43
	"-"            reduce using rule 43
	"*"            reduce using rule 43
	"/"            reduce using rule 43
	"%"            reduce using rule 43
	"++"           reduce using rule 43
	"--"           reduce using rule 43
	"true"         reduce using rule 43
	"false"        reduce using rule 43
	"print"        reduce using rule 43
	"println"      reduce using rule 43
	"readln"       reduce using rule 43
	"val"          reduce using rule 43
	"var"          reduce using rule 43
	"while"        reduce using rule 43
	"if"           reduce using rule 43
	"else"         reduce using rule 43
	"("            reduce using rule 43
	")"            reduce using rule 43
	"}"            reduce using rule 43
	"=="           reduce using rule 43
	"!="           reduce using rule 43
	">"            reduce using rule 43
	"<"            reduce using rule 43
	">="           reduce using rule 43
	"<="           reduce using rule 43
	"!"            reduce using rule 43
	"||"           reduce using rule 43
	"&&"           reduce using rule 43
	string         reduce using rule 43
	id             reduce using rule 43


State 85

	mul_expr -> mul_expr "/" unary_expr .               (rule 42)

	num            reduce using rule 42
	"+"            reduce using rule 42
	"-"            reduce using rule 42
	"*"            reduce using rule 42
	"/"            reduce using rule 42
	"%"            reduce using rule 42
	"++"           reduce using rule 42
	"--"           reduce using rule 42
	"true"         reduce using rule 42
	"false"        reduce using rule 42
	"print"        reduce using rule 42
	"println"      reduce using rule 42
	"readln"       reduce using rule 42
	"val"          reduce using rule 42
	"var"          reduce using rule 42
	"while"        reduce using rule 42
	"if"           reduce using rule 42
	"else"         reduce using rule 42
	"("            reduce using rule 42
	")"            reduce using rule 42
	"}"            reduce using rule 42
	"=="           reduce using rule 42
	"!="           reduce using rule 42
	">"            reduce using rule 42
	"<"            reduce using rule 42
	">="           reduce using rule 42
	"<="           reduce using rule 42
	"!"            reduce using rule 42
	"||"           reduce using rule 42
	"&&"           reduce using rule 42
	string         reduce using rule 42
	id             reduce using rule 42


State 86

	mul_expr -> mul_expr "*" unary_expr .               (rule 41)

	num            reduce using rule 41
	"+"            reduce using rule 41
	"-"            reduce using rule 41
	"*"            reduce using rule 41
	"/"            reduce using rule 41
	"%"            reduce using rule 41
	"++"           reduce using rule 41
	"--"           reduce using rule 41
	"true"         reduce using rule 41
	"false"        reduce using rule 41
	"print"        reduce using rule 41
	"println"      reduce using rule 41
	"readln"       reduce using rule 41
	"val"          reduce using rule 41
	"var"          reduce using rule 41
	"while"        reduce using rule 41
	"if"           reduce using rule 41
	"else"         reduce using rule 41
	"("            reduce using rule 41
	")"            reduce using rule 41
	"}"            reduce using rule 41
	"=="           reduce using rule 41
	"!="           reduce using rule 41
	">"            reduce using rule 41
	"<"            reduce using rule 41
	">="           reduce using rule 41
	"<="           reduce using rule 41
	"!"            reduce using rule 41
	"||"           reduce using rule 41
	"&&"           reduce using rule 41
	string         reduce using rule 41
	id             reduce using rule 41


State 87

	stmt -> "print" "(" expr . ")"                      (rule 10)

	")"            shift, and enter state 106


State 88

	stmt -> "println" "(" expr . ")"                    (rule 11)

	")"            shift, and enter state 105


State 89

	expr -> "readln" "(" ")" .                          (rule 16)

	num            reduce using rule 16
	"++"           reduce using rule 16
	"--"           reduce using rule 16
	"true"         reduce using rule 16
	"false"        reduce using rule 16
	"print"        reduce using rule 16
	"println"      reduce using rule 16
	"readln"       reduce using rule 16
	"val"          reduce using rule 16
	"var"          reduce using rule 16
	"while"        reduce using rule 16
	"if"           reduce using rule 16
	"else"         reduce using rule 16
	"("            reduce using rule 16
	")"            reduce using rule 16
	"}"            reduce using rule 16
	"!"            reduce using rule 16
	string         reduce using rule 16
	id             reduce using rule 16


State 90

	decl_stmt -> "val" id "=" . expr                    (rule 54)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 104
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 91

	decl_stmt -> "var" id "=" . expr                    (rule 53)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 103
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 92

	while_stmt -> "while" "(" expr . ")" block          (rule 59)

	")"            shift, and enter state 102


State 93

	if_expr -> "if" "(" expr . ")" expr "else" expr     (rule 17)
	if_stmt -> "if" "(" expr . ")" stmt "else" stmt     (rule 55)
	if_stmt -> "if" "(" expr . ")" stmt                 (rule 56)
	if_stmt -> "if" "(" expr . ")" block "else" block    (rule 57)
	if_stmt -> "if" "(" expr . ")" block                (rule 58)

	")"            shift, and enter state 101


State 94

	primary -> "(" expr ")" .                           (rule 51)

	num            reduce using rule 51
	"+"            reduce using rule 51
	"-"            reduce using rule 51
	"*"            reduce using rule 51
	"/"            reduce using rule 51
	"%"            reduce using rule 51
	"++"           reduce using rule 51
	"--"           reduce using rule 51
	"true"         reduce using rule 51
	"false"        reduce using rule 51
	"print"        reduce using rule 51
	"println"      reduce using rule 51
	"readln"       reduce using rule 51
	"val"          reduce using rule 51
	"var"          reduce using rule 51
	"while"        reduce using rule 51
	"if"           reduce using rule 51
	"else"         reduce using rule 51
	"("            reduce using rule 51
	")"            reduce using rule 51
	"}"            reduce using rule 51
	"=="           reduce using rule 51
	"!="           reduce using rule 51
	">"            reduce using rule 51
	"<"            reduce using rule 51
	">="           reduce using rule 51
	"<="           reduce using rule 51
	"!"            reduce using rule 51
	"||"           reduce using rule 51
	"&&"           reduce using rule 51
	string         reduce using rule 51
	id             reduce using rule 51


State 95

	assign_stmt -> id "%=" expr .                       (rule 23)

	num            reduce using rule 23
	"true"         reduce using rule 23
	"false"        reduce using rule 23
	"print"        reduce using rule 23
	"println"      reduce using rule 23
	"readln"       reduce using rule 23
	"val"          reduce using rule 23
	"var"          reduce using rule 23
	"while"        reduce using rule 23
	"if"           reduce using rule 23
	"else"         reduce using rule 23
	"("            reduce using rule 23
	"}"            reduce using rule 23
	"!"            reduce using rule 23
	string         reduce using rule 23
	id             reduce using rule 23


State 96

	assign_stmt -> id "/=" expr .                       (rule 22)

	num            reduce using rule 22
	"true"         reduce using rule 22
	"false"        reduce using rule 22
	"print"        reduce using rule 22
	"println"      reduce using rule 22
	"readln"       reduce using rule 22
	"val"          reduce using rule 22
	"var"          reduce using rule 22
	"while"        reduce using rule 22
	"if"           reduce using rule 22
	"else"         reduce using rule 22
	"("            reduce using rule 22
	"}"            reduce using rule 22
	"!"            reduce using rule 22
	string         reduce using rule 22
	id             reduce using rule 22


State 97

	assign_stmt -> id "*=" expr .                       (rule 21)

	num            reduce using rule 21
	"true"         reduce using rule 21
	"false"        reduce using rule 21
	"print"        reduce using rule 21
	"println"      reduce using rule 21
	"readln"       reduce using rule 21
	"val"          reduce using rule 21
	"var"          reduce using rule 21
	"while"        reduce using rule 21
	"if"           reduce using rule 21
	"else"         reduce using rule 21
	"("            reduce using rule 21
	"}"            reduce using rule 21
	"!"            reduce using rule 21
	string         reduce using rule 21
	id             reduce using rule 21


State 98

	assign_stmt -> id "-=" expr .                       (rule 20)

	num            reduce using rule 20
	"true"         reduce using rule 20
	"false"        reduce using rule 20
	"print"        reduce using rule 20
	"println"      reduce using rule 20
	"readln"       reduce using rule 20
	"val"          reduce using rule 20
	"var"          reduce using rule 20
	"while"        reduce using rule 20
	"if"           reduce using rule 20
	"else"         reduce using rule 20
	"("            reduce using rule 20
	"}"            reduce using rule 20
	"!"            reduce using rule 20
	string         reduce using rule 20
	id             reduce using rule 20


State 99

	assign_stmt -> id "+=" expr .                       (rule 19)

	num            reduce using rule 19
	"true"         reduce using rule 19
	"false"        reduce using rule 19
	"print"        reduce using rule 19
	"println"      reduce using rule 19
	"readln"       reduce using rule 19
	"val"          reduce using rule 19
	"var"          reduce using rule 19
	"while"        reduce using rule 19
	"if"           reduce using rule 19
	"else"         reduce using rule 19
	"("            reduce using rule 19
	"}"            reduce using rule 19
	"!"            reduce using rule 19
	string         reduce using rule 19
	id             reduce using rule 19


State 100

	assign_stmt -> id "=" expr .                        (rule 18)

	num            reduce using rule 18
	"true"         reduce using rule 18
	"false"        reduce using rule 18
	"print"        reduce using rule 18
	"println"      reduce using rule 18
	"readln"       reduce using rule 18
	"val"          reduce using rule 18
	"var"          reduce using rule 18
	"while"        reduce using rule 18
	"if"           reduce using rule 18
	"else"         reduce using rule 18
	"("            reduce using rule 18
	"}"            reduce using rule 18
	"!"            reduce using rule 18
	string         reduce using rule 18
	id             reduce using rule 18


State 101

	if_expr -> "if" "(" expr ")" . expr "else" expr     (rule 17)
	if_stmt -> "if" "(" expr ")" . stmt "else" stmt     (rule 55)
	if_stmt -> "if" "(" expr ")" . stmt                 (rule 56)
	if_stmt -> "if" "(" expr ")" . block "else" block    (rule 57)
	if_stmt -> "if" "(" expr ")" . block                (rule 58)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"print"        shift, and enter state 30
	"println"      shift, and enter state 31
	"readln"       shift, and enter state 32
	"val"          shift, and enter state 33
	"var"          shift, and enter state 34
	"while"        shift, and enter state 35
	"if"           shift, and enter state 36
	"("            shift, and enter state 37
	"{"            shift, and enter state 8
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 40

	block          goto state 108
	stmt           goto state 109
	expr_stmt      goto state 11
	if_expr_stmt   goto state 12
	expr           goto state 110
	if_expr        goto state 14
	assign_stmt    goto state 15
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23
	decl_stmt      goto state 24
	if_stmt        goto state 25
	while_stmt     goto state 26

State 102

	while_stmt -> "while" "(" expr ")" . block          (rule 59)

	"{"            shift, and enter state 8

	block          goto state 107

State 103

	decl_stmt -> "var" id "=" expr .                    (rule 53)

	num            reduce using rule 53
	"true"         reduce using rule 53
	"false"        reduce using rule 53
	"print"        reduce using rule 53
	"println"      reduce using rule 53
	"readln"       reduce using rule 53
	"val"          reduce using rule 53
	"var"          reduce using rule 53
	"while"        reduce using rule 53
	"if"           reduce using rule 53
	"else"         reduce using rule 53
	"("            reduce using rule 53
	"}"            reduce using rule 53
	"!"            reduce using rule 53
	string         reduce using rule 53
	id             reduce using rule 53


State 104

	decl_stmt -> "val" id "=" expr .                    (rule 54)

	num            reduce using rule 54
	"true"         reduce using rule 54
	"false"        reduce using rule 54
	"print"        reduce using rule 54
	"println"      reduce using rule 54
	"readln"       reduce using rule 54
	"val"          reduce using rule 54
	"var"          reduce using rule 54
	"while"        reduce using rule 54
	"if"           reduce using rule 54
	"else"         reduce using rule 54
	"("            reduce using rule 54
	"}"            reduce using rule 54
	"!"            reduce using rule 54
	string         reduce using rule 54
	id             reduce using rule 54


State 105

	stmt -> "println" "(" expr ")" .                    (rule 11)

	num            reduce using rule 11
	"true"         reduce using rule 11
	"false"        reduce using rule 11
	"print"        reduce using rule 11
	"println"      reduce using rule 11
	"readln"       reduce using rule 11
	"val"          reduce using rule 11
	"var"          reduce using rule 11
	"while"        reduce using rule 11
	"if"           reduce using rule 11
	"else"         reduce using rule 11
	"("            reduce using rule 11
	"}"            reduce using rule 11
	"!"            reduce using rule 11
	string         reduce using rule 11
	id             reduce using rule 11


State 106

	stmt -> "print" "(" expr ")" .                      (rule 10)

	num            reduce using rule 10
	"true"         reduce using rule 10
	"false"        reduce using rule 10
	"print"        reduce using rule 10
	"println"      reduce using rule 10
	"readln"       reduce using rule 10
	"val"          reduce using rule 10
	"var"          reduce using rule 10
	"while"        reduce using rule 10
	"if"           reduce using rule 10
	"else"         reduce using rule 10
	"("            reduce using rule 10
	"}"            reduce using rule 10
	"!"            reduce using rule 10
	string         reduce using rule 10
	id             reduce using rule 10


State 107

	while_stmt -> "while" "(" expr ")" block .          (rule 59)

	num            reduce using rule 59
	"true"         reduce using rule 59
	"false"        reduce using rule 59
	"print"        reduce using rule 59
	"println"      reduce using rule 59
	"readln"       reduce using rule 59
	"val"          reduce using rule 59
	"var"          reduce using rule 59
	"while"        reduce using rule 59
	"if"           reduce using rule 59
	"else"         reduce using rule 59
	"("            reduce using rule 59
	"}"            reduce using rule 59
	"!"            reduce using rule 59
	string         reduce using rule 59
	id             reduce using rule 59


State 108

	if_stmt -> "if" "(" expr ")" block . "else" block    (rule 57)
	if_stmt -> "if" "(" expr ")" block .                (rule 58)

	num            reduce using rule 58
	"true"         reduce using rule 58
	"false"        reduce using rule 58
	"print"        reduce using rule 58
	"println"      reduce using rule 58
	"readln"       reduce using rule 58
	"val"          reduce using rule 58
	"var"          reduce using rule 58
	"while"        reduce using rule 58
	"if"           reduce using rule 58
	"else"         shift, and enter state 113
			(reduce using rule 58)

	"("            reduce using rule 58
	"}"            reduce using rule 58
	"!"            reduce using rule 58
	string         reduce using rule 58
	id             reduce using rule 58


State 109

	if_stmt -> "if" "(" expr ")" stmt . "else" stmt     (rule 55)
	if_stmt -> "if" "(" expr ")" stmt .                 (rule 56)

	num            reduce using rule 56
	"true"         reduce using rule 56
	"false"        reduce using rule 56
	"print"        reduce using rule 56
	"println"      reduce using rule 56
	"readln"       reduce using rule 56
	"val"          reduce using rule 56
	"var"          reduce using rule 56
	"while"        reduce using rule 56
	"if"           reduce using rule 56
	"else"         shift, and enter state 112
			(reduce using rule 56)

	"("            reduce using rule 56
	"}"            reduce using rule 56
	"!"            reduce using rule 56
	string         reduce using rule 56
	id             reduce using rule 56


State 110

	expr_stmt -> expr .                                 (rule 13)
	if_expr -> "if" "(" expr ")" expr . "else" expr     (rule 17)
	assign_stmt -> expr . "++"                          (rule 24)
	assign_stmt -> expr . "--"                          (rule 25)

	num            reduce using rule 13
	"++"           shift, and enter state 70
	"--"           shift, and enter state 71
	"true"         reduce using rule 13
	"false"        reduce using rule 13
	"print"        reduce using rule 13
	"println"      reduce using rule 13
	"readln"       reduce using rule 13
	"val"          reduce using rule 13
	"var"          reduce using rule 13
	"while"        reduce using rule 13
	"if"           reduce using rule 13
	"else"         shift, and enter state 111
			(reduce using rule 13)

	"("            reduce using rule 13
	"}"            reduce using rule 13
	"!"            reduce using rule 13
	string         reduce using rule 13
	id             reduce using rule 13


State 111

	if_expr -> "if" "(" expr ")" expr "else" . expr     (rule 17)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"readln"       shift, and enter state 32
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 48

	expr           goto state 116
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23

State 112

	if_stmt -> "if" "(" expr ")" stmt "else" . stmt     (rule 55)

	num            shift, and enter state 27
	"true"         shift, and enter state 28
	"false"        shift, and enter state 29
	"print"        shift, and enter state 30
	"println"      shift, and enter state 31
	"readln"       shift, and enter state 32
	"val"          shift, and enter state 33
	"var"          shift, and enter state 34
	"while"        shift, and enter state 35
	"if"           shift, and enter state 36
	"("            shift, and enter state 37
	"!"            shift, and enter state 38
	string         shift, and enter state 39
	id             shift, and enter state 40

	stmt           goto state 115
	expr_stmt      goto state 11
	if_expr_stmt   goto state 12
	expr           goto state 13
	if_expr        goto state 14
	assign_stmt    goto state 15
	or_expr        goto state 16
	and_expr       goto state 17
	eq_expr        goto state 18
	rel_expr       goto state 19
	add_expr       goto state 20
	mul_expr       goto state 21
	unary_expr     goto state 22
	primary        goto state 23
	decl_stmt      goto state 24
	if_stmt        goto state 25
	while_stmt     goto state 26

State 113

	if_stmt -> "if" "(" expr ")" block "else" . block    (rule 57)

	"{"            shift, and enter state 8

	block          goto state 114

State 114

	if_stmt -> "if" "(" expr ")" block "else" block .    (rule 57)

	num            reduce using rule 57
	"true"         reduce using rule 57
	"false"        reduce using rule 57
	"print"        reduce using rule 57
	"println"      reduce using rule 57
	"readln"       reduce using rule 57
	"val"          reduce using rule 57
	"var"          reduce using rule 57
	"while"        reduce using rule 57
	"if"           reduce using rule 57
	"else"         reduce using rule 57
	"("            reduce using rule 57
	"}"            reduce using rule 57
	"!"            reduce using rule 57
	string         reduce using rule 57
	id             reduce using rule 57


State 115

	if_stmt -> "if" "(" expr ")" stmt "else" stmt .     (rule 55)

	num            reduce using rule 55
	"true"         reduce using rule 55
	"false"        reduce using rule 55
	"print"        reduce using rule 55
	"println"      reduce using rule 55
	"readln"       reduce using rule 55
	"val"          reduce using rule 55
	"var"          reduce using rule 55
	"while"        reduce using rule 55
	"if"           reduce using rule 55
	"else"         reduce using rule 55
	"("            reduce using rule 55
	"}"            reduce using rule 55
	"!"            reduce using rule 55
	string         reduce using rule 55
	id             reduce using rule 55


State 116

	if_expr -> "if" "(" expr ")" expr "else" expr .     (rule 17)

	num            reduce using rule 17
	"true"         reduce using rule 17
	"false"        reduce using rule 17
	"print"        reduce using rule 17
	"println"      reduce using rule 17
	"readln"       reduce using rule 17
	"val"          reduce using rule 17
	"var"          reduce using rule 17
	"while"        reduce using rule 17
	"if"           reduce using rule 17
	"else"         reduce using rule 17
	"("            reduce using rule 17
	"}"            reduce using rule 17
	"!"            reduce using rule 17
	string         reduce using rule 17
	id             reduce using rule 17


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 60
Number of terminals: 41
Number of non-terminals: 21
Number of states: 117
